2024-11-19 12:01:40,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 12:01:40,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 12:01:40,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 12:01:40,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 13:19:45,903:INFO:PyCaret ClassificationExperiment
2024-11-19 13:19:45,903:INFO:Logging name: clf-default-name
2024-11-19 13:19:45,904:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-19 13:19:45,904:INFO:version 3.3.2
2024-11-19 13:19:45,904:INFO:Initializing setup()
2024-11-19 13:19:45,904:INFO:self.USI: 32ad
2024-11-19 13:19:45,904:INFO:self._variable_keys: {'X_train', 'fix_imbalance', 'html_param', 'y_test', 'seed', 'pipeline', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'idx', 'y', '_available_plots', 'target_param', 'log_plots_param', 'data', 'X', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', 'n_jobs_param', 'USI', 'logging_param', 'exp_id', 'is_multiclass', 'y_train', '_ml_usecase', 'fold_groups_param'}
2024-11-19 13:19:45,904:INFO:Checking environment
2024-11-19 13:19:45,904:INFO:python_version: 3.9.6
2024-11-19 13:19:45,904:INFO:python_build: ('default', 'Aug  9 2024 14:24:13')
2024-11-19 13:19:45,904:INFO:machine: arm64
2024-11-19 13:19:45,904:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-11-19 13:19:45,904:INFO:Memory: svmem(total=17179869184, available=5277564928, percent=69.3, used=7286358016, free=67371008, active=5219418112, inactive=5206982656, wired=2066939904)
2024-11-19 13:19:45,904:INFO:Physical Core: 10
2024-11-19 13:19:45,904:INFO:Logical Core: 10
2024-11-19 13:19:45,904:INFO:Checking libraries
2024-11-19 13:19:45,904:INFO:System:
2024-11-19 13:19:45,904:INFO:    python: 3.9.6 (default, Aug  9 2024, 14:24:13)  [Clang 16.0.0 (clang-1600.0.26.3)]
2024-11-19 13:19:45,904:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-19 13:19:45,904:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-11-19 13:19:45,904:INFO:PyCaret required dependencies:
2024-11-19 13:19:46,450:INFO:                 pip: 24.3.1
2024-11-19 13:19:46,450:INFO:          setuptools: 58.0.4
2024-11-19 13:19:46,450:INFO:             pycaret: 3.3.2
2024-11-19 13:19:46,450:INFO:             IPython: 8.18.1
2024-11-19 13:19:46,450:INFO:          ipywidgets: 8.1.5
2024-11-19 13:19:46,450:INFO:                tqdm: 4.67.0
2024-11-19 13:19:46,450:INFO:               numpy: 1.26.4
2024-11-19 13:19:46,450:INFO:              pandas: 2.1.4
2024-11-19 13:19:46,450:INFO:              jinja2: 3.1.4
2024-11-19 13:19:46,450:INFO:               scipy: 1.11.4
2024-11-19 13:19:46,450:INFO:              joblib: 1.3.2
2024-11-19 13:19:46,450:INFO:             sklearn: 1.4.2
2024-11-19 13:19:46,450:INFO:                pyod: 2.0.2
2024-11-19 13:19:46,450:INFO:            imblearn: 0.12.4
2024-11-19 13:19:46,450:INFO:   category_encoders: 2.6.4
2024-11-19 13:19:46,450:INFO:            lightgbm: 4.5.0
2024-11-19 13:19:46,450:INFO:               numba: 0.60.0
2024-11-19 13:19:46,450:INFO:            requests: 2.32.3
2024-11-19 13:19:46,450:INFO:          matplotlib: 3.7.5
2024-11-19 13:19:46,450:INFO:          scikitplot: 0.3.7
2024-11-19 13:19:46,450:INFO:         yellowbrick: 1.5
2024-11-19 13:19:46,450:INFO:              plotly: 5.24.1
2024-11-19 13:19:46,450:INFO:    plotly-resampler: Not installed
2024-11-19 13:19:46,450:INFO:             kaleido: 0.4.2
2024-11-19 13:19:46,450:INFO:           schemdraw: 0.15
2024-11-19 13:19:46,450:INFO:         statsmodels: 0.14.4
2024-11-19 13:19:46,450:INFO:              sktime: 0.26.0
2024-11-19 13:19:46,450:INFO:               tbats: 1.1.3
2024-11-19 13:19:46,450:INFO:            pmdarima: 2.0.4
2024-11-19 13:19:46,450:INFO:              psutil: 6.1.0
2024-11-19 13:19:46,450:INFO:          markupsafe: 3.0.2
2024-11-19 13:19:46,450:INFO:             pickle5: Not installed
2024-11-19 13:19:46,450:INFO:         cloudpickle: 3.1.0
2024-11-19 13:19:46,450:INFO:         deprecation: 2.1.0
2024-11-19 13:19:46,450:INFO:              xxhash: 3.5.0
2024-11-19 13:19:46,451:INFO:           wurlitzer: 3.1.1
2024-11-19 13:19:46,451:INFO:PyCaret optional dependencies:
2024-11-19 13:19:46,459:INFO:                shap: Not installed
2024-11-19 13:19:46,459:INFO:           interpret: Not installed
2024-11-19 13:19:46,459:INFO:                umap: Not installed
2024-11-19 13:19:46,459:INFO:     ydata_profiling: Not installed
2024-11-19 13:19:46,459:INFO:  explainerdashboard: Not installed
2024-11-19 13:19:46,460:INFO:             autoviz: Not installed
2024-11-19 13:19:46,460:INFO:           fairlearn: Not installed
2024-11-19 13:19:46,460:INFO:          deepchecks: Not installed
2024-11-19 13:19:46,460:INFO:             xgboost: Not installed
2024-11-19 13:19:46,460:INFO:            catboost: Not installed
2024-11-19 13:19:46,460:INFO:              kmodes: Not installed
2024-11-19 13:19:46,460:INFO:             mlxtend: Not installed
2024-11-19 13:19:46,460:INFO:       statsforecast: Not installed
2024-11-19 13:19:46,460:INFO:        tune_sklearn: Not installed
2024-11-19 13:19:46,460:INFO:                 ray: Not installed
2024-11-19 13:19:46,460:INFO:            hyperopt: Not installed
2024-11-19 13:19:46,460:INFO:              optuna: Not installed
2024-11-19 13:19:46,460:INFO:               skopt: Not installed
2024-11-19 13:19:46,460:INFO:              mlflow: Not installed
2024-11-19 13:19:46,460:INFO:              gradio: Not installed
2024-11-19 13:19:46,460:INFO:             fastapi: Not installed
2024-11-19 13:19:46,460:INFO:             uvicorn: Not installed
2024-11-19 13:19:46,460:INFO:              m2cgen: Not installed
2024-11-19 13:19:46,460:INFO:           evidently: Not installed
2024-11-19 13:19:46,460:INFO:               fugue: Not installed
2024-11-19 13:19:46,460:INFO:           streamlit: Not installed
2024-11-19 13:19:46,460:INFO:             prophet: Not installed
2024-11-19 13:19:46,460:INFO:None
2024-11-19 13:19:46,460:INFO:Set up data.
2024-11-19 13:19:46,481:INFO:Set up folding strategy.
2024-11-19 13:19:46,481:INFO:Set up train/test split.
2024-11-19 13:19:46,659:INFO:Set up index.
2024-11-19 13:19:46,660:INFO:Assigning column types.
2024-11-19 13:19:46,670:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-19 13:19:46,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-19 13:19:46,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:19:46,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,735:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-19 13:19:46,736:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:19:46,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,748:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-19 13:19:46,767:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:19:46,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,799:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:19:46,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,811:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-19 13:19:46,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:46,877:INFO:Preparing preprocessing pipeline...
2024-11-19 13:19:46,878:INFO:Set up simple imputation.
2024-11-19 13:19:46,884:INFO:Set up encoding of ordinal features.
2024-11-19 13:19:46,886:INFO:Set up encoding of categorical features.
2024-11-19 13:19:46,997:INFO:Finished creating preprocessing pipeline.
2024-11-19 13:19:47,006:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                               mapping=[{'col': 'gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-19 13:19:47,006:INFO:Creating final display dataframe.
2024-11-19 13:19:47,247:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape       (76222, 12)
4        Transformed data shape       (76222, 14)
5   Transformed train set shape       (53355, 14)
6    Transformed test set shape       (22867, 14)
7              Numeric features                 9
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              32ad
2024-11-19 13:19:47,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:47,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:47,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:47,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:19:47,318:INFO:setup() successfully completed in 1.42s...............
2024-11-19 13:23:00,595:INFO:PyCaret ClassificationExperiment
2024-11-19 13:23:00,596:INFO:Logging name: clf-default-name
2024-11-19 13:23:00,596:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-19 13:23:00,596:INFO:version 3.3.2
2024-11-19 13:23:00,596:INFO:Initializing setup()
2024-11-19 13:23:00,596:INFO:self.USI: cb20
2024-11-19 13:23:00,596:INFO:self._variable_keys: {'X_train', 'fix_imbalance', 'html_param', 'y_test', 'seed', 'pipeline', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'idx', 'y', '_available_plots', 'target_param', 'log_plots_param', 'data', 'X', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', 'n_jobs_param', 'USI', 'logging_param', 'exp_id', 'is_multiclass', 'y_train', '_ml_usecase', 'fold_groups_param'}
2024-11-19 13:23:00,596:INFO:Checking environment
2024-11-19 13:23:00,596:INFO:python_version: 3.9.6
2024-11-19 13:23:00,596:INFO:python_build: ('default', 'Aug  9 2024 14:24:13')
2024-11-19 13:23:00,596:INFO:machine: arm64
2024-11-19 13:23:00,596:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-11-19 13:23:00,596:INFO:Memory: svmem(total=17179869184, available=5260115968, percent=69.4, used=7304216576, free=64454656, active=5218074624, inactive=5193728000, wired=2086141952)
2024-11-19 13:23:00,596:INFO:Physical Core: 10
2024-11-19 13:23:00,596:INFO:Logical Core: 10
2024-11-19 13:23:00,596:INFO:Checking libraries
2024-11-19 13:23:00,596:INFO:System:
2024-11-19 13:23:00,596:INFO:    python: 3.9.6 (default, Aug  9 2024, 14:24:13)  [Clang 16.0.0 (clang-1600.0.26.3)]
2024-11-19 13:23:00,596:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-19 13:23:00,597:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-11-19 13:23:00,597:INFO:PyCaret required dependencies:
2024-11-19 13:23:00,597:INFO:                 pip: 24.3.1
2024-11-19 13:23:00,597:INFO:          setuptools: 58.0.4
2024-11-19 13:23:00,597:INFO:             pycaret: 3.3.2
2024-11-19 13:23:00,597:INFO:             IPython: 8.18.1
2024-11-19 13:23:00,597:INFO:          ipywidgets: 8.1.5
2024-11-19 13:23:00,597:INFO:                tqdm: 4.67.0
2024-11-19 13:23:00,597:INFO:               numpy: 1.26.4
2024-11-19 13:23:00,597:INFO:              pandas: 2.1.4
2024-11-19 13:23:00,597:INFO:              jinja2: 3.1.4
2024-11-19 13:23:00,597:INFO:               scipy: 1.11.4
2024-11-19 13:23:00,597:INFO:              joblib: 1.3.2
2024-11-19 13:23:00,597:INFO:             sklearn: 1.4.2
2024-11-19 13:23:00,597:INFO:                pyod: 2.0.2
2024-11-19 13:23:00,597:INFO:            imblearn: 0.12.4
2024-11-19 13:23:00,597:INFO:   category_encoders: 2.6.4
2024-11-19 13:23:00,597:INFO:            lightgbm: 4.5.0
2024-11-19 13:23:00,597:INFO:               numba: 0.60.0
2024-11-19 13:23:00,597:INFO:            requests: 2.32.3
2024-11-19 13:23:00,597:INFO:          matplotlib: 3.7.5
2024-11-19 13:23:00,597:INFO:          scikitplot: 0.3.7
2024-11-19 13:23:00,597:INFO:         yellowbrick: 1.5
2024-11-19 13:23:00,597:INFO:              plotly: 5.24.1
2024-11-19 13:23:00,597:INFO:    plotly-resampler: Not installed
2024-11-19 13:23:00,597:INFO:             kaleido: 0.4.2
2024-11-19 13:23:00,597:INFO:           schemdraw: 0.15
2024-11-19 13:23:00,597:INFO:         statsmodels: 0.14.4
2024-11-19 13:23:00,597:INFO:              sktime: 0.26.0
2024-11-19 13:23:00,597:INFO:               tbats: 1.1.3
2024-11-19 13:23:00,597:INFO:            pmdarima: 2.0.4
2024-11-19 13:23:00,597:INFO:              psutil: 6.1.0
2024-11-19 13:23:00,597:INFO:          markupsafe: 3.0.2
2024-11-19 13:23:00,597:INFO:             pickle5: Not installed
2024-11-19 13:23:00,597:INFO:         cloudpickle: 3.1.0
2024-11-19 13:23:00,597:INFO:         deprecation: 2.1.0
2024-11-19 13:23:00,597:INFO:              xxhash: 3.5.0
2024-11-19 13:23:00,597:INFO:           wurlitzer: 3.1.1
2024-11-19 13:23:00,598:INFO:PyCaret optional dependencies:
2024-11-19 13:23:00,598:INFO:                shap: Not installed
2024-11-19 13:23:00,598:INFO:           interpret: Not installed
2024-11-19 13:23:00,598:INFO:                umap: Not installed
2024-11-19 13:23:00,598:INFO:     ydata_profiling: Not installed
2024-11-19 13:23:00,598:INFO:  explainerdashboard: Not installed
2024-11-19 13:23:00,598:INFO:             autoviz: Not installed
2024-11-19 13:23:00,598:INFO:           fairlearn: Not installed
2024-11-19 13:23:00,598:INFO:          deepchecks: Not installed
2024-11-19 13:23:00,598:INFO:             xgboost: Not installed
2024-11-19 13:23:00,598:INFO:            catboost: Not installed
2024-11-19 13:23:00,598:INFO:              kmodes: Not installed
2024-11-19 13:23:00,598:INFO:             mlxtend: Not installed
2024-11-19 13:23:00,598:INFO:       statsforecast: Not installed
2024-11-19 13:23:00,598:INFO:        tune_sklearn: Not installed
2024-11-19 13:23:00,598:INFO:                 ray: Not installed
2024-11-19 13:23:00,598:INFO:            hyperopt: Not installed
2024-11-19 13:23:00,598:INFO:              optuna: Not installed
2024-11-19 13:23:00,598:INFO:               skopt: Not installed
2024-11-19 13:23:00,598:INFO:              mlflow: Not installed
2024-11-19 13:23:00,598:INFO:              gradio: Not installed
2024-11-19 13:23:00,598:INFO:             fastapi: Not installed
2024-11-19 13:23:00,598:INFO:             uvicorn: Not installed
2024-11-19 13:23:00,598:INFO:              m2cgen: Not installed
2024-11-19 13:23:00,598:INFO:           evidently: Not installed
2024-11-19 13:23:00,598:INFO:               fugue: Not installed
2024-11-19 13:23:00,598:INFO:           streamlit: Not installed
2024-11-19 13:23:00,598:INFO:             prophet: Not installed
2024-11-19 13:23:00,598:INFO:None
2024-11-19 13:23:00,598:INFO:Set up data.
2024-11-19 13:23:00,619:INFO:Set up folding strategy.
2024-11-19 13:23:00,620:INFO:Set up train/test split.
2024-11-19 13:23:00,639:INFO:Set up index.
2024-11-19 13:23:00,640:INFO:Assigning column types.
2024-11-19 13:23:00,647:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-19 13:23:00,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-19 13:23:00,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:23:00,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-19 13:23:00,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:23:00,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,711:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-19 13:23:00,730:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:23:00,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,762:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 13:23:00,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,774:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-19 13:23:00,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:00,840:INFO:Preparing preprocessing pipeline...
2024-11-19 13:23:00,841:INFO:Set up simple imputation.
2024-11-19 13:23:00,846:INFO:Set up encoding of ordinal features.
2024-11-19 13:23:00,849:INFO:Set up encoding of categorical features.
2024-11-19 13:23:00,849:INFO:Set up feature normalization.
2024-11-19 13:23:00,988:INFO:Finished creating preprocessing pipeline.
2024-11-19 13:23:00,995:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-19 13:23:00,995:INFO:Creating final display dataframe.
2024-11-19 13:23:01,266:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape       (76222, 12)
4        Transformed data shape       (76222, 14)
5   Transformed train set shape       (53355, 14)
6    Transformed test set shape       (22867, 14)
7              Numeric features                 9
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              cb20
2024-11-19 13:23:01,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:01,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:01,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:01,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 13:23:01,335:INFO:setup() successfully completed in 0.74s...............
2024-11-19 13:24:56,359:INFO:Initializing compare_models()
2024-11-19 13:24:56,360:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-19 13:24:56,360:INFO:Checking exceptions
2024-11-19 13:24:56,369:INFO:Preparing display monitor
2024-11-19 13:24:56,430:INFO:Initializing Logistic Regression
2024-11-19 13:24:56,430:INFO:Total runtime is 4.049142201741537e-06 minutes
2024-11-19 13:24:56,432:INFO:SubProcess create_model() called ==================================
2024-11-19 13:24:56,433:INFO:Initializing create_model()
2024-11-19 13:24:56,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:24:56,433:INFO:Checking exceptions
2024-11-19 13:24:56,433:INFO:Importing libraries
2024-11-19 13:24:56,433:INFO:Copying training dataset
2024-11-19 13:24:56,448:INFO:Defining folds
2024-11-19 13:24:56,448:INFO:Declaring metric variables
2024-11-19 13:24:56,450:INFO:Importing untrained model
2024-11-19 13:24:56,452:INFO:Logistic Regression Imported successfully
2024-11-19 13:24:56,456:INFO:Starting cross validation
2024-11-19 13:24:56,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:24:59,321:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,334:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,345:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,373:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,381:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,382:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,383:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,389:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,405:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,426:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:24:59,445:INFO:Calculating mean and std
2024-11-19 13:24:59,458:INFO:Creating metrics dataframe
2024-11-19 13:24:59,476:INFO:Uploading results into container
2024-11-19 13:24:59,478:INFO:Uploading model into container now
2024-11-19 13:24:59,479:INFO:_master_model_container: 1
2024-11-19 13:24:59,479:INFO:_display_container: 2
2024-11-19 13:24:59,480:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-19 13:24:59,480:INFO:create_model() successfully completed......................................
2024-11-19 13:24:59,569:INFO:SubProcess create_model() end ==================================
2024-11-19 13:24:59,569:INFO:Creating metrics dataframe
2024-11-19 13:24:59,572:INFO:Initializing K Neighbors Classifier
2024-11-19 13:24:59,572:INFO:Total runtime is 0.05236600240071615 minutes
2024-11-19 13:24:59,574:INFO:SubProcess create_model() called ==================================
2024-11-19 13:24:59,574:INFO:Initializing create_model()
2024-11-19 13:24:59,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:24:59,574:INFO:Checking exceptions
2024-11-19 13:24:59,574:INFO:Importing libraries
2024-11-19 13:24:59,574:INFO:Copying training dataset
2024-11-19 13:24:59,587:INFO:Defining folds
2024-11-19 13:24:59,588:INFO:Declaring metric variables
2024-11-19 13:24:59,589:INFO:Importing untrained model
2024-11-19 13:24:59,591:INFO:K Neighbors Classifier Imported successfully
2024-11-19 13:24:59,595:INFO:Starting cross validation
2024-11-19 13:24:59,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:03,187:INFO:Calculating mean and std
2024-11-19 13:25:03,188:INFO:Creating metrics dataframe
2024-11-19 13:25:03,189:INFO:Uploading results into container
2024-11-19 13:25:03,189:INFO:Uploading model into container now
2024-11-19 13:25:03,189:INFO:_master_model_container: 2
2024-11-19 13:25:03,189:INFO:_display_container: 2
2024-11-19 13:25:03,190:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-19 13:25:03,190:INFO:create_model() successfully completed......................................
2024-11-19 13:25:03,238:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:03,238:INFO:Creating metrics dataframe
2024-11-19 13:25:03,242:INFO:Initializing Naive Bayes
2024-11-19 13:25:03,243:INFO:Total runtime is 0.11353904803593953 minutes
2024-11-19 13:25:03,244:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:03,244:INFO:Initializing create_model()
2024-11-19 13:25:03,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:03,245:INFO:Checking exceptions
2024-11-19 13:25:03,245:INFO:Importing libraries
2024-11-19 13:25:03,245:INFO:Copying training dataset
2024-11-19 13:25:03,258:INFO:Defining folds
2024-11-19 13:25:03,258:INFO:Declaring metric variables
2024-11-19 13:25:03,259:INFO:Importing untrained model
2024-11-19 13:25:03,261:INFO:Naive Bayes Imported successfully
2024-11-19 13:25:03,264:INFO:Starting cross validation
2024-11-19 13:25:03,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:03,620:INFO:Calculating mean and std
2024-11-19 13:25:03,621:INFO:Creating metrics dataframe
2024-11-19 13:25:03,622:INFO:Uploading results into container
2024-11-19 13:25:03,622:INFO:Uploading model into container now
2024-11-19 13:25:03,622:INFO:_master_model_container: 3
2024-11-19 13:25:03,623:INFO:_display_container: 2
2024-11-19 13:25:03,623:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-19 13:25:03,623:INFO:create_model() successfully completed......................................
2024-11-19 13:25:03,671:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:03,671:INFO:Creating metrics dataframe
2024-11-19 13:25:03,675:INFO:Initializing Decision Tree Classifier
2024-11-19 13:25:03,675:INFO:Total runtime is 0.12075000206629435 minutes
2024-11-19 13:25:03,677:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:03,678:INFO:Initializing create_model()
2024-11-19 13:25:03,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:03,678:INFO:Checking exceptions
2024-11-19 13:25:03,678:INFO:Importing libraries
2024-11-19 13:25:03,678:INFO:Copying training dataset
2024-11-19 13:25:03,690:INFO:Defining folds
2024-11-19 13:25:03,690:INFO:Declaring metric variables
2024-11-19 13:25:03,692:INFO:Importing untrained model
2024-11-19 13:25:03,694:INFO:Decision Tree Classifier Imported successfully
2024-11-19 13:25:03,698:INFO:Starting cross validation
2024-11-19 13:25:03,699:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:04,224:INFO:Calculating mean and std
2024-11-19 13:25:04,225:INFO:Creating metrics dataframe
2024-11-19 13:25:04,226:INFO:Uploading results into container
2024-11-19 13:25:04,226:INFO:Uploading model into container now
2024-11-19 13:25:04,226:INFO:_master_model_container: 4
2024-11-19 13:25:04,227:INFO:_display_container: 2
2024-11-19 13:25:04,227:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-19 13:25:04,227:INFO:create_model() successfully completed......................................
2024-11-19 13:25:04,277:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:04,277:INFO:Creating metrics dataframe
2024-11-19 13:25:04,281:INFO:Initializing SVM - Linear Kernel
2024-11-19 13:25:04,281:INFO:Total runtime is 0.13085300127665203 minutes
2024-11-19 13:25:04,283:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:04,283:INFO:Initializing create_model()
2024-11-19 13:25:04,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:04,283:INFO:Checking exceptions
2024-11-19 13:25:04,283:INFO:Importing libraries
2024-11-19 13:25:04,283:INFO:Copying training dataset
2024-11-19 13:25:04,296:INFO:Defining folds
2024-11-19 13:25:04,297:INFO:Declaring metric variables
2024-11-19 13:25:04,298:INFO:Importing untrained model
2024-11-19 13:25:04,300:INFO:SVM - Linear Kernel Imported successfully
2024-11-19 13:25:04,304:INFO:Starting cross validation
2024-11-19 13:25:04,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:04,616:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,683:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,690:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,725:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,755:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,771:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,777:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,780:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,787:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:04,794:INFO:Calculating mean and std
2024-11-19 13:25:04,795:INFO:Creating metrics dataframe
2024-11-19 13:25:04,796:INFO:Uploading results into container
2024-11-19 13:25:04,796:INFO:Uploading model into container now
2024-11-19 13:25:04,796:INFO:_master_model_container: 5
2024-11-19 13:25:04,796:INFO:_display_container: 2
2024-11-19 13:25:04,797:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-19 13:25:04,797:INFO:create_model() successfully completed......................................
2024-11-19 13:25:04,847:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:04,847:INFO:Creating metrics dataframe
2024-11-19 13:25:04,852:INFO:Initializing Ridge Classifier
2024-11-19 13:25:04,852:INFO:Total runtime is 0.1403577168782552 minutes
2024-11-19 13:25:04,853:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:04,853:INFO:Initializing create_model()
2024-11-19 13:25:04,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:04,854:INFO:Checking exceptions
2024-11-19 13:25:04,854:INFO:Importing libraries
2024-11-19 13:25:04,854:INFO:Copying training dataset
2024-11-19 13:25:04,869:INFO:Defining folds
2024-11-19 13:25:04,869:INFO:Declaring metric variables
2024-11-19 13:25:04,871:INFO:Importing untrained model
2024-11-19 13:25:04,873:INFO:Ridge Classifier Imported successfully
2024-11-19 13:25:04,877:INFO:Starting cross validation
2024-11-19 13:25:04,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:05,068:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,133:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,150:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,169:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,178:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,179:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,190:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,194:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,208:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,246:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:05,254:INFO:Calculating mean and std
2024-11-19 13:25:05,255:INFO:Creating metrics dataframe
2024-11-19 13:25:05,256:INFO:Uploading results into container
2024-11-19 13:25:05,256:INFO:Uploading model into container now
2024-11-19 13:25:05,257:INFO:_master_model_container: 6
2024-11-19 13:25:05,257:INFO:_display_container: 2
2024-11-19 13:25:05,257:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-19 13:25:05,257:INFO:create_model() successfully completed......................................
2024-11-19 13:25:05,305:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:05,305:INFO:Creating metrics dataframe
2024-11-19 13:25:05,309:INFO:Initializing Random Forest Classifier
2024-11-19 13:25:05,309:INFO:Total runtime is 0.147983717918396 minutes
2024-11-19 13:25:05,311:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:05,311:INFO:Initializing create_model()
2024-11-19 13:25:05,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:05,311:INFO:Checking exceptions
2024-11-19 13:25:05,311:INFO:Importing libraries
2024-11-19 13:25:05,311:INFO:Copying training dataset
2024-11-19 13:25:05,324:INFO:Defining folds
2024-11-19 13:25:05,324:INFO:Declaring metric variables
2024-11-19 13:25:05,326:INFO:Importing untrained model
2024-11-19 13:25:05,328:INFO:Random Forest Classifier Imported successfully
2024-11-19 13:25:05,331:INFO:Starting cross validation
2024-11-19 13:25:05,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:10,768:INFO:Calculating mean and std
2024-11-19 13:25:10,770:INFO:Creating metrics dataframe
2024-11-19 13:25:10,784:INFO:Uploading results into container
2024-11-19 13:25:10,785:INFO:Uploading model into container now
2024-11-19 13:25:10,786:INFO:_master_model_container: 7
2024-11-19 13:25:10,786:INFO:_display_container: 2
2024-11-19 13:25:10,786:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-19 13:25:10,787:INFO:create_model() successfully completed......................................
2024-11-19 13:25:10,875:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:10,876:INFO:Creating metrics dataframe
2024-11-19 13:25:10,881:INFO:Initializing Quadratic Discriminant Analysis
2024-11-19 13:25:10,881:INFO:Total runtime is 0.24084148406982425 minutes
2024-11-19 13:25:10,882:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:10,882:INFO:Initializing create_model()
2024-11-19 13:25:10,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:10,883:INFO:Checking exceptions
2024-11-19 13:25:10,883:INFO:Importing libraries
2024-11-19 13:25:10,883:INFO:Copying training dataset
2024-11-19 13:25:10,896:INFO:Defining folds
2024-11-19 13:25:10,896:INFO:Declaring metric variables
2024-11-19 13:25:10,898:INFO:Importing untrained model
2024-11-19 13:25:10,900:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-19 13:25:10,903:INFO:Starting cross validation
2024-11-19 13:25:10,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:11,123:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,127:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,161:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,164:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,165:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,173:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,192:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,198:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,241:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,265:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 13:25:11,295:INFO:Calculating mean and std
2024-11-19 13:25:11,296:INFO:Creating metrics dataframe
2024-11-19 13:25:11,297:INFO:Uploading results into container
2024-11-19 13:25:11,297:INFO:Uploading model into container now
2024-11-19 13:25:11,298:INFO:_master_model_container: 8
2024-11-19 13:25:11,298:INFO:_display_container: 2
2024-11-19 13:25:11,298:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-19 13:25:11,298:INFO:create_model() successfully completed......................................
2024-11-19 13:25:11,344:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:11,344:INFO:Creating metrics dataframe
2024-11-19 13:25:11,348:INFO:Initializing Ada Boost Classifier
2024-11-19 13:25:11,348:INFO:Total runtime is 0.24863264958063766 minutes
2024-11-19 13:25:11,350:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:11,350:INFO:Initializing create_model()
2024-11-19 13:25:11,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:11,350:INFO:Checking exceptions
2024-11-19 13:25:11,350:INFO:Importing libraries
2024-11-19 13:25:11,350:INFO:Copying training dataset
2024-11-19 13:25:11,362:INFO:Defining folds
2024-11-19 13:25:11,362:INFO:Declaring metric variables
2024-11-19 13:25:11,364:INFO:Importing untrained model
2024-11-19 13:25:11,365:INFO:Ada Boost Classifier Imported successfully
2024-11-19 13:25:11,368:INFO:Starting cross validation
2024-11-19 13:25:11,369:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:11,497:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,508:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,531:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,534:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,544:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,558:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,578:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,591:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,614:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:11,622:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 13:25:12,995:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:13,017:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:13,023:INFO:Calculating mean and std
2024-11-19 13:25:13,024:INFO:Creating metrics dataframe
2024-11-19 13:25:13,025:INFO:Uploading results into container
2024-11-19 13:25:13,025:INFO:Uploading model into container now
2024-11-19 13:25:13,025:INFO:_master_model_container: 9
2024-11-19 13:25:13,025:INFO:_display_container: 2
2024-11-19 13:25:13,025:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-19 13:25:13,025:INFO:create_model() successfully completed......................................
2024-11-19 13:25:13,071:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:13,071:INFO:Creating metrics dataframe
2024-11-19 13:25:13,076:INFO:Initializing Gradient Boosting Classifier
2024-11-19 13:25:13,076:INFO:Total runtime is 0.27742621898651126 minutes
2024-11-19 13:25:13,077:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:13,077:INFO:Initializing create_model()
2024-11-19 13:25:13,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:13,078:INFO:Checking exceptions
2024-11-19 13:25:13,079:INFO:Importing libraries
2024-11-19 13:25:13,079:INFO:Copying training dataset
2024-11-19 13:25:13,091:INFO:Defining folds
2024-11-19 13:25:13,091:INFO:Declaring metric variables
2024-11-19 13:25:13,093:INFO:Importing untrained model
2024-11-19 13:25:13,095:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 13:25:13,098:INFO:Starting cross validation
2024-11-19 13:25:13,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:19,658:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:19,716:INFO:Calculating mean and std
2024-11-19 13:25:19,717:INFO:Creating metrics dataframe
2024-11-19 13:25:19,718:INFO:Uploading results into container
2024-11-19 13:25:19,718:INFO:Uploading model into container now
2024-11-19 13:25:19,719:INFO:_master_model_container: 10
2024-11-19 13:25:19,719:INFO:_display_container: 2
2024-11-19 13:25:19,719:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 13:25:19,719:INFO:create_model() successfully completed......................................
2024-11-19 13:25:19,768:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:19,768:INFO:Creating metrics dataframe
2024-11-19 13:25:19,773:INFO:Initializing Linear Discriminant Analysis
2024-11-19 13:25:19,773:INFO:Total runtime is 0.38904910087585454 minutes
2024-11-19 13:25:19,775:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:19,775:INFO:Initializing create_model()
2024-11-19 13:25:19,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:19,775:INFO:Checking exceptions
2024-11-19 13:25:19,775:INFO:Importing libraries
2024-11-19 13:25:19,775:INFO:Copying training dataset
2024-11-19 13:25:19,789:INFO:Defining folds
2024-11-19 13:25:19,789:INFO:Declaring metric variables
2024-11-19 13:25:19,791:INFO:Importing untrained model
2024-11-19 13:25:19,793:INFO:Linear Discriminant Analysis Imported successfully
2024-11-19 13:25:19,796:INFO:Starting cross validation
2024-11-19 13:25:19,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:20,114:INFO:Calculating mean and std
2024-11-19 13:25:20,115:INFO:Creating metrics dataframe
2024-11-19 13:25:20,116:INFO:Uploading results into container
2024-11-19 13:25:20,116:INFO:Uploading model into container now
2024-11-19 13:25:20,117:INFO:_master_model_container: 11
2024-11-19 13:25:20,117:INFO:_display_container: 2
2024-11-19 13:25:20,117:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-19 13:25:20,117:INFO:create_model() successfully completed......................................
2024-11-19 13:25:20,164:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:20,165:INFO:Creating metrics dataframe
2024-11-19 13:25:20,169:INFO:Initializing Extra Trees Classifier
2024-11-19 13:25:20,169:INFO:Total runtime is 0.3956506172815959 minutes
2024-11-19 13:25:20,171:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:20,171:INFO:Initializing create_model()
2024-11-19 13:25:20,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:20,171:INFO:Checking exceptions
2024-11-19 13:25:20,171:INFO:Importing libraries
2024-11-19 13:25:20,171:INFO:Copying training dataset
2024-11-19 13:25:20,183:INFO:Defining folds
2024-11-19 13:25:20,183:INFO:Declaring metric variables
2024-11-19 13:25:20,184:INFO:Importing untrained model
2024-11-19 13:25:20,186:INFO:Extra Trees Classifier Imported successfully
2024-11-19 13:25:20,190:INFO:Starting cross validation
2024-11-19 13:25:20,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:23,304:INFO:Calculating mean and std
2024-11-19 13:25:23,306:INFO:Creating metrics dataframe
2024-11-19 13:25:23,311:INFO:Uploading results into container
2024-11-19 13:25:23,311:INFO:Uploading model into container now
2024-11-19 13:25:23,312:INFO:_master_model_container: 12
2024-11-19 13:25:23,312:INFO:_display_container: 2
2024-11-19 13:25:23,313:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-19 13:25:23,313:INFO:create_model() successfully completed......................................
2024-11-19 13:25:23,412:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:23,412:INFO:Creating metrics dataframe
2024-11-19 13:25:23,417:INFO:Initializing Light Gradient Boosting Machine
2024-11-19 13:25:23,418:INFO:Total runtime is 0.44978981812795005 minutes
2024-11-19 13:25:23,419:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:23,419:INFO:Initializing create_model()
2024-11-19 13:25:23,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:23,419:INFO:Checking exceptions
2024-11-19 13:25:23,419:INFO:Importing libraries
2024-11-19 13:25:23,420:INFO:Copying training dataset
2024-11-19 13:25:23,434:INFO:Defining folds
2024-11-19 13:25:23,434:INFO:Declaring metric variables
2024-11-19 13:25:23,436:INFO:Importing untrained model
2024-11-19 13:25:23,438:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-19 13:25:23,441:INFO:Starting cross validation
2024-11-19 13:25:23,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:28,292:INFO:Calculating mean and std
2024-11-19 13:25:28,293:INFO:Creating metrics dataframe
2024-11-19 13:25:28,294:INFO:Uploading results into container
2024-11-19 13:25:28,295:INFO:Uploading model into container now
2024-11-19 13:25:28,295:INFO:_master_model_container: 13
2024-11-19 13:25:28,295:INFO:_display_container: 2
2024-11-19 13:25:28,295:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-19 13:25:28,295:INFO:create_model() successfully completed......................................
2024-11-19 13:25:28,345:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:28,345:INFO:Creating metrics dataframe
2024-11-19 13:25:28,351:INFO:Initializing Dummy Classifier
2024-11-19 13:25:28,351:INFO:Total runtime is 0.5320209662119548 minutes
2024-11-19 13:25:28,353:INFO:SubProcess create_model() called ==================================
2024-11-19 13:25:28,354:INFO:Initializing create_model()
2024-11-19 13:25:28,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32a286790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:28,354:INFO:Checking exceptions
2024-11-19 13:25:28,354:INFO:Importing libraries
2024-11-19 13:25:28,354:INFO:Copying training dataset
2024-11-19 13:25:28,367:INFO:Defining folds
2024-11-19 13:25:28,367:INFO:Declaring metric variables
2024-11-19 13:25:28,368:INFO:Importing untrained model
2024-11-19 13:25:28,370:INFO:Dummy Classifier Imported successfully
2024-11-19 13:25:28,373:INFO:Starting cross validation
2024-11-19 13:25:28,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:25:28,570:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,573:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,591:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,612:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,619:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,622:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,642:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,666:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,675:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,721:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:25:28,731:INFO:Calculating mean and std
2024-11-19 13:25:28,732:INFO:Creating metrics dataframe
2024-11-19 13:25:28,733:INFO:Uploading results into container
2024-11-19 13:25:28,733:INFO:Uploading model into container now
2024-11-19 13:25:28,733:INFO:_master_model_container: 14
2024-11-19 13:25:28,733:INFO:_display_container: 2
2024-11-19 13:25:28,733:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-19 13:25:28,733:INFO:create_model() successfully completed......................................
2024-11-19 13:25:28,782:INFO:SubProcess create_model() end ==================================
2024-11-19 13:25:28,782:INFO:Creating metrics dataframe
2024-11-19 13:25:28,796:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-19 13:25:28,800:INFO:Initializing create_model()
2024-11-19 13:25:28,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:25:28,800:INFO:Checking exceptions
2024-11-19 13:25:28,801:INFO:Importing libraries
2024-11-19 13:25:28,801:INFO:Copying training dataset
2024-11-19 13:25:28,813:INFO:Defining folds
2024-11-19 13:25:28,813:INFO:Declaring metric variables
2024-11-19 13:25:28,814:INFO:Importing untrained model
2024-11-19 13:25:28,814:INFO:Declaring custom model
2024-11-19 13:25:28,814:INFO:Logistic Regression Imported successfully
2024-11-19 13:25:28,815:INFO:Cross validation set to False
2024-11-19 13:25:28,815:INFO:Fitting Model
2024-11-19 13:25:28,961:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-19 13:25:28,961:INFO:create_model() successfully completed......................................
2024-11-19 13:25:29,133:INFO:_master_model_container: 14
2024-11-19 13:25:29,133:INFO:_display_container: 2
2024-11-19 13:25:29,133:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-19 13:25:29,133:INFO:compare_models() successfully completed......................................
2024-11-19 13:50:06,894:INFO:Initializing create_model()
2024-11-19 13:50:06,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:50:06,895:INFO:Checking exceptions
2024-11-19 13:50:22,290:INFO:Initializing create_model()
2024-11-19 13:50:22,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:50:22,290:INFO:Checking exceptions
2024-11-19 13:50:22,302:INFO:Importing libraries
2024-11-19 13:50:22,302:INFO:Copying training dataset
2024-11-19 13:50:22,317:INFO:Defining folds
2024-11-19 13:50:22,317:INFO:Declaring metric variables
2024-11-19 13:50:22,327:INFO:Importing untrained model
2024-11-19 13:50:22,344:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 13:50:22,348:INFO:Starting cross validation
2024-11-19 13:50:22,351:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:50:30,388:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:50:31,647:INFO:Calculating mean and std
2024-11-19 13:50:31,648:INFO:Creating metrics dataframe
2024-11-19 13:50:31,653:INFO:Finalizing model
2024-11-19 13:50:37,307:INFO:Uploading results into container
2024-11-19 13:50:37,308:INFO:Uploading model into container now
2024-11-19 13:50:37,313:INFO:_master_model_container: 15
2024-11-19 13:50:37,314:INFO:_display_container: 3
2024-11-19 13:50:37,314:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 13:50:37,314:INFO:create_model() successfully completed......................................
2024-11-19 13:53:48,495:INFO:Initializing tune_model()
2024-11-19 13:53:48,497:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>)
2024-11-19 13:53:48,497:INFO:Checking exceptions
2024-11-19 13:53:48,517:INFO:Copying training dataset
2024-11-19 13:53:48,526:INFO:Checking base model
2024-11-19 13:53:48,527:INFO:Base model : Gradient Boosting Classifier
2024-11-19 13:53:48,529:INFO:Declaring metric variables
2024-11-19 13:53:48,538:INFO:Defining Hyperparameters
2024-11-19 13:53:48,642:INFO:Tuning with n_jobs=-1
2024-11-19 13:53:48,643:INFO:Initializing RandomizedSearchCV
2024-11-19 13:54:46,796:INFO:Initializing tune_model()
2024-11-19 13:54:46,798:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>)
2024-11-19 13:54:46,798:INFO:Checking exceptions
2024-11-19 13:54:46,819:INFO:Copying training dataset
2024-11-19 13:54:46,829:INFO:Checking base model
2024-11-19 13:54:46,830:INFO:Base model : Gradient Boosting Classifier
2024-11-19 13:54:46,832:INFO:Declaring metric variables
2024-11-19 13:54:46,834:INFO:Defining Hyperparameters
2024-11-19 13:54:46,896:INFO:Tuning with n_jobs=-1
2024-11-19 13:54:46,896:INFO:Initializing RandomizedSearchCV
2024-11-19 13:55:55,741:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.01}
2024-11-19 13:55:55,743:INFO:Hyperparameter search completed
2024-11-19 13:55:55,744:INFO:SubProcess create_model() called ==================================
2024-11-19 13:55:55,745:INFO:Initializing create_model()
2024-11-19 13:55:55,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32b064ee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.35, 'n_estimators': 140, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'learning_rate': 0.01})
2024-11-19 13:55:55,745:INFO:Checking exceptions
2024-11-19 13:55:55,745:INFO:Importing libraries
2024-11-19 13:55:55,745:INFO:Copying training dataset
2024-11-19 13:55:55,760:INFO:Defining folds
2024-11-19 13:55:55,760:INFO:Declaring metric variables
2024-11-19 13:55:55,764:INFO:Importing untrained model
2024-11-19 13:55:55,764:INFO:Declaring custom model
2024-11-19 13:55:55,766:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 13:55:55,769:INFO:Starting cross validation
2024-11-19 13:55:55,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:55:58,193:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,252:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,294:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,298:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,316:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,325:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,375:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,377:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,381:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,443:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:55:58,452:INFO:Calculating mean and std
2024-11-19 13:55:58,453:INFO:Creating metrics dataframe
2024-11-19 13:55:58,456:INFO:Finalizing model
2024-11-19 13:56:00,609:INFO:Uploading results into container
2024-11-19 13:56:00,610:INFO:Uploading model into container now
2024-11-19 13:56:00,610:INFO:_master_model_container: 16
2024-11-19 13:56:00,610:INFO:_display_container: 4
2024-11-19 13:56:00,610:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 13:56:00,610:INFO:create_model() successfully completed......................................
2024-11-19 13:56:00,707:INFO:SubProcess create_model() end ==================================
2024-11-19 13:56:00,707:INFO:choose_better activated
2024-11-19 13:56:00,708:INFO:SubProcess create_model() called ==================================
2024-11-19 13:56:00,709:INFO:Initializing create_model()
2024-11-19 13:56:00,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 13:56:00,709:INFO:Checking exceptions
2024-11-19 13:56:00,710:INFO:Importing libraries
2024-11-19 13:56:00,710:INFO:Copying training dataset
2024-11-19 13:56:00,723:INFO:Defining folds
2024-11-19 13:56:00,724:INFO:Declaring metric variables
2024-11-19 13:56:00,724:INFO:Importing untrained model
2024-11-19 13:56:00,724:INFO:Declaring custom model
2024-11-19 13:56:00,724:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 13:56:00,724:INFO:Starting cross validation
2024-11-19 13:56:00,725:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 13:56:07,227:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 13:56:07,237:INFO:Calculating mean and std
2024-11-19 13:56:07,237:INFO:Creating metrics dataframe
2024-11-19 13:56:07,238:INFO:Finalizing model
2024-11-19 13:56:12,823:INFO:Uploading results into container
2024-11-19 13:56:12,824:INFO:Uploading model into container now
2024-11-19 13:56:12,824:INFO:_master_model_container: 17
2024-11-19 13:56:12,824:INFO:_display_container: 5
2024-11-19 13:56:12,824:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 13:56:12,824:INFO:create_model() successfully completed......................................
2024-11-19 13:56:12,888:INFO:SubProcess create_model() end ==================================
2024-11-19 13:56:12,889:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for AUC is 0.8554
2024-11-19 13:56:12,889:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for AUC is 0.8539
2024-11-19 13:56:12,889:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-11-19 13:56:12,889:INFO:choose_better completed
2024-11-19 13:56:12,889:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-11-19 13:56:12,894:INFO:_master_model_container: 17
2024-11-19 13:56:12,895:INFO:_display_container: 4
2024-11-19 13:56:12,895:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 13:56:12,895:INFO:tune_model() successfully completed......................................
2024-11-19 13:57:14,052:INFO:Initializing plot_model()
2024-11-19 13:57:14,054:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, system=True)
2024-11-19 13:57:14,054:INFO:Checking exceptions
2024-11-19 13:57:14,061:INFO:Preloading libraries
2024-11-19 13:57:14,066:INFO:Copying training dataset
2024-11-19 13:57:14,066:INFO:Plot type: feature
2024-11-19 13:57:14,066:WARNING:No coef_ found. Trying feature_importances_
2024-11-19 13:57:14,307:INFO:Visual Rendered Successfully
2024-11-19 13:57:14,399:INFO:plot_model() successfully completed......................................
2024-11-19 13:57:40,617:INFO:Initializing plot_model()
2024-11-19 13:57:40,618:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, system=True)
2024-11-19 13:57:40,618:INFO:Checking exceptions
2024-11-19 13:57:40,625:INFO:Preloading libraries
2024-11-19 13:57:40,630:INFO:Copying training dataset
2024-11-19 13:57:40,630:INFO:Plot type: auc
2024-11-19 13:57:40,890:INFO:Fitting Model
2024-11-19 13:57:40,891:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-11-19 13:57:40,891:INFO:Scoring test/hold-out set
2024-11-19 13:57:41,074:INFO:Visual Rendered Successfully
2024-11-19 13:57:41,135:INFO:plot_model() successfully completed......................................
2024-11-19 14:03:49,111:INFO:Initializing predict_model()
2024-11-19 14:03:49,114:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32d041310>)
2024-11-19 14:03:49,114:INFO:Checking exceptions
2024-11-19 14:03:49,114:INFO:Preloading libraries
2024-11-19 14:06:16,658:INFO:Initializing finalize_model()
2024-11-19 14:06:16,659:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-19 14:06:16,659:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 14:06:16,665:INFO:Initializing create_model()
2024-11-19 14:06:16,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 14:06:16,665:INFO:Checking exceptions
2024-11-19 14:06:16,666:INFO:Importing libraries
2024-11-19 14:06:16,666:INFO:Copying training dataset
2024-11-19 14:06:16,667:INFO:Defining folds
2024-11-19 14:06:16,667:INFO:Declaring metric variables
2024-11-19 14:06:16,667:INFO:Importing untrained model
2024-11-19 14:06:16,667:INFO:Declaring custom model
2024-11-19 14:06:16,668:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 14:06:16,668:INFO:Cross validation set to False
2024-11-19 14:06:16,668:INFO:Fitting Model
2024-11-19 14:06:24,591:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-11-19 14:06:24,591:INFO:create_model() successfully completed......................................
2024-11-19 14:06:24,654:INFO:_master_model_container: 17
2024-11-19 14:06:24,654:INFO:_display_container: 5
2024-11-19 14:06:24,662:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-11-19 14:06:24,662:INFO:finalize_model() successfully completed......................................
2024-11-19 14:08:05,807:INFO:Initializing predict_model()
2024-11-19 14:08:05,808:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32d041f70>)
2024-11-19 14:08:05,808:INFO:Checking exceptions
2024-11-19 14:08:05,808:INFO:Preloading libraries
2024-11-19 14:11:21,435:INFO:Initializing predict_model()
2024-11-19 14:11:21,435:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32d041430>)
2024-11-19 14:11:21,435:INFO:Checking exceptions
2024-11-19 14:11:21,436:INFO:Preloading libraries
2024-11-19 14:11:21,437:INFO:Set up data.
2024-11-19 14:11:21,501:INFO:Set up index.
2024-11-19 14:13:14,915:INFO:Initializing save_model()
2024-11-19 14:13:14,917:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=Modelo_Final_19_11_2024, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-19 14:13:14,917:INFO:Adding model into prep_pipe
2024-11-19 14:13:14,917:WARNING:Only Model saved as it was a pipeline.
2024-11-19 14:13:14,936:INFO:Modelo_Final_19_11_2024.pkl saved in current working directory
2024-11-19 14:13:14,953:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-11-19 14:13:14,954:INFO:save_model() successfully completed......................................
2024-11-19 14:15:43,042:INFO:Initializing predict_model()
2024-11-19 14:15:43,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32d0418b0>)
2024-11-19 14:15:43,043:INFO:Checking exceptions
2024-11-19 14:15:43,043:INFO:Preloading libraries
2024-11-19 14:15:50,404:INFO:Initializing predict_model()
2024-11-19 14:15:50,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345ae4820>)
2024-11-19 14:15:50,404:INFO:Checking exceptions
2024-11-19 14:15:50,404:INFO:Preloading libraries
2024-11-19 14:16:02,856:INFO:Initializing predict_model()
2024-11-19 14:16:02,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3448d1b80>)
2024-11-19 14:16:02,856:INFO:Checking exceptions
2024-11-19 14:16:02,856:INFO:Preloading libraries
2024-11-19 14:17:57,849:INFO:Initializing predict_model()
2024-11-19 14:17:57,851:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348887940>)
2024-11-19 14:17:57,851:INFO:Checking exceptions
2024-11-19 14:17:57,851:INFO:Preloading libraries
2024-11-19 14:18:09,738:INFO:Initializing predict_model()
2024-11-19 14:18:09,740:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345ae4d30>)
2024-11-19 14:18:09,740:INFO:Checking exceptions
2024-11-19 14:18:09,740:INFO:Preloading libraries
2024-11-19 14:19:35,589:INFO:Initializing predict_model()
2024-11-19 14:19:35,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3481b85e0>)
2024-11-19 14:19:35,590:INFO:Checking exceptions
2024-11-19 14:19:35,590:INFO:Preloading libraries
2024-11-19 14:24:43,869:INFO:Initializing plot_model()
2024-11-19 14:24:43,871:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, system=True)
2024-11-19 14:24:43,871:INFO:Checking exceptions
2024-11-19 14:24:43,881:INFO:Preloading libraries
2024-11-19 14:24:43,887:INFO:Copying training dataset
2024-11-19 14:24:43,887:INFO:Plot type: auc
2024-11-19 14:24:44,144:INFO:Fitting Model
2024-11-19 14:24:44,144:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-11-19 14:24:44,145:INFO:Scoring test/hold-out set
2024-11-19 14:24:44,328:INFO:Visual Rendered Successfully
2024-11-19 14:24:44,423:INFO:plot_model() successfully completed......................................
2024-11-19 15:49:56,299:INFO:Initializing plot_model()
2024-11-19 15:49:56,300:INFO:plot_model(plot=gain, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, system=True)
2024-11-19 15:49:56,300:INFO:Checking exceptions
2024-11-19 15:49:56,323:INFO:Preloading libraries
2024-11-19 15:49:56,336:INFO:Copying training dataset
2024-11-19 15:49:56,336:INFO:Plot type: gain
2024-11-19 15:49:56,337:INFO:Generating predictions / predict_proba on X_test
2024-11-19 15:49:56,589:INFO:Visual Rendered Successfully
2024-11-19 15:49:56,702:INFO:plot_model() successfully completed......................................
2024-11-19 16:29:19,897:INFO:Initializing plot_model()
2024-11-19 16:29:19,898:INFO:plot_model(plot=lift, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, system=True)
2024-11-19 16:29:19,898:INFO:Checking exceptions
2024-11-19 16:29:19,928:INFO:Preloading libraries
2024-11-19 16:29:19,936:INFO:Copying training dataset
2024-11-19 16:29:19,936:INFO:Plot type: lift
2024-11-19 16:29:19,937:INFO:Generating predictions / predict_proba on X_test
2024-11-19 16:29:20,187:INFO:Visual Rendered Successfully
2024-11-19 16:29:20,298:INFO:plot_model() successfully completed......................................
2024-11-19 17:30:47,231:INFO:Initializing predict_model()
2024-11-19 17:30:47,231:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345ae4e50>)
2024-11-19 17:30:47,232:INFO:Checking exceptions
2024-11-19 17:30:47,232:INFO:Preloading libraries
2024-11-19 17:31:04,687:INFO:Initializing predict_model()
2024-11-19 17:31:04,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348219160>)
2024-11-19 17:31:04,687:INFO:Checking exceptions
2024-11-19 17:31:04,687:INFO:Preloading libraries
2024-11-19 17:31:14,151:INFO:Initializing predict_model()
2024-11-19 17:31:14,151:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348219af0>)
2024-11-19 17:31:14,151:INFO:Checking exceptions
2024-11-19 17:31:14,151:INFO:Preloading libraries
2024-11-19 17:31:31,214:INFO:Initializing predict_model()
2024-11-19 17:31:31,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3482194c0>)
2024-11-19 17:31:31,214:INFO:Checking exceptions
2024-11-19 17:31:31,214:INFO:Preloading libraries
2024-11-19 17:31:42,908:INFO:Initializing predict_model()
2024-11-19 17:31:42,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x34821d1f0>)
2024-11-19 17:31:42,909:INFO:Checking exceptions
2024-11-19 17:31:42,909:INFO:Preloading libraries
2024-11-19 17:32:04,676:INFO:Initializing predict_model()
2024-11-19 17:32:04,676:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348232280>)
2024-11-19 17:32:04,676:INFO:Checking exceptions
2024-11-19 17:32:04,676:INFO:Preloading libraries
2024-11-19 17:32:37,682:INFO:Initializing predict_model()
2024-11-19 17:32:37,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3482320d0>)
2024-11-19 17:32:37,683:INFO:Checking exceptions
2024-11-19 17:32:37,683:INFO:Preloading libraries
2024-11-19 17:32:53,768:INFO:Initializing predict_model()
2024-11-19 17:32:53,768:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348232820>)
2024-11-19 17:32:53,768:INFO:Checking exceptions
2024-11-19 17:32:53,768:INFO:Preloading libraries
2024-11-19 17:32:57,383:INFO:Initializing predict_model()
2024-11-19 17:32:57,383:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3482361f0>)
2024-11-19 17:32:57,383:INFO:Checking exceptions
2024-11-19 17:32:57,383:INFO:Preloading libraries
2024-11-19 17:37:51,008:INFO:Initializing predict_model()
2024-11-19 17:37:51,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348236280>)
2024-11-19 17:37:51,009:INFO:Checking exceptions
2024-11-19 17:37:51,009:INFO:Preloading libraries
2024-11-19 17:38:42,035:INFO:Initializing predict_model()
2024-11-19 17:38:42,035:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348236820>)
2024-11-19 17:38:42,035:INFO:Checking exceptions
2024-11-19 17:38:42,035:INFO:Preloading libraries
2024-11-19 17:43:58,638:INFO:Initializing predict_model()
2024-11-19 17:43:58,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x348236f70>)
2024-11-19 17:43:58,638:INFO:Checking exceptions
2024-11-19 17:43:58,638:INFO:Preloading libraries
2024-11-19 17:44:55,452:INFO:Initializing predict_model()
2024-11-19 17:44:55,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345c17160>)
2024-11-19 17:44:55,453:INFO:Checking exceptions
2024-11-19 17:44:55,453:INFO:Preloading libraries
2024-11-19 17:45:53,632:INFO:Initializing predict_model()
2024-11-19 17:45:53,632:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf71f0>)
2024-11-19 17:45:53,632:INFO:Checking exceptions
2024-11-19 17:45:53,632:INFO:Preloading libraries
2024-11-19 17:58:58,811:INFO:Initializing predict_model()
2024-11-19 17:58:58,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf7040>)
2024-11-19 17:58:58,813:INFO:Checking exceptions
2024-11-19 17:58:58,813:INFO:Preloading libraries
2024-11-19 17:59:22,120:INFO:Initializing predict_model()
2024-11-19 17:59:22,120:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf71f0>)
2024-11-19 17:59:22,120:INFO:Checking exceptions
2024-11-19 17:59:22,121:INFO:Preloading libraries
2024-11-19 17:59:38,588:INFO:Initializing predict_model()
2024-11-19 17:59:38,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf71f0>)
2024-11-19 17:59:38,588:INFO:Checking exceptions
2024-11-19 17:59:38,588:INFO:Preloading libraries
2024-11-19 17:59:42,738:INFO:Initializing predict_model()
2024-11-19 17:59:42,738:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf7670>)
2024-11-19 17:59:42,738:INFO:Checking exceptions
2024-11-19 17:59:42,738:INFO:Preloading libraries
2024-11-19 17:59:45,995:INFO:Initializing predict_model()
2024-11-19 17:59:45,996:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf7670>)
2024-11-19 17:59:45,996:INFO:Checking exceptions
2024-11-19 17:59:45,996:INFO:Preloading libraries
2024-11-19 18:02:29,575:INFO:Initializing predict_model()
2024-11-19 18:02:29,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x34492eca0>)
2024-11-19 18:02:29,575:INFO:Checking exceptions
2024-11-19 18:02:29,575:INFO:Preloading libraries
2024-11-19 18:02:52,312:INFO:Initializing predict_model()
2024-11-19 18:02:52,313:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32b1f6820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345bf7280>)
2024-11-19 18:02:52,313:INFO:Checking exceptions
2024-11-19 18:02:52,313:INFO:Preloading libraries
2024-11-19 18:03:13,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 18:03:13,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 18:03:13,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 18:03:13,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-19 18:03:16,618:INFO:PyCaret ClassificationExperiment
2024-11-19 18:03:16,618:INFO:Logging name: clf-default-name
2024-11-19 18:03:16,618:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-19 18:03:16,618:INFO:version 3.3.2
2024-11-19 18:03:16,618:INFO:Initializing setup()
2024-11-19 18:03:16,618:INFO:self.USI: 99c7
2024-11-19 18:03:16,618:INFO:self._variable_keys: {'target_param', 'idx', 'fold_generator', 'fix_imbalance', 'y_train', 'X', '_available_plots', 'exp_id', 'X_train', '_ml_usecase', 'USI', 'data', 'logging_param', 'seed', 'n_jobs_param', 'html_param', 'log_plots_param', 'pipeline', 'gpu_n_jobs_param', 'exp_name_log', 'y_test', 'is_multiclass', 'memory', 'fold_shuffle_param', 'gpu_param', 'X_test', 'fold_groups_param', 'y'}
2024-11-19 18:03:16,618:INFO:Checking environment
2024-11-19 18:03:16,618:INFO:python_version: 3.9.6
2024-11-19 18:03:16,618:INFO:python_build: ('default', 'Aug  9 2024 14:24:13')
2024-11-19 18:03:16,618:INFO:machine: arm64
2024-11-19 18:03:16,618:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-11-19 18:03:16,618:INFO:Memory: svmem(total=17179869184, available=5630967808, percent=67.2, used=7534460928, free=53952512, active=5605408768, inactive=5494784000, wired=1929052160)
2024-11-19 18:03:16,618:INFO:Physical Core: 10
2024-11-19 18:03:16,618:INFO:Logical Core: 10
2024-11-19 18:03:16,618:INFO:Checking libraries
2024-11-19 18:03:16,618:INFO:System:
2024-11-19 18:03:16,618:INFO:    python: 3.9.6 (default, Aug  9 2024, 14:24:13)  [Clang 16.0.0 (clang-1600.0.26.3)]
2024-11-19 18:03:16,618:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-19 18:03:16,618:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-11-19 18:03:16,618:INFO:PyCaret required dependencies:
2024-11-19 18:03:16,640:INFO:                 pip: 24.3.1
2024-11-19 18:03:16,640:INFO:          setuptools: 58.0.4
2024-11-19 18:03:16,640:INFO:             pycaret: 3.3.2
2024-11-19 18:03:16,640:INFO:             IPython: 8.18.1
2024-11-19 18:03:16,640:INFO:          ipywidgets: 8.1.5
2024-11-19 18:03:16,640:INFO:                tqdm: 4.67.0
2024-11-19 18:03:16,640:INFO:               numpy: 1.26.4
2024-11-19 18:03:16,640:INFO:              pandas: 2.1.4
2024-11-19 18:03:16,640:INFO:              jinja2: 3.1.4
2024-11-19 18:03:16,640:INFO:               scipy: 1.11.4
2024-11-19 18:03:16,640:INFO:              joblib: 1.3.2
2024-11-19 18:03:16,640:INFO:             sklearn: 1.4.2
2024-11-19 18:03:16,640:INFO:                pyod: 2.0.2
2024-11-19 18:03:16,640:INFO:            imblearn: 0.12.4
2024-11-19 18:03:16,640:INFO:   category_encoders: 2.6.4
2024-11-19 18:03:16,641:INFO:            lightgbm: 4.5.0
2024-11-19 18:03:16,641:INFO:               numba: 0.60.0
2024-11-19 18:03:16,641:INFO:            requests: 2.32.3
2024-11-19 18:03:16,641:INFO:          matplotlib: 3.7.5
2024-11-19 18:03:16,641:INFO:          scikitplot: 0.3.7
2024-11-19 18:03:16,641:INFO:         yellowbrick: 1.5
2024-11-19 18:03:16,641:INFO:              plotly: 5.24.1
2024-11-19 18:03:16,641:INFO:    plotly-resampler: Not installed
2024-11-19 18:03:16,641:INFO:             kaleido: 0.4.2
2024-11-19 18:03:16,641:INFO:           schemdraw: 0.15
2024-11-19 18:03:16,641:INFO:         statsmodels: 0.14.4
2024-11-19 18:03:16,641:INFO:              sktime: 0.26.0
2024-11-19 18:03:16,641:INFO:               tbats: 1.1.3
2024-11-19 18:03:16,641:INFO:            pmdarima: 2.0.4
2024-11-19 18:03:16,641:INFO:              psutil: 6.1.0
2024-11-19 18:03:16,641:INFO:          markupsafe: 3.0.2
2024-11-19 18:03:16,641:INFO:             pickle5: Not installed
2024-11-19 18:03:16,641:INFO:         cloudpickle: 3.1.0
2024-11-19 18:03:16,641:INFO:         deprecation: 2.1.0
2024-11-19 18:03:16,641:INFO:              xxhash: 3.5.0
2024-11-19 18:03:16,641:INFO:           wurlitzer: 3.1.1
2024-11-19 18:03:16,641:INFO:PyCaret optional dependencies:
2024-11-19 18:03:16,647:INFO:                shap: Not installed
2024-11-19 18:03:16,647:INFO:           interpret: Not installed
2024-11-19 18:03:16,647:INFO:                umap: Not installed
2024-11-19 18:03:16,647:INFO:     ydata_profiling: Not installed
2024-11-19 18:03:16,647:INFO:  explainerdashboard: Not installed
2024-11-19 18:03:16,647:INFO:             autoviz: Not installed
2024-11-19 18:03:16,647:INFO:           fairlearn: Not installed
2024-11-19 18:03:16,647:INFO:          deepchecks: Not installed
2024-11-19 18:03:16,647:INFO:             xgboost: Not installed
2024-11-19 18:03:16,647:INFO:            catboost: Not installed
2024-11-19 18:03:16,647:INFO:              kmodes: Not installed
2024-11-19 18:03:16,647:INFO:             mlxtend: Not installed
2024-11-19 18:03:16,647:INFO:       statsforecast: Not installed
2024-11-19 18:03:16,647:INFO:        tune_sklearn: Not installed
2024-11-19 18:03:16,647:INFO:                 ray: Not installed
2024-11-19 18:03:16,647:INFO:            hyperopt: Not installed
2024-11-19 18:03:16,647:INFO:              optuna: Not installed
2024-11-19 18:03:16,647:INFO:               skopt: Not installed
2024-11-19 18:03:16,647:INFO:              mlflow: Not installed
2024-11-19 18:03:16,647:INFO:              gradio: Not installed
2024-11-19 18:03:16,647:INFO:             fastapi: Not installed
2024-11-19 18:03:16,647:INFO:             uvicorn: Not installed
2024-11-19 18:03:16,647:INFO:              m2cgen: Not installed
2024-11-19 18:03:16,647:INFO:           evidently: Not installed
2024-11-19 18:03:16,647:INFO:               fugue: Not installed
2024-11-19 18:03:16,647:INFO:           streamlit: Not installed
2024-11-19 18:03:16,647:INFO:             prophet: Not installed
2024-11-19 18:03:16,647:INFO:None
2024-11-19 18:03:16,647:INFO:Set up data.
2024-11-19 18:03:16,662:INFO:Set up folding strategy.
2024-11-19 18:03:16,662:INFO:Set up train/test split.
2024-11-19 18:03:16,683:INFO:Set up index.
2024-11-19 18:03:16,683:INFO:Assigning column types.
2024-11-19 18:03:16,690:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-19 18:03:16,710:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-19 18:03:16,712:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 18:03:16,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-19 18:03:16,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 18:03:16,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,759:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-19 18:03:16,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 18:03:16,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,810:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-19 18:03:16,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,822:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-19 18:03:16,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:16,887:INFO:Preparing preprocessing pipeline...
2024-11-19 18:03:16,889:INFO:Set up simple imputation.
2024-11-19 18:03:16,895:INFO:Set up encoding of ordinal features.
2024-11-19 18:03:16,897:INFO:Set up encoding of categorical features.
2024-11-19 18:03:16,897:INFO:Set up feature normalization.
2024-11-19 18:03:17,026:INFO:Finished creating preprocessing pipeline.
2024-11-19 18:03:17,035:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-19 18:03:17,035:INFO:Creating final display dataframe.
2024-11-19 18:03:17,289:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape       (76222, 12)
4        Transformed data shape       (76222, 14)
5   Transformed train set shape       (53355, 14)
6    Transformed test set shape       (22867, 14)
7              Numeric features                 9
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              99c7
2024-11-19 18:03:17,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:17,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:17,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:17,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-19 18:03:17,358:INFO:setup() successfully completed in 0.74s...............
2024-11-19 18:03:17,363:INFO:Initializing compare_models()
2024-11-19 18:03:17,363:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-19 18:03:17,363:INFO:Checking exceptions
2024-11-19 18:03:17,371:INFO:Preparing display monitor
2024-11-19 18:03:17,403:INFO:Initializing Logistic Regression
2024-11-19 18:03:17,403:INFO:Total runtime is 3.4968058268229165e-06 minutes
2024-11-19 18:03:17,405:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:17,405:INFO:Initializing create_model()
2024-11-19 18:03:17,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:17,405:INFO:Checking exceptions
2024-11-19 18:03:17,406:INFO:Importing libraries
2024-11-19 18:03:17,406:INFO:Copying training dataset
2024-11-19 18:03:17,419:INFO:Defining folds
2024-11-19 18:03:17,419:INFO:Declaring metric variables
2024-11-19 18:03:17,421:INFO:Importing untrained model
2024-11-19 18:03:17,423:INFO:Logistic Regression Imported successfully
2024-11-19 18:03:17,426:INFO:Starting cross validation
2024-11-19 18:03:17,427:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:19,947:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:19,994:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:20,103:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:20,125:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:20,179:INFO:Calculating mean and std
2024-11-19 18:03:20,181:INFO:Creating metrics dataframe
2024-11-19 18:03:20,183:INFO:Uploading results into container
2024-11-19 18:03:20,183:INFO:Uploading model into container now
2024-11-19 18:03:20,184:INFO:_master_model_container: 1
2024-11-19 18:03:20,184:INFO:_display_container: 2
2024-11-19 18:03:20,184:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-19 18:03:20,184:INFO:create_model() successfully completed......................................
2024-11-19 18:03:20,250:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:20,250:INFO:Creating metrics dataframe
2024-11-19 18:03:20,253:INFO:Initializing K Neighbors Classifier
2024-11-19 18:03:20,253:INFO:Total runtime is 0.0475006620089213 minutes
2024-11-19 18:03:20,255:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:20,255:INFO:Initializing create_model()
2024-11-19 18:03:20,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:20,255:INFO:Checking exceptions
2024-11-19 18:03:20,255:INFO:Importing libraries
2024-11-19 18:03:20,255:INFO:Copying training dataset
2024-11-19 18:03:20,269:INFO:Defining folds
2024-11-19 18:03:20,269:INFO:Declaring metric variables
2024-11-19 18:03:20,271:INFO:Importing untrained model
2024-11-19 18:03:20,272:INFO:K Neighbors Classifier Imported successfully
2024-11-19 18:03:20,275:INFO:Starting cross validation
2024-11-19 18:03:20,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:23,639:INFO:Calculating mean and std
2024-11-19 18:03:23,640:INFO:Creating metrics dataframe
2024-11-19 18:03:23,641:INFO:Uploading results into container
2024-11-19 18:03:23,641:INFO:Uploading model into container now
2024-11-19 18:03:23,641:INFO:_master_model_container: 2
2024-11-19 18:03:23,641:INFO:_display_container: 2
2024-11-19 18:03:23,641:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-19 18:03:23,641:INFO:create_model() successfully completed......................................
2024-11-19 18:03:23,691:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:23,691:INFO:Creating metrics dataframe
2024-11-19 18:03:23,695:INFO:Initializing Naive Bayes
2024-11-19 18:03:23,695:INFO:Total runtime is 0.10485622882843017 minutes
2024-11-19 18:03:23,696:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:23,696:INFO:Initializing create_model()
2024-11-19 18:03:23,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:23,696:INFO:Checking exceptions
2024-11-19 18:03:23,696:INFO:Importing libraries
2024-11-19 18:03:23,696:INFO:Copying training dataset
2024-11-19 18:03:23,709:INFO:Defining folds
2024-11-19 18:03:23,709:INFO:Declaring metric variables
2024-11-19 18:03:23,710:INFO:Importing untrained model
2024-11-19 18:03:23,712:INFO:Naive Bayes Imported successfully
2024-11-19 18:03:23,715:INFO:Starting cross validation
2024-11-19 18:03:23,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:24,007:INFO:Calculating mean and std
2024-11-19 18:03:24,007:INFO:Creating metrics dataframe
2024-11-19 18:03:24,008:INFO:Uploading results into container
2024-11-19 18:03:24,008:INFO:Uploading model into container now
2024-11-19 18:03:24,008:INFO:_master_model_container: 3
2024-11-19 18:03:24,008:INFO:_display_container: 2
2024-11-19 18:03:24,009:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-19 18:03:24,009:INFO:create_model() successfully completed......................................
2024-11-19 18:03:24,050:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:24,050:INFO:Creating metrics dataframe
2024-11-19 18:03:24,054:INFO:Initializing Decision Tree Classifier
2024-11-19 18:03:24,054:INFO:Total runtime is 0.11084765990575154 minutes
2024-11-19 18:03:24,056:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:24,056:INFO:Initializing create_model()
2024-11-19 18:03:24,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:24,056:INFO:Checking exceptions
2024-11-19 18:03:24,056:INFO:Importing libraries
2024-11-19 18:03:24,056:INFO:Copying training dataset
2024-11-19 18:03:24,069:INFO:Defining folds
2024-11-19 18:03:24,069:INFO:Declaring metric variables
2024-11-19 18:03:24,071:INFO:Importing untrained model
2024-11-19 18:03:24,072:INFO:Decision Tree Classifier Imported successfully
2024-11-19 18:03:24,075:INFO:Starting cross validation
2024-11-19 18:03:24,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:24,580:INFO:Calculating mean and std
2024-11-19 18:03:24,581:INFO:Creating metrics dataframe
2024-11-19 18:03:24,582:INFO:Uploading results into container
2024-11-19 18:03:24,582:INFO:Uploading model into container now
2024-11-19 18:03:24,582:INFO:_master_model_container: 4
2024-11-19 18:03:24,582:INFO:_display_container: 2
2024-11-19 18:03:24,583:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-19 18:03:24,583:INFO:create_model() successfully completed......................................
2024-11-19 18:03:24,624:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:24,624:INFO:Creating metrics dataframe
2024-11-19 18:03:24,628:INFO:Initializing SVM - Linear Kernel
2024-11-19 18:03:24,629:INFO:Total runtime is 0.12042093276977539 minutes
2024-11-19 18:03:24,630:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:24,630:INFO:Initializing create_model()
2024-11-19 18:03:24,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:24,630:INFO:Checking exceptions
2024-11-19 18:03:24,630:INFO:Importing libraries
2024-11-19 18:03:24,630:INFO:Copying training dataset
2024-11-19 18:03:24,643:INFO:Defining folds
2024-11-19 18:03:24,643:INFO:Declaring metric variables
2024-11-19 18:03:24,644:INFO:Importing untrained model
2024-11-19 18:03:24,646:INFO:SVM - Linear Kernel Imported successfully
2024-11-19 18:03:24,649:INFO:Starting cross validation
2024-11-19 18:03:24,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:24,919:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,940:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,948:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,962:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,988:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,992:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,993:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:24,995:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,014:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,035:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,051:INFO:Calculating mean and std
2024-11-19 18:03:25,052:INFO:Creating metrics dataframe
2024-11-19 18:03:25,053:INFO:Uploading results into container
2024-11-19 18:03:25,053:INFO:Uploading model into container now
2024-11-19 18:03:25,054:INFO:_master_model_container: 5
2024-11-19 18:03:25,054:INFO:_display_container: 2
2024-11-19 18:03:25,054:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-19 18:03:25,054:INFO:create_model() successfully completed......................................
2024-11-19 18:03:25,095:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:25,096:INFO:Creating metrics dataframe
2024-11-19 18:03:25,100:INFO:Initializing Ridge Classifier
2024-11-19 18:03:25,100:INFO:Total runtime is 0.1282788316408793 minutes
2024-11-19 18:03:25,102:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:25,102:INFO:Initializing create_model()
2024-11-19 18:03:25,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:25,102:INFO:Checking exceptions
2024-11-19 18:03:25,102:INFO:Importing libraries
2024-11-19 18:03:25,102:INFO:Copying training dataset
2024-11-19 18:03:25,115:INFO:Defining folds
2024-11-19 18:03:25,115:INFO:Declaring metric variables
2024-11-19 18:03:25,117:INFO:Importing untrained model
2024-11-19 18:03:25,118:INFO:Ridge Classifier Imported successfully
2024-11-19 18:03:25,121:INFO:Starting cross validation
2024-11-19 18:03:25,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:25,304:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,312:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,332:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,335:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,343:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,359:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,360:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,368:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,399:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,421:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:25,433:INFO:Calculating mean and std
2024-11-19 18:03:25,434:INFO:Creating metrics dataframe
2024-11-19 18:03:25,435:INFO:Uploading results into container
2024-11-19 18:03:25,435:INFO:Uploading model into container now
2024-11-19 18:03:25,435:INFO:_master_model_container: 6
2024-11-19 18:03:25,435:INFO:_display_container: 2
2024-11-19 18:03:25,435:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-19 18:03:25,435:INFO:create_model() successfully completed......................................
2024-11-19 18:03:25,477:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:25,477:INFO:Creating metrics dataframe
2024-11-19 18:03:25,482:INFO:Initializing Random Forest Classifier
2024-11-19 18:03:25,482:INFO:Total runtime is 0.13464526335398355 minutes
2024-11-19 18:03:25,484:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:25,484:INFO:Initializing create_model()
2024-11-19 18:03:25,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:25,484:INFO:Checking exceptions
2024-11-19 18:03:25,484:INFO:Importing libraries
2024-11-19 18:03:25,484:INFO:Copying training dataset
2024-11-19 18:03:25,496:INFO:Defining folds
2024-11-19 18:03:25,496:INFO:Declaring metric variables
2024-11-19 18:03:25,498:INFO:Importing untrained model
2024-11-19 18:03:25,500:INFO:Random Forest Classifier Imported successfully
2024-11-19 18:03:25,503:INFO:Starting cross validation
2024-11-19 18:03:25,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:30,248:INFO:Calculating mean and std
2024-11-19 18:03:30,249:INFO:Creating metrics dataframe
2024-11-19 18:03:30,250:INFO:Uploading results into container
2024-11-19 18:03:30,250:INFO:Uploading model into container now
2024-11-19 18:03:30,250:INFO:_master_model_container: 7
2024-11-19 18:03:30,250:INFO:_display_container: 2
2024-11-19 18:03:30,250:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-19 18:03:30,251:INFO:create_model() successfully completed......................................
2024-11-19 18:03:30,292:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:30,292:INFO:Creating metrics dataframe
2024-11-19 18:03:30,297:INFO:Initializing Quadratic Discriminant Analysis
2024-11-19 18:03:30,297:INFO:Total runtime is 0.21488958199818928 minutes
2024-11-19 18:03:30,298:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:30,298:INFO:Initializing create_model()
2024-11-19 18:03:30,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:30,298:INFO:Checking exceptions
2024-11-19 18:03:30,298:INFO:Importing libraries
2024-11-19 18:03:30,298:INFO:Copying training dataset
2024-11-19 18:03:30,311:INFO:Defining folds
2024-11-19 18:03:30,311:INFO:Declaring metric variables
2024-11-19 18:03:30,313:INFO:Importing untrained model
2024-11-19 18:03:30,314:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-19 18:03:30,317:INFO:Starting cross validation
2024-11-19 18:03:30,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:30,474:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,488:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,497:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,499:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,528:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,534:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,543:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,567:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,588:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,617:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-19 18:03:30,655:INFO:Calculating mean and std
2024-11-19 18:03:30,655:INFO:Creating metrics dataframe
2024-11-19 18:03:30,656:INFO:Uploading results into container
2024-11-19 18:03:30,657:INFO:Uploading model into container now
2024-11-19 18:03:30,657:INFO:_master_model_container: 8
2024-11-19 18:03:30,657:INFO:_display_container: 2
2024-11-19 18:03:30,657:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-19 18:03:30,657:INFO:create_model() successfully completed......................................
2024-11-19 18:03:30,719:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:30,719:INFO:Creating metrics dataframe
2024-11-19 18:03:30,724:INFO:Initializing Ada Boost Classifier
2024-11-19 18:03:30,724:INFO:Total runtime is 0.22201486428578693 minutes
2024-11-19 18:03:30,726:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:30,726:INFO:Initializing create_model()
2024-11-19 18:03:30,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:30,726:INFO:Checking exceptions
2024-11-19 18:03:30,726:INFO:Importing libraries
2024-11-19 18:03:30,726:INFO:Copying training dataset
2024-11-19 18:03:30,739:INFO:Defining folds
2024-11-19 18:03:30,739:INFO:Declaring metric variables
2024-11-19 18:03:30,741:INFO:Importing untrained model
2024-11-19 18:03:30,742:INFO:Ada Boost Classifier Imported successfully
2024-11-19 18:03:30,745:INFO:Starting cross validation
2024-11-19 18:03:30,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:30,866:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,891:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,903:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,910:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,914:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,923:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,935:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:30,978:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:31,012:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:31,025:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-19 18:03:32,408:INFO:Calculating mean and std
2024-11-19 18:03:32,409:INFO:Creating metrics dataframe
2024-11-19 18:03:32,410:INFO:Uploading results into container
2024-11-19 18:03:32,410:INFO:Uploading model into container now
2024-11-19 18:03:32,410:INFO:_master_model_container: 9
2024-11-19 18:03:32,410:INFO:_display_container: 2
2024-11-19 18:03:32,410:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-19 18:03:32,410:INFO:create_model() successfully completed......................................
2024-11-19 18:03:32,451:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:32,451:INFO:Creating metrics dataframe
2024-11-19 18:03:32,456:INFO:Initializing Gradient Boosting Classifier
2024-11-19 18:03:32,456:INFO:Total runtime is 0.250874129931132 minutes
2024-11-19 18:03:32,457:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:32,457:INFO:Initializing create_model()
2024-11-19 18:03:32,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:32,457:INFO:Checking exceptions
2024-11-19 18:03:32,457:INFO:Importing libraries
2024-11-19 18:03:32,457:INFO:Copying training dataset
2024-11-19 18:03:32,470:INFO:Defining folds
2024-11-19 18:03:32,470:INFO:Declaring metric variables
2024-11-19 18:03:32,471:INFO:Importing untrained model
2024-11-19 18:03:32,473:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 18:03:32,476:INFO:Starting cross validation
2024-11-19 18:03:32,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:38,827:INFO:Calculating mean and std
2024-11-19 18:03:38,828:INFO:Creating metrics dataframe
2024-11-19 18:03:38,829:INFO:Uploading results into container
2024-11-19 18:03:38,829:INFO:Uploading model into container now
2024-11-19 18:03:38,830:INFO:_master_model_container: 10
2024-11-19 18:03:38,830:INFO:_display_container: 2
2024-11-19 18:03:38,830:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 18:03:38,830:INFO:create_model() successfully completed......................................
2024-11-19 18:03:38,872:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:38,872:INFO:Creating metrics dataframe
2024-11-19 18:03:38,876:INFO:Initializing Linear Discriminant Analysis
2024-11-19 18:03:38,876:INFO:Total runtime is 0.35788513024648033 minutes
2024-11-19 18:03:38,878:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:38,878:INFO:Initializing create_model()
2024-11-19 18:03:38,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:38,878:INFO:Checking exceptions
2024-11-19 18:03:38,878:INFO:Importing libraries
2024-11-19 18:03:38,878:INFO:Copying training dataset
2024-11-19 18:03:38,890:INFO:Defining folds
2024-11-19 18:03:38,890:INFO:Declaring metric variables
2024-11-19 18:03:38,892:INFO:Importing untrained model
2024-11-19 18:03:38,893:INFO:Linear Discriminant Analysis Imported successfully
2024-11-19 18:03:38,897:INFO:Starting cross validation
2024-11-19 18:03:38,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:39,252:INFO:Calculating mean and std
2024-11-19 18:03:39,253:INFO:Creating metrics dataframe
2024-11-19 18:03:39,254:INFO:Uploading results into container
2024-11-19 18:03:39,254:INFO:Uploading model into container now
2024-11-19 18:03:39,254:INFO:_master_model_container: 11
2024-11-19 18:03:39,254:INFO:_display_container: 2
2024-11-19 18:03:39,254:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-19 18:03:39,254:INFO:create_model() successfully completed......................................
2024-11-19 18:03:39,296:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:39,296:INFO:Creating metrics dataframe
2024-11-19 18:03:39,301:INFO:Initializing Extra Trees Classifier
2024-11-19 18:03:39,301:INFO:Total runtime is 0.3649592955907186 minutes
2024-11-19 18:03:39,302:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:39,302:INFO:Initializing create_model()
2024-11-19 18:03:39,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:39,302:INFO:Checking exceptions
2024-11-19 18:03:39,303:INFO:Importing libraries
2024-11-19 18:03:39,303:INFO:Copying training dataset
2024-11-19 18:03:39,315:INFO:Defining folds
2024-11-19 18:03:39,315:INFO:Declaring metric variables
2024-11-19 18:03:39,317:INFO:Importing untrained model
2024-11-19 18:03:39,319:INFO:Extra Trees Classifier Imported successfully
2024-11-19 18:03:39,322:INFO:Starting cross validation
2024-11-19 18:03:39,323:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:42,112:INFO:Calculating mean and std
2024-11-19 18:03:42,113:INFO:Creating metrics dataframe
2024-11-19 18:03:42,115:INFO:Uploading results into container
2024-11-19 18:03:42,115:INFO:Uploading model into container now
2024-11-19 18:03:42,115:INFO:_master_model_container: 12
2024-11-19 18:03:42,115:INFO:_display_container: 2
2024-11-19 18:03:42,116:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-19 18:03:42,116:INFO:create_model() successfully completed......................................
2024-11-19 18:03:42,164:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:42,164:INFO:Creating metrics dataframe
2024-11-19 18:03:42,169:INFO:Initializing Light Gradient Boosting Machine
2024-11-19 18:03:42,169:INFO:Total runtime is 0.41276989777882894 minutes
2024-11-19 18:03:42,171:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:42,171:INFO:Initializing create_model()
2024-11-19 18:03:42,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:42,172:INFO:Checking exceptions
2024-11-19 18:03:42,172:INFO:Importing libraries
2024-11-19 18:03:42,172:INFO:Copying training dataset
2024-11-19 18:03:42,185:INFO:Defining folds
2024-11-19 18:03:42,185:INFO:Declaring metric variables
2024-11-19 18:03:42,187:INFO:Importing untrained model
2024-11-19 18:03:42,188:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-19 18:03:42,191:INFO:Starting cross validation
2024-11-19 18:03:42,192:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:46,829:INFO:Calculating mean and std
2024-11-19 18:03:46,830:INFO:Creating metrics dataframe
2024-11-19 18:03:46,831:INFO:Uploading results into container
2024-11-19 18:03:46,831:INFO:Uploading model into container now
2024-11-19 18:03:46,831:INFO:_master_model_container: 13
2024-11-19 18:03:46,831:INFO:_display_container: 2
2024-11-19 18:03:46,832:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-19 18:03:46,832:INFO:create_model() successfully completed......................................
2024-11-19 18:03:46,872:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:46,872:INFO:Creating metrics dataframe
2024-11-19 18:03:46,878:INFO:Initializing Dummy Classifier
2024-11-19 18:03:46,878:INFO:Total runtime is 0.49123921394348147 minutes
2024-11-19 18:03:46,879:INFO:SubProcess create_model() called ==================================
2024-11-19 18:03:46,879:INFO:Initializing create_model()
2024-11-19 18:03:46,879:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31138db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:46,879:INFO:Checking exceptions
2024-11-19 18:03:46,879:INFO:Importing libraries
2024-11-19 18:03:46,879:INFO:Copying training dataset
2024-11-19 18:03:46,891:INFO:Defining folds
2024-11-19 18:03:46,891:INFO:Declaring metric variables
2024-11-19 18:03:46,893:INFO:Importing untrained model
2024-11-19 18:03:46,894:INFO:Dummy Classifier Imported successfully
2024-11-19 18:03:46,897:INFO:Starting cross validation
2024-11-19 18:03:46,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:47,059:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,063:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,081:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,082:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,087:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,094:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,109:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,114:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,168:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,192:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:03:47,204:INFO:Calculating mean and std
2024-11-19 18:03:47,205:INFO:Creating metrics dataframe
2024-11-19 18:03:47,205:INFO:Uploading results into container
2024-11-19 18:03:47,206:INFO:Uploading model into container now
2024-11-19 18:03:47,206:INFO:_master_model_container: 14
2024-11-19 18:03:47,206:INFO:_display_container: 2
2024-11-19 18:03:47,206:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-19 18:03:47,206:INFO:create_model() successfully completed......................................
2024-11-19 18:03:47,247:INFO:SubProcess create_model() end ==================================
2024-11-19 18:03:47,247:INFO:Creating metrics dataframe
2024-11-19 18:03:47,260:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-19 18:03:47,263:INFO:Initializing create_model()
2024-11-19 18:03:47,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:47,263:INFO:Checking exceptions
2024-11-19 18:03:47,264:INFO:Importing libraries
2024-11-19 18:03:47,264:INFO:Copying training dataset
2024-11-19 18:03:47,276:INFO:Defining folds
2024-11-19 18:03:47,277:INFO:Declaring metric variables
2024-11-19 18:03:47,277:INFO:Importing untrained model
2024-11-19 18:03:47,277:INFO:Declaring custom model
2024-11-19 18:03:47,277:INFO:Logistic Regression Imported successfully
2024-11-19 18:03:47,278:INFO:Cross validation set to False
2024-11-19 18:03:47,278:INFO:Fitting Model
2024-11-19 18:03:47,435:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-19 18:03:47,435:INFO:create_model() successfully completed......................................
2024-11-19 18:03:47,522:INFO:_master_model_container: 14
2024-11-19 18:03:47,523:INFO:_display_container: 2
2024-11-19 18:03:47,523:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-19 18:03:47,523:INFO:compare_models() successfully completed......................................
2024-11-19 18:03:47,550:INFO:Initializing create_model()
2024-11-19 18:03:47,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:03:47,551:INFO:Checking exceptions
2024-11-19 18:03:47,568:INFO:Importing libraries
2024-11-19 18:03:47,568:INFO:Copying training dataset
2024-11-19 18:03:47,590:INFO:Defining folds
2024-11-19 18:03:47,590:INFO:Declaring metric variables
2024-11-19 18:03:47,592:INFO:Importing untrained model
2024-11-19 18:03:47,597:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 18:03:47,605:INFO:Starting cross validation
2024-11-19 18:03:47,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:03:54,249:INFO:Calculating mean and std
2024-11-19 18:03:54,250:INFO:Creating metrics dataframe
2024-11-19 18:03:54,252:INFO:Finalizing model
2024-11-19 18:03:59,826:INFO:Uploading results into container
2024-11-19 18:03:59,827:INFO:Uploading model into container now
2024-11-19 18:03:59,832:INFO:_master_model_container: 15
2024-11-19 18:03:59,832:INFO:_display_container: 3
2024-11-19 18:03:59,832:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 18:03:59,832:INFO:create_model() successfully completed......................................
2024-11-19 18:03:59,897:INFO:Initializing tune_model()
2024-11-19 18:03:59,897:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>)
2024-11-19 18:03:59,897:INFO:Checking exceptions
2024-11-19 18:03:59,910:INFO:Copying training dataset
2024-11-19 18:03:59,919:INFO:Checking base model
2024-11-19 18:03:59,919:INFO:Base model : Gradient Boosting Classifier
2024-11-19 18:03:59,921:INFO:Declaring metric variables
2024-11-19 18:03:59,923:INFO:Defining Hyperparameters
2024-11-19 18:03:59,965:INFO:Tuning with n_jobs=-1
2024-11-19 18:03:59,965:INFO:Initializing RandomizedSearchCV
2024-11-19 18:05:04,862:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.01}
2024-11-19 18:05:04,863:INFO:Hyperparameter search completed
2024-11-19 18:05:04,863:INFO:SubProcess create_model() called ==================================
2024-11-19 18:05:04,863:INFO:Initializing create_model()
2024-11-19 18:05:04,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x328b08bb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.35, 'n_estimators': 140, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'learning_rate': 0.01})
2024-11-19 18:05:04,864:INFO:Checking exceptions
2024-11-19 18:05:04,864:INFO:Importing libraries
2024-11-19 18:05:04,864:INFO:Copying training dataset
2024-11-19 18:05:04,877:INFO:Defining folds
2024-11-19 18:05:04,877:INFO:Declaring metric variables
2024-11-19 18:05:04,879:INFO:Importing untrained model
2024-11-19 18:05:04,879:INFO:Declaring custom model
2024-11-19 18:05:04,881:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 18:05:04,884:INFO:Starting cross validation
2024-11-19 18:05:04,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:05:07,557:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,602:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,664:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,698:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,724:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,741:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,748:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,757:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,788:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-19 18:05:07,802:INFO:Calculating mean and std
2024-11-19 18:05:07,803:INFO:Creating metrics dataframe
2024-11-19 18:05:07,806:INFO:Finalizing model
2024-11-19 18:05:09,996:INFO:Uploading results into container
2024-11-19 18:05:09,997:INFO:Uploading model into container now
2024-11-19 18:05:09,997:INFO:_master_model_container: 16
2024-11-19 18:05:09,998:INFO:_display_container: 4
2024-11-19 18:05:09,998:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 18:05:09,998:INFO:create_model() successfully completed......................................
2024-11-19 18:05:10,044:INFO:SubProcess create_model() end ==================================
2024-11-19 18:05:10,044:INFO:choose_better activated
2024-11-19 18:05:10,046:INFO:SubProcess create_model() called ==================================
2024-11-19 18:05:10,046:INFO:Initializing create_model()
2024-11-19 18:05:10,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:05:10,046:INFO:Checking exceptions
2024-11-19 18:05:10,047:INFO:Importing libraries
2024-11-19 18:05:10,047:INFO:Copying training dataset
2024-11-19 18:05:10,059:INFO:Defining folds
2024-11-19 18:05:10,060:INFO:Declaring metric variables
2024-11-19 18:05:10,060:INFO:Importing untrained model
2024-11-19 18:05:10,060:INFO:Declaring custom model
2024-11-19 18:05:10,060:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 18:05:10,060:INFO:Starting cross validation
2024-11-19 18:05:10,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-19 18:05:16,520:INFO:Calculating mean and std
2024-11-19 18:05:16,520:INFO:Creating metrics dataframe
2024-11-19 18:05:16,521:INFO:Finalizing model
2024-11-19 18:05:22,133:INFO:Uploading results into container
2024-11-19 18:05:22,133:INFO:Uploading model into container now
2024-11-19 18:05:22,133:INFO:_master_model_container: 17
2024-11-19 18:05:22,133:INFO:_display_container: 5
2024-11-19 18:05:22,133:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 18:05:22,133:INFO:create_model() successfully completed......................................
2024-11-19 18:05:22,176:INFO:SubProcess create_model() end ==================================
2024-11-19 18:05:22,176:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for AUC is 0.8545
2024-11-19 18:05:22,176:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='log_loss', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=140, n_iter_no_change=None,
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for AUC is 0.853
2024-11-19 18:05:22,177:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-11-19 18:05:22,177:INFO:choose_better completed
2024-11-19 18:05:22,177:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-11-19 18:05:22,182:INFO:_master_model_container: 17
2024-11-19 18:05:22,182:INFO:_display_container: 4
2024-11-19 18:05:22,182:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 18:05:22,182:INFO:tune_model() successfully completed......................................
2024-11-19 18:05:22,249:INFO:Initializing plot_model()
2024-11-19 18:05:22,249:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, system=True)
2024-11-19 18:05:22,249:INFO:Checking exceptions
2024-11-19 18:05:22,255:INFO:Preloading libraries
2024-11-19 18:05:22,260:INFO:Copying training dataset
2024-11-19 18:05:22,261:INFO:Plot type: feature
2024-11-19 18:05:22,261:WARNING:No coef_ found. Trying feature_importances_
2024-11-19 18:05:22,451:INFO:Visual Rendered Successfully
2024-11-19 18:05:22,493:INFO:plot_model() successfully completed......................................
2024-11-19 18:05:22,499:INFO:Initializing plot_model()
2024-11-19 18:05:22,500:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, system=True)
2024-11-19 18:05:22,500:INFO:Checking exceptions
2024-11-19 18:05:22,506:INFO:Preloading libraries
2024-11-19 18:05:22,510:INFO:Copying training dataset
2024-11-19 18:05:22,510:INFO:Plot type: auc
2024-11-19 18:05:22,776:INFO:Fitting Model
2024-11-19 18:05:22,782:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-11-19 18:05:22,783:INFO:Scoring test/hold-out set
2024-11-19 18:05:22,969:INFO:Visual Rendered Successfully
2024-11-19 18:05:23,012:INFO:plot_model() successfully completed......................................
2024-11-19 18:05:23,019:INFO:Initializing plot_model()
2024-11-19 18:05:23,019:INFO:plot_model(plot=gain, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, system=True)
2024-11-19 18:05:23,019:INFO:Checking exceptions
2024-11-19 18:05:23,026:INFO:Preloading libraries
2024-11-19 18:05:23,031:INFO:Copying training dataset
2024-11-19 18:05:23,031:INFO:Plot type: gain
2024-11-19 18:05:23,031:INFO:Generating predictions / predict_proba on X_test
2024-11-19 18:05:23,300:INFO:Visual Rendered Successfully
2024-11-19 18:05:23,342:INFO:plot_model() successfully completed......................................
2024-11-19 18:05:23,348:INFO:Initializing plot_model()
2024-11-19 18:05:23,348:INFO:plot_model(plot=lift, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, system=True)
2024-11-19 18:05:23,348:INFO:Checking exceptions
2024-11-19 18:05:23,355:INFO:Preloading libraries
2024-11-19 18:05:23,359:INFO:Copying training dataset
2024-11-19 18:05:23,359:INFO:Plot type: lift
2024-11-19 18:05:23,360:INFO:Generating predictions / predict_proba on X_test
2024-11-19 18:05:23,603:INFO:Visual Rendered Successfully
2024-11-19 18:05:23,646:INFO:plot_model() successfully completed......................................
2024-11-19 18:05:23,651:INFO:Initializing predict_model()
2024-11-19 18:05:23,652:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x311555790>)
2024-11-19 18:05:23,652:INFO:Checking exceptions
2024-11-19 18:05:23,652:INFO:Preloading libraries
2024-11-19 18:05:23,892:INFO:Initializing finalize_model()
2024-11-19 18:05:23,892:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-19 18:05:23,893:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-19 18:05:23,899:INFO:Initializing create_model()
2024-11-19 18:05:23,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-19 18:05:23,899:INFO:Checking exceptions
2024-11-19 18:05:23,900:INFO:Importing libraries
2024-11-19 18:05:23,900:INFO:Copying training dataset
2024-11-19 18:05:23,901:INFO:Defining folds
2024-11-19 18:05:23,901:INFO:Declaring metric variables
2024-11-19 18:05:23,901:INFO:Importing untrained model
2024-11-19 18:05:23,901:INFO:Declaring custom model
2024-11-19 18:05:23,901:INFO:Gradient Boosting Classifier Imported successfully
2024-11-19 18:05:23,902:INFO:Cross validation set to False
2024-11-19 18:05:23,902:INFO:Fitting Model
2024-11-19 18:05:31,974:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-11-19 18:05:31,975:INFO:create_model() successfully completed......................................
2024-11-19 18:05:32,018:INFO:_master_model_container: 17
2024-11-19 18:05:32,018:INFO:_display_container: 5
2024-11-19 18:05:32,026:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-11-19 18:05:32,026:INFO:finalize_model() successfully completed......................................
2024-11-19 18:05:32,103:INFO:Initializing predict_model()
2024-11-19 18:05:32,103:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3115558b0>)
2024-11-19 18:05:32,103:INFO:Checking exceptions
2024-11-19 18:05:32,103:INFO:Preloading libraries
2024-11-19 18:05:32,407:INFO:Initializing predict_model()
2024-11-19 18:05:32,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x328763160>)
2024-11-19 18:05:32,408:INFO:Checking exceptions
2024-11-19 18:05:32,408:INFO:Preloading libraries
2024-11-19 18:05:32,409:INFO:Set up data.
2024-11-19 18:05:32,475:INFO:Set up index.
2024-11-19 18:05:33,815:INFO:Initializing save_model()
2024-11-19 18:05:33,816:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=Modelo_Final_19_11_2024, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-19 18:05:33,816:INFO:Adding model into prep_pipe
2024-11-19 18:05:33,816:WARNING:Only Model saved as it was a pipeline.
2024-11-19 18:05:33,822:INFO:Modelo_Final_19_11_2024.pkl saved in current working directory
2024-11-19 18:05:33,830:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-11-19 18:05:33,830:INFO:save_model() successfully completed......................................
2024-11-19 18:05:33,895:INFO:Initializing predict_model()
2024-11-19 18:05:33,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32826edc0>)
2024-11-19 18:05:33,896:INFO:Checking exceptions
2024-11-19 18:05:33,896:INFO:Preloading libraries
2024-11-19 18:05:34,163:INFO:Initializing predict_model()
2024-11-19 18:05:34,163:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32826eee0>)
2024-11-19 18:05:34,163:INFO:Checking exceptions
2024-11-19 18:05:34,163:INFO:Preloading libraries
2024-11-19 18:06:21,876:INFO:Initializing predict_model()
2024-11-19 18:06:21,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32826e940>)
2024-11-19 18:06:21,876:INFO:Checking exceptions
2024-11-19 18:06:21,876:INFO:Preloading libraries
2024-11-19 18:06:21,878:INFO:Set up data.
2024-11-19 18:06:21,955:INFO:Set up index.
2024-11-20 09:52:57,013:INFO:Initializing predict_model()
2024-11-20 09:52:57,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32c5b8f70>)
2024-11-20 09:52:57,014:INFO:Checking exceptions
2024-11-20 09:52:57,014:INFO:Preloading libraries
2024-11-20 09:52:57,016:INFO:Set up data.
2024-11-20 09:52:57,093:INFO:Set up index.
2024-11-20 09:53:08,209:INFO:Initializing predict_model()
2024-11-20 09:53:08,210:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x328a90310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32c5a34c0>)
2024-11-20 09:53:08,210:INFO:Checking exceptions
2024-11-20 09:53:08,210:INFO:Preloading libraries
2024-11-20 09:53:08,211:INFO:Set up data.
2024-11-20 09:53:08,279:INFO:Set up index.
2024-11-20 09:53:33,907:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-20 09:53:40,243:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:45:52,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:45:52,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:45:52,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:45:52,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,403:INFO:PyCaret ClassificationExperiment
2024-11-22 15:55:29,404:INFO:Logging name: clf-default-name
2024-11-22 15:55:29,404:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-22 15:55:29,404:INFO:version 3.3.2
2024-11-22 15:55:29,404:INFO:Initializing setup()
2024-11-22 15:55:29,404:INFO:self.USI: 9261
2024-11-22 15:55:29,404:INFO:self._variable_keys: {'y_train', 'html_param', 'exp_name_log', 'gpu_param', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'X_test', 'is_multiclass', 'target_param', 'memory', 'logging_param', 'pipeline', 'seed', 'fold_generator', 'fold_shuffle_param', 'idx', 'n_jobs_param', '_ml_usecase', 'X', 'fix_imbalance', 'y_test', 'data', 'fold_groups_param', '_available_plots', 'y', 'USI', 'log_plots_param'}
2024-11-22 15:55:29,404:INFO:Checking environment
2024-11-22 15:55:29,404:INFO:python_version: 3.9.6
2024-11-22 15:55:29,404:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-22 15:55:29,404:INFO:machine: arm64
2024-11-22 15:55:29,405:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-22 15:55:29,405:INFO:Memory: svmem(total=17179869184, available=6193823744, percent=63.9, used=7627636736, free=299171840, active=5940264960, inactive=5885132800, wired=1687371776)
2024-11-22 15:55:29,405:INFO:Physical Core: 10
2024-11-22 15:55:29,405:INFO:Logical Core: 10
2024-11-22 15:55:29,405:INFO:Checking libraries
2024-11-22 15:55:29,405:INFO:System:
2024-11-22 15:55:29,408:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-22 15:55:29,408:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-22 15:55:29,408:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-22 15:55:29,408:INFO:PyCaret required dependencies:
2024-11-22 15:55:29,590:INFO:                 pip: 24.3.1
2024-11-22 15:55:29,590:INFO:          setuptools: 58.0.4
2024-11-22 15:55:29,590:INFO:             pycaret: 3.3.2
2024-11-22 15:55:29,590:INFO:             IPython: 8.18.1
2024-11-22 15:55:29,590:INFO:          ipywidgets: 8.1.5
2024-11-22 15:55:29,590:INFO:                tqdm: 4.67.0
2024-11-22 15:55:29,590:INFO:               numpy: 1.26.4
2024-11-22 15:55:29,590:INFO:              pandas: 2.1.4
2024-11-22 15:55:29,590:INFO:              jinja2: 3.1.4
2024-11-22 15:55:29,590:INFO:               scipy: 1.11.4
2024-11-22 15:55:29,590:INFO:              joblib: 1.3.2
2024-11-22 15:55:29,590:INFO:             sklearn: 1.4.2
2024-11-22 15:55:29,590:INFO:                pyod: 2.0.2
2024-11-22 15:55:29,590:INFO:            imblearn: 0.12.4
2024-11-22 15:55:29,590:INFO:   category_encoders: 2.6.4
2024-11-22 15:55:29,590:INFO:            lightgbm: 4.5.0
2024-11-22 15:55:29,590:INFO:               numba: 0.60.0
2024-11-22 15:55:29,590:INFO:            requests: 2.32.3
2024-11-22 15:55:29,590:INFO:          matplotlib: 3.7.5
2024-11-22 15:55:29,590:INFO:          scikitplot: 0.3.7
2024-11-22 15:55:29,590:INFO:         yellowbrick: 1.5
2024-11-22 15:55:29,590:INFO:              plotly: 5.24.1
2024-11-22 15:55:29,590:INFO:    plotly-resampler: Not installed
2024-11-22 15:55:29,590:INFO:             kaleido: 0.4.2
2024-11-22 15:55:29,590:INFO:           schemdraw: 0.15
2024-11-22 15:55:29,590:INFO:         statsmodels: 0.14.4
2024-11-22 15:55:29,590:INFO:              sktime: 0.26.0
2024-11-22 15:55:29,590:INFO:               tbats: 1.1.3
2024-11-22 15:55:29,590:INFO:            pmdarima: 2.0.4
2024-11-22 15:55:29,590:INFO:              psutil: 6.1.0
2024-11-22 15:55:29,590:INFO:          markupsafe: 3.0.2
2024-11-22 15:55:29,590:INFO:             pickle5: Not installed
2024-11-22 15:55:29,590:INFO:         cloudpickle: 3.1.0
2024-11-22 15:55:29,590:INFO:         deprecation: 2.1.0
2024-11-22 15:55:29,590:INFO:              xxhash: 3.5.0
2024-11-22 15:55:29,590:INFO:           wurlitzer: 3.1.1
2024-11-22 15:55:29,590:INFO:PyCaret optional dependencies:
2024-11-22 15:55:29,598:INFO:                shap: 0.46.0
2024-11-22 15:55:29,598:INFO:           interpret: Not installed
2024-11-22 15:55:29,598:INFO:                umap: Not installed
2024-11-22 15:55:29,598:INFO:     ydata_profiling: Not installed
2024-11-22 15:55:29,598:INFO:  explainerdashboard: Not installed
2024-11-22 15:55:29,598:INFO:             autoviz: Not installed
2024-11-22 15:55:29,598:INFO:           fairlearn: Not installed
2024-11-22 15:55:29,598:INFO:          deepchecks: Not installed
2024-11-22 15:55:29,598:INFO:             xgboost: Not installed
2024-11-22 15:55:29,598:INFO:            catboost: 1.2.7
2024-11-22 15:55:29,598:INFO:              kmodes: Not installed
2024-11-22 15:55:29,598:INFO:             mlxtend: Not installed
2024-11-22 15:55:29,598:INFO:       statsforecast: Not installed
2024-11-22 15:55:29,598:INFO:        tune_sklearn: Not installed
2024-11-22 15:55:29,598:INFO:                 ray: Not installed
2024-11-22 15:55:29,598:INFO:            hyperopt: Not installed
2024-11-22 15:55:29,598:INFO:              optuna: Not installed
2024-11-22 15:55:29,599:INFO:               skopt: Not installed
2024-11-22 15:55:29,599:INFO:              mlflow: Not installed
2024-11-22 15:55:29,599:INFO:              gradio: Not installed
2024-11-22 15:55:29,599:INFO:             fastapi: Not installed
2024-11-22 15:55:29,599:INFO:             uvicorn: Not installed
2024-11-22 15:55:29,599:INFO:              m2cgen: Not installed
2024-11-22 15:55:29,599:INFO:           evidently: Not installed
2024-11-22 15:55:29,599:INFO:               fugue: Not installed
2024-11-22 15:55:29,599:INFO:           streamlit: Not installed
2024-11-22 15:55:29,599:INFO:             prophet: Not installed
2024-11-22 15:55:29,599:INFO:None
2024-11-22 15:55:29,599:INFO:Set up GPU usage.
2024-11-22 15:55:29,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,599:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-11-22 15:55:29,599:INFO:Set up data.
2024-11-22 15:55:29,623:INFO:Set up folding strategy.
2024-11-22 15:55:29,623:INFO:Set up train/test split.
2024-11-22 15:55:29,715:INFO:Set up index.
2024-11-22 15:55:29,718:INFO:Assigning column types.
2024-11-22 15:55:29,758:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-22 15:55:29,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 15:55:29,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,781:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,782:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 15:55:29,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,794:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:29,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:29,821:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:30,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,867:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 15:55:30,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 15:55:30,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:30,885:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:30,886:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-22 15:55:30,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 15:55:30,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:30,922:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:30,922:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,942:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 15:55:30,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:30,957:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:30,958:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-22 15:55:30,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:30,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:30,993:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:30,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:31,029:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:31,031:INFO:Preparing preprocessing pipeline...
2024-11-22 15:55:31,041:INFO:Set up simple imputation.
2024-11-22 15:55:31,041:INFO:Set up feature normalization.
2024-11-22 15:55:31,234:INFO:Finished creating preprocessing pipeline.
2024-11-22 15:55:31,238:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indic...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-22 15:55:31,238:INFO:Creating final display dataframe.
2024-11-22 15:55:31,757:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (381109, 14)
4        Transformed data shape      (381109, 14)
5   Transformed train set shape      (304887, 14)
6    Transformed test set shape       (76222, 14)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU              True
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              9261
2024-11-22 15:55:31,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:31,799:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:31,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 15:55:31,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 15:55:31,835:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 15:55:31,836:INFO:setup() successfully completed in 2.44s...............
2024-11-22 15:55:46,665:INFO:Initializing compare_models()
2024-11-22 15:55:46,665:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-22 15:55:46,665:INFO:Checking exceptions
2024-11-22 15:55:46,711:INFO:Preparing display monitor
2024-11-22 15:55:46,770:INFO:Initializing Logistic Regression
2024-11-22 15:55:46,770:INFO:Total runtime is 4.21603520711263e-06 minutes
2024-11-22 15:55:46,772:INFO:SubProcess create_model() called ==================================
2024-11-22 15:55:46,773:INFO:Initializing create_model()
2024-11-22 15:55:46,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:55:46,773:INFO:Checking exceptions
2024-11-22 15:55:46,773:INFO:Importing libraries
2024-11-22 15:55:46,773:INFO:Copying training dataset
2024-11-22 15:55:46,882:INFO:Defining folds
2024-11-22 15:55:46,883:INFO:Declaring metric variables
2024-11-22 15:55:46,884:INFO:Importing untrained model
2024-11-22 15:55:46,886:INFO:Logistic Regression Imported successfully
2024-11-22 15:55:46,890:INFO:Starting cross validation
2024-11-22 15:55:46,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:55:47,366:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:55:51,364:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:55:51,799:INFO:Calculating mean and std
2024-11-22 15:55:51,802:INFO:Creating metrics dataframe
2024-11-22 15:55:51,804:INFO:Uploading results into container
2024-11-22 15:55:51,804:INFO:Uploading model into container now
2024-11-22 15:55:51,804:INFO:_master_model_container: 1
2024-11-22 15:55:51,804:INFO:_display_container: 2
2024-11-22 15:55:51,804:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-22 15:55:51,804:INFO:create_model() successfully completed......................................
2024-11-22 15:55:51,854:INFO:SubProcess create_model() end ==================================
2024-11-22 15:55:51,854:INFO:Creating metrics dataframe
2024-11-22 15:55:51,892:INFO:Initializing K Neighbors Classifier
2024-11-22 15:55:51,893:INFO:Total runtime is 0.08538620074590048 minutes
2024-11-22 15:55:51,907:INFO:SubProcess create_model() called ==================================
2024-11-22 15:55:51,907:INFO:Initializing create_model()
2024-11-22 15:55:51,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:55:51,907:INFO:Checking exceptions
2024-11-22 15:55:51,907:INFO:Importing libraries
2024-11-22 15:55:51,907:INFO:Copying training dataset
2024-11-22 15:55:51,988:INFO:Defining folds
2024-11-22 15:55:51,990:INFO:Declaring metric variables
2024-11-22 15:55:52,000:INFO:Importing untrained model
2024-11-22 15:55:52,021:INFO:K Neighbors Classifier Imported successfully
2024-11-22 15:55:52,031:INFO:Starting cross validation
2024-11-22 15:55:52,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:57:36,059:INFO:Calculating mean and std
2024-11-22 15:57:36,061:INFO:Creating metrics dataframe
2024-11-22 15:57:36,062:INFO:Uploading results into container
2024-11-22 15:57:36,063:INFO:Uploading model into container now
2024-11-22 15:57:36,063:INFO:_master_model_container: 2
2024-11-22 15:57:36,063:INFO:_display_container: 2
2024-11-22 15:57:36,063:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-22 15:57:36,063:INFO:create_model() successfully completed......................................
2024-11-22 15:57:36,113:INFO:SubProcess create_model() end ==================================
2024-11-22 15:57:36,113:INFO:Creating metrics dataframe
2024-11-22 15:57:36,116:INFO:Initializing Naive Bayes
2024-11-22 15:57:36,116:INFO:Total runtime is 1.8224400997161865 minutes
2024-11-22 15:57:36,118:INFO:SubProcess create_model() called ==================================
2024-11-22 15:57:36,118:INFO:Initializing create_model()
2024-11-22 15:57:36,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:57:36,118:INFO:Checking exceptions
2024-11-22 15:57:36,118:INFO:Importing libraries
2024-11-22 15:57:36,118:INFO:Copying training dataset
2024-11-22 15:57:36,198:INFO:Defining folds
2024-11-22 15:57:36,199:INFO:Declaring metric variables
2024-11-22 15:57:36,200:INFO:Importing untrained model
2024-11-22 15:57:36,202:INFO:Naive Bayes Imported successfully
2024-11-22 15:57:36,205:INFO:Starting cross validation
2024-11-22 15:57:36,206:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:57:38,932:INFO:Calculating mean and std
2024-11-22 15:57:38,933:INFO:Creating metrics dataframe
2024-11-22 15:57:38,934:INFO:Uploading results into container
2024-11-22 15:57:38,934:INFO:Uploading model into container now
2024-11-22 15:57:38,934:INFO:_master_model_container: 3
2024-11-22 15:57:38,934:INFO:_display_container: 2
2024-11-22 15:57:38,934:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-22 15:57:38,935:INFO:create_model() successfully completed......................................
2024-11-22 15:57:38,986:INFO:SubProcess create_model() end ==================================
2024-11-22 15:57:38,986:INFO:Creating metrics dataframe
2024-11-22 15:57:38,990:INFO:Initializing Decision Tree Classifier
2024-11-22 15:57:38,990:INFO:Total runtime is 1.8703293840090434 minutes
2024-11-22 15:57:38,991:INFO:SubProcess create_model() called ==================================
2024-11-22 15:57:38,992:INFO:Initializing create_model()
2024-11-22 15:57:38,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:57:38,992:INFO:Checking exceptions
2024-11-22 15:57:38,992:INFO:Importing libraries
2024-11-22 15:57:38,992:INFO:Copying training dataset
2024-11-22 15:57:39,070:INFO:Defining folds
2024-11-22 15:57:39,070:INFO:Declaring metric variables
2024-11-22 15:57:39,072:INFO:Importing untrained model
2024-11-22 15:57:39,074:INFO:Decision Tree Classifier Imported successfully
2024-11-22 15:57:39,078:INFO:Starting cross validation
2024-11-22 15:57:39,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:57:56,009:INFO:Calculating mean and std
2024-11-22 15:57:56,011:INFO:Creating metrics dataframe
2024-11-22 15:57:56,012:INFO:Uploading results into container
2024-11-22 15:57:56,012:INFO:Uploading model into container now
2024-11-22 15:57:56,012:INFO:_master_model_container: 4
2024-11-22 15:57:56,012:INFO:_display_container: 2
2024-11-22 15:57:56,012:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-22 15:57:56,012:INFO:create_model() successfully completed......................................
2024-11-22 15:57:56,059:INFO:SubProcess create_model() end ==================================
2024-11-22 15:57:56,059:INFO:Creating metrics dataframe
2024-11-22 15:57:56,063:INFO:Initializing SVM - Linear Kernel
2024-11-22 15:57:56,063:INFO:Total runtime is 2.1548917015393574 minutes
2024-11-22 15:57:56,065:INFO:SubProcess create_model() called ==================================
2024-11-22 15:57:56,065:INFO:Initializing create_model()
2024-11-22 15:57:56,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:57:56,065:INFO:Checking exceptions
2024-11-22 15:57:56,065:INFO:Importing libraries
2024-11-22 15:57:56,065:INFO:Copying training dataset
2024-11-22 15:57:56,140:INFO:Defining folds
2024-11-22 15:57:56,141:INFO:Declaring metric variables
2024-11-22 15:57:56,142:INFO:Importing untrained model
2024-11-22 15:57:56,144:INFO:SVM - Linear Kernel Imported successfully
2024-11-22 15:57:56,147:INFO:Starting cross validation
2024-11-22 15:57:56,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:57:56,720:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:57:57,299:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:57:57,876:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:57:58,430:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:57:58,989:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:57:59,516:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:00,583:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:01,136:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:01,709:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:01,726:INFO:Calculating mean and std
2024-11-22 15:58:01,726:INFO:Creating metrics dataframe
2024-11-22 15:58:01,732:INFO:Uploading results into container
2024-11-22 15:58:01,733:INFO:Uploading model into container now
2024-11-22 15:58:01,733:INFO:_master_model_container: 5
2024-11-22 15:58:01,733:INFO:_display_container: 2
2024-11-22 15:58:01,733:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-22 15:58:01,733:INFO:create_model() successfully completed......................................
2024-11-22 15:58:01,788:INFO:SubProcess create_model() end ==================================
2024-11-22 15:58:01,788:INFO:Creating metrics dataframe
2024-11-22 15:58:01,798:INFO:Initializing Ridge Classifier
2024-11-22 15:58:01,798:INFO:Total runtime is 2.2504692196846006 minutes
2024-11-22 15:58:01,804:INFO:SubProcess create_model() called ==================================
2024-11-22 15:58:01,804:INFO:Initializing create_model()
2024-11-22 15:58:01,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:58:01,804:INFO:Checking exceptions
2024-11-22 15:58:01,804:INFO:Importing libraries
2024-11-22 15:58:01,804:INFO:Copying training dataset
2024-11-22 15:58:01,886:INFO:Defining folds
2024-11-22 15:58:01,886:INFO:Declaring metric variables
2024-11-22 15:58:01,891:INFO:Importing untrained model
2024-11-22 15:58:01,904:INFO:Ridge Classifier Imported successfully
2024-11-22 15:58:01,926:INFO:Starting cross validation
2024-11-22 15:58:01,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:58:02,184:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:02,453:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:02,730:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:02,992:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:03,263:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:03,526:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:03,814:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:04,080:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:04,348:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:04,626:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:04,645:INFO:Calculating mean and std
2024-11-22 15:58:04,646:INFO:Creating metrics dataframe
2024-11-22 15:58:04,647:INFO:Uploading results into container
2024-11-22 15:58:04,647:INFO:Uploading model into container now
2024-11-22 15:58:04,647:INFO:_master_model_container: 6
2024-11-22 15:58:04,647:INFO:_display_container: 2
2024-11-22 15:58:04,647:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-22 15:58:04,647:INFO:create_model() successfully completed......................................
2024-11-22 15:58:04,707:INFO:SubProcess create_model() end ==================================
2024-11-22 15:58:04,712:INFO:Creating metrics dataframe
2024-11-22 15:58:04,721:INFO:Initializing Random Forest Classifier
2024-11-22 15:58:04,721:INFO:Total runtime is 2.299185514450073 minutes
2024-11-22 15:58:04,724:INFO:SubProcess create_model() called ==================================
2024-11-22 15:58:04,724:INFO:Initializing create_model()
2024-11-22 15:58:04,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:58:04,724:INFO:Checking exceptions
2024-11-22 15:58:04,724:INFO:Importing libraries
2024-11-22 15:58:04,724:INFO:Copying training dataset
2024-11-22 15:58:04,805:INFO:Defining folds
2024-11-22 15:58:04,806:INFO:Declaring metric variables
2024-11-22 15:58:04,810:INFO:Importing untrained model
2024-11-22 15:58:04,815:INFO:Random Forest Classifier Imported successfully
2024-11-22 15:58:04,829:INFO:Starting cross validation
2024-11-22 15:58:04,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:58:44,820:INFO:Calculating mean and std
2024-11-22 15:58:44,822:INFO:Creating metrics dataframe
2024-11-22 15:58:44,823:INFO:Uploading results into container
2024-11-22 15:58:44,823:INFO:Uploading model into container now
2024-11-22 15:58:44,824:INFO:_master_model_container: 7
2024-11-22 15:58:44,824:INFO:_display_container: 2
2024-11-22 15:58:44,824:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-22 15:58:44,824:INFO:create_model() successfully completed......................................
2024-11-22 15:58:44,874:INFO:SubProcess create_model() end ==================================
2024-11-22 15:58:44,874:INFO:Creating metrics dataframe
2024-11-22 15:58:44,878:INFO:Initializing Quadratic Discriminant Analysis
2024-11-22 15:58:44,878:INFO:Total runtime is 2.968467032909393 minutes
2024-11-22 15:58:44,880:INFO:SubProcess create_model() called ==================================
2024-11-22 15:58:44,880:INFO:Initializing create_model()
2024-11-22 15:58:44,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:58:44,880:INFO:Checking exceptions
2024-11-22 15:58:44,881:INFO:Importing libraries
2024-11-22 15:58:44,881:INFO:Copying training dataset
2024-11-22 15:58:44,964:INFO:Defining folds
2024-11-22 15:58:44,964:INFO:Declaring metric variables
2024-11-22 15:58:44,965:INFO:Importing untrained model
2024-11-22 15:58:44,967:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-22 15:58:44,970:INFO:Starting cross validation
2024-11-22 15:58:44,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:58:49,240:INFO:Calculating mean and std
2024-11-22 15:58:49,243:INFO:Creating metrics dataframe
2024-11-22 15:58:49,245:INFO:Uploading results into container
2024-11-22 15:58:49,246:INFO:Uploading model into container now
2024-11-22 15:58:49,247:INFO:_master_model_container: 8
2024-11-22 15:58:49,247:INFO:_display_container: 2
2024-11-22 15:58:49,247:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-22 15:58:49,247:INFO:create_model() successfully completed......................................
2024-11-22 15:58:49,307:INFO:SubProcess create_model() end ==================================
2024-11-22 15:58:49,307:INFO:Creating metrics dataframe
2024-11-22 15:58:49,313:INFO:Initializing Ada Boost Classifier
2024-11-22 15:58:49,313:INFO:Total runtime is 3.042386150360107 minutes
2024-11-22 15:58:49,319:INFO:SubProcess create_model() called ==================================
2024-11-22 15:58:49,320:INFO:Initializing create_model()
2024-11-22 15:58:49,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:58:49,321:INFO:Checking exceptions
2024-11-22 15:58:49,321:INFO:Importing libraries
2024-11-22 15:58:49,321:INFO:Copying training dataset
2024-11-22 15:58:49,444:INFO:Defining folds
2024-11-22 15:58:49,446:INFO:Declaring metric variables
2024-11-22 15:58:49,448:INFO:Importing untrained model
2024-11-22 15:58:49,451:INFO:Ada Boost Classifier Imported successfully
2024-11-22 15:58:49,458:INFO:Starting cross validation
2024-11-22 15:58:49,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 15:58:49,667:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:58:56,139:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:58:56,334:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:03,055:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:09,828:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:16,229:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:59:16,419:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:22,842:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:59:23,033:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:29,643:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:36,400:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:42,893:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:49,198:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:59:49,380:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 15:59:55,573:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 15:59:55,587:INFO:Calculating mean and std
2024-11-22 15:59:55,588:INFO:Creating metrics dataframe
2024-11-22 15:59:55,589:INFO:Uploading results into container
2024-11-22 15:59:55,589:INFO:Uploading model into container now
2024-11-22 15:59:55,589:INFO:_master_model_container: 9
2024-11-22 15:59:55,589:INFO:_display_container: 2
2024-11-22 15:59:55,589:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-22 15:59:55,589:INFO:create_model() successfully completed......................................
2024-11-22 15:59:55,635:INFO:SubProcess create_model() end ==================================
2024-11-22 15:59:55,635:INFO:Creating metrics dataframe
2024-11-22 15:59:55,640:INFO:Initializing Gradient Boosting Classifier
2024-11-22 15:59:55,641:INFO:Total runtime is 4.147842617829641 minutes
2024-11-22 15:59:55,642:INFO:SubProcess create_model() called ==================================
2024-11-22 15:59:55,642:INFO:Initializing create_model()
2024-11-22 15:59:55,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 15:59:55,642:INFO:Checking exceptions
2024-11-22 15:59:55,642:INFO:Importing libraries
2024-11-22 15:59:55,643:INFO:Copying training dataset
2024-11-22 15:59:55,732:INFO:Defining folds
2024-11-22 15:59:55,732:INFO:Declaring metric variables
2024-11-22 15:59:55,734:INFO:Importing untrained model
2024-11-22 15:59:55,736:INFO:Gradient Boosting Classifier Imported successfully
2024-11-22 15:59:55,739:INFO:Starting cross validation
2024-11-22 15:59:55,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:00:53,132:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:04:38,356:INFO:Calculating mean and std
2024-11-22 16:04:38,357:INFO:Creating metrics dataframe
2024-11-22 16:04:38,358:INFO:Uploading results into container
2024-11-22 16:04:38,358:INFO:Uploading model into container now
2024-11-22 16:04:38,358:INFO:_master_model_container: 10
2024-11-22 16:04:38,358:INFO:_display_container: 2
2024-11-22 16:04:38,359:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-22 16:04:38,359:INFO:create_model() successfully completed......................................
2024-11-22 16:04:38,407:INFO:SubProcess create_model() end ==================================
2024-11-22 16:04:38,407:INFO:Creating metrics dataframe
2024-11-22 16:04:38,412:INFO:Initializing Linear Discriminant Analysis
2024-11-22 16:04:38,412:INFO:Total runtime is 8.86070635318756 minutes
2024-11-22 16:04:38,414:INFO:SubProcess create_model() called ==================================
2024-11-22 16:04:38,414:INFO:Initializing create_model()
2024-11-22 16:04:38,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:04:38,415:INFO:Checking exceptions
2024-11-22 16:04:38,415:INFO:Importing libraries
2024-11-22 16:04:38,415:INFO:Copying training dataset
2024-11-22 16:04:38,502:INFO:Defining folds
2024-11-22 16:04:38,503:INFO:Declaring metric variables
2024-11-22 16:04:38,505:INFO:Importing untrained model
2024-11-22 16:04:38,507:INFO:Linear Discriminant Analysis Imported successfully
2024-11-22 16:04:38,510:INFO:Starting cross validation
2024-11-22 16:04:38,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:04:42,938:INFO:Calculating mean and std
2024-11-22 16:04:42,948:INFO:Creating metrics dataframe
2024-11-22 16:04:42,950:INFO:Uploading results into container
2024-11-22 16:04:42,950:INFO:Uploading model into container now
2024-11-22 16:04:42,950:INFO:_master_model_container: 11
2024-11-22 16:04:42,950:INFO:_display_container: 2
2024-11-22 16:04:42,951:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-22 16:04:42,951:INFO:create_model() successfully completed......................................
2024-11-22 16:04:43,030:INFO:SubProcess create_model() end ==================================
2024-11-22 16:04:43,030:INFO:Creating metrics dataframe
2024-11-22 16:04:43,046:INFO:Initializing Extra Trees Classifier
2024-11-22 16:04:43,048:INFO:Total runtime is 8.937964550654092 minutes
2024-11-22 16:04:43,059:INFO:SubProcess create_model() called ==================================
2024-11-22 16:04:43,059:INFO:Initializing create_model()
2024-11-22 16:04:43,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:04:43,059:INFO:Checking exceptions
2024-11-22 16:04:43,059:INFO:Importing libraries
2024-11-22 16:04:43,059:INFO:Copying training dataset
2024-11-22 16:04:43,150:INFO:Defining folds
2024-11-22 16:04:43,151:INFO:Declaring metric variables
2024-11-22 16:04:43,152:INFO:Importing untrained model
2024-11-22 16:04:43,155:INFO:Extra Trees Classifier Imported successfully
2024-11-22 16:04:43,158:INFO:Starting cross validation
2024-11-22 16:04:43,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:05:05,764:INFO:Calculating mean and std
2024-11-22 16:05:05,766:INFO:Creating metrics dataframe
2024-11-22 16:05:05,767:INFO:Uploading results into container
2024-11-22 16:05:05,768:INFO:Uploading model into container now
2024-11-22 16:05:05,768:INFO:_master_model_container: 12
2024-11-22 16:05:05,768:INFO:_display_container: 2
2024-11-22 16:05:05,768:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-22 16:05:05,768:INFO:create_model() successfully completed......................................
2024-11-22 16:05:05,823:INFO:SubProcess create_model() end ==================================
2024-11-22 16:05:05,823:INFO:Creating metrics dataframe
2024-11-22 16:05:05,829:INFO:Initializing Light Gradient Boosting Machine
2024-11-22 16:05:05,829:INFO:Total runtime is 9.317649686336516 minutes
2024-11-22 16:05:05,831:INFO:SubProcess create_model() called ==================================
2024-11-22 16:05:05,831:INFO:Initializing create_model()
2024-11-22 16:05:05,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:05:05,831:INFO:Checking exceptions
2024-11-22 16:05:05,831:INFO:Importing libraries
2024-11-22 16:05:05,831:INFO:Copying training dataset
2024-11-22 16:05:05,920:INFO:Defining folds
2024-11-22 16:05:05,920:INFO:Declaring metric variables
2024-11-22 16:05:05,922:INFO:Importing untrained model
2024-11-22 16:05:05,924:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-22 16:05:05,927:INFO:Starting cross validation
2024-11-22 16:05:05,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:05:06,215:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:06,220:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002063 seconds.
2024-11-22 16:05:06,220:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:06,220:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:06,220:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:06,220:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:06,221:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:06,221:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:07,419:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:07,424:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002038 seconds.
2024-11-22 16:05:07,425:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:07,425:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:07,425:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:07,425:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:07,425:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:07,425:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:08,632:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:08,637:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002018 seconds.
2024-11-22 16:05:08,637:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:08,637:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:08,638:INFO:[LightGBM] [Info] Total Bins 999
2024-11-22 16:05:08,638:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:08,638:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:08,638:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:09,882:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:09,887:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002058 seconds.
2024-11-22 16:05:09,888:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:09,888:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:09,888:INFO:[LightGBM] [Info] Total Bins 1000
2024-11-22 16:05:09,888:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:09,888:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:09,889:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:11,103:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:11,108:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002110 seconds.
2024-11-22 16:05:11,108:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:11,108:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:11,108:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:11,108:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:11,109:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:11,109:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:12,300:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:12,305:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002012 seconds.
2024-11-22 16:05:12,305:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:12,305:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:12,305:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:12,305:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:12,305:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:12,306:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:13,488:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240767
2024-11-22 16:05:13,494:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002033 seconds.
2024-11-22 16:05:13,494:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:13,494:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:13,494:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:13,494:INFO:[LightGBM] [Info] Number of data points in the train set: 274398, number of used features: 13
2024-11-22 16:05:13,494:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122563 -> initscore=-1.968381
2024-11-22 16:05:13,495:INFO:[LightGBM] [Info] Start training from score -1.968381
2024-11-22 16:05:14,641:INFO:[LightGBM] [Info] Number of positive: 33632, number of negative: 240767
2024-11-22 16:05:14,646:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001890 seconds.
2024-11-22 16:05:14,646:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:14,646:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:14,646:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:14,647:INFO:[LightGBM] [Info] Number of data points in the train set: 274399, number of used features: 13
2024-11-22 16:05:14,647:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122566 -> initscore=-1.968352
2024-11-22 16:05:14,647:INFO:[LightGBM] [Info] Start training from score -1.968352
2024-11-22 16:05:15,818:INFO:[LightGBM] [Info] Number of positive: 33632, number of negative: 240767
2024-11-22 16:05:15,823:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001922 seconds.
2024-11-22 16:05:15,823:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:15,823:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:15,823:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:15,823:INFO:[LightGBM] [Info] Number of data points in the train set: 274399, number of used features: 13
2024-11-22 16:05:15,824:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122566 -> initscore=-1.968352
2024-11-22 16:05:15,824:INFO:[LightGBM] [Info] Start training from score -1.968352
2024-11-22 16:05:17,008:INFO:[LightGBM] [Info] Number of positive: 33631, number of negative: 240768
2024-11-22 16:05:17,014:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001905 seconds.
2024-11-22 16:05:17,014:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-11-22 16:05:17,014:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-11-22 16:05:17,014:INFO:[LightGBM] [Info] Total Bins 1001
2024-11-22 16:05:17,014:INFO:[LightGBM] [Info] Number of data points in the train set: 274399, number of used features: 13
2024-11-22 16:05:17,015:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.122562 -> initscore=-1.968386
2024-11-22 16:05:17,015:INFO:[LightGBM] [Info] Start training from score -1.968386
2024-11-22 16:05:17,947:INFO:Calculating mean and std
2024-11-22 16:05:17,947:INFO:Creating metrics dataframe
2024-11-22 16:05:17,948:INFO:Uploading results into container
2024-11-22 16:05:17,948:INFO:Uploading model into container now
2024-11-22 16:05:17,948:INFO:_master_model_container: 13
2024-11-22 16:05:17,948:INFO:_display_container: 2
2024-11-22 16:05:17,949:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-22 16:05:17,949:INFO:create_model() successfully completed......................................
2024-11-22 16:05:17,998:INFO:SubProcess create_model() end ==================================
2024-11-22 16:05:17,998:INFO:Creating metrics dataframe
2024-11-22 16:05:18,004:INFO:Initializing CatBoost Classifier
2024-11-22 16:05:18,004:INFO:Total runtime is 9.520565569400786 minutes
2024-11-22 16:05:18,006:INFO:SubProcess create_model() called ==================================
2024-11-22 16:05:18,006:INFO:Initializing create_model()
2024-11-22 16:05:18,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:05:18,006:INFO:Checking exceptions
2024-11-22 16:05:18,006:INFO:Importing libraries
2024-11-22 16:05:18,006:INFO:Copying training dataset
2024-11-22 16:05:18,086:INFO:Defining folds
2024-11-22 16:05:18,086:INFO:Declaring metric variables
2024-11-22 16:05:18,088:INFO:Importing untrained model
2024-11-22 16:05:18,090:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:05:18,093:INFO:Starting cross validation
2024-11-22 16:05:18,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:05:19,965:WARNING:create_model() for catboost raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-22 16:05:19,973:WARNING:Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 2410, in _fit
    self._train(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5017, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5066, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/trainer_env.cpp:9: Environment for task type [GPU] not found


2024-11-22 16:05:19,973:INFO:Initializing create_model()
2024-11-22 16:05:19,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:05:19,973:INFO:Checking exceptions
2024-11-22 16:05:19,973:INFO:Importing libraries
2024-11-22 16:05:19,973:INFO:Copying training dataset
2024-11-22 16:05:20,047:INFO:Defining folds
2024-11-22 16:05:20,047:INFO:Declaring metric variables
2024-11-22 16:05:20,049:INFO:Importing untrained model
2024-11-22 16:05:20,051:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:05:20,054:INFO:Starting cross validation
2024-11-22 16:05:20,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:05:21,869:ERROR:create_model() for catboost raised an exception or returned all 0.0:
2024-11-22 16:05:21,869:ERROR:Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 2410, in _fit
    self._train(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5017, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5066, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/trainer_env.cpp:9: Environment for task type [GPU] not found


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 2410, in _fit
    self._train(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5017, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5066, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/trainer_env.cpp:9: Environment for task type [GPU] not found


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 2410, in _fit
    self._train(
  File "/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/catboost/core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5017, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5066, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/trainer_env.cpp:9: Environment for task type [GPU] not found


2024-11-22 16:05:21,870:INFO:Initializing Dummy Classifier
2024-11-22 16:05:21,870:INFO:Total runtime is 9.58500433762868 minutes
2024-11-22 16:05:21,872:INFO:SubProcess create_model() called ==================================
2024-11-22 16:05:21,872:INFO:Initializing create_model()
2024-11-22 16:05:21,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3255f3160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:05:21,872:INFO:Checking exceptions
2024-11-22 16:05:21,872:INFO:Importing libraries
2024-11-22 16:05:21,872:INFO:Copying training dataset
2024-11-22 16:05:21,955:INFO:Defining folds
2024-11-22 16:05:21,956:INFO:Declaring metric variables
2024-11-22 16:05:21,957:INFO:Importing untrained model
2024-11-22 16:05:21,959:INFO:Dummy Classifier Imported successfully
2024-11-22 16:05:21,962:INFO:Starting cross validation
2024-11-22 16:05:21,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:05:22,178:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:22,384:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:22,590:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:22,796:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:23,001:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:23,207:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:23,413:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:23,618:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:23,831:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:24,041:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:05:24,055:INFO:Calculating mean and std
2024-11-22 16:05:24,055:INFO:Creating metrics dataframe
2024-11-22 16:05:24,056:INFO:Uploading results into container
2024-11-22 16:05:24,056:INFO:Uploading model into container now
2024-11-22 16:05:24,056:INFO:_master_model_container: 14
2024-11-22 16:05:24,056:INFO:_display_container: 2
2024-11-22 16:05:24,056:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-22 16:05:24,056:INFO:create_model() successfully completed......................................
2024-11-22 16:05:24,105:INFO:SubProcess create_model() end ==================================
2024-11-22 16:05:24,105:INFO:Creating metrics dataframe
2024-11-22 16:05:24,110:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-22 16:05:24,114:INFO:Initializing create_model()
2024-11-22 16:05:24,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:05:24,114:INFO:Checking exceptions
2024-11-22 16:05:24,115:INFO:Importing libraries
2024-11-22 16:05:24,115:INFO:Copying training dataset
2024-11-22 16:05:24,196:INFO:Defining folds
2024-11-22 16:05:24,196:INFO:Declaring metric variables
2024-11-22 16:05:24,196:INFO:Importing untrained model
2024-11-22 16:05:24,196:INFO:Declaring custom model
2024-11-22 16:05:24,197:INFO:Logistic Regression Imported successfully
2024-11-22 16:05:24,197:INFO:Cross validation set to False
2024-11-22 16:05:24,197:INFO:Fitting Model
2024-11-22 16:05:24,589:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-22 16:05:24,589:INFO:create_model() successfully completed......................................
2024-11-22 16:05:24,734:INFO:_master_model_container: 14
2024-11-22 16:05:24,736:INFO:_display_container: 2
2024-11-22 16:05:24,736:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-22 16:05:24,736:INFO:compare_models() successfully completed......................................
2024-11-22 16:06:40,823:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020
  warnings.warn(

2024-11-22 16:06:53,551:INFO:Initializing get_config()
2024-11-22 16:06:53,552:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, variable=X_train)
2024-11-22 16:06:53,552:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2024-11-22 16:06:53,556:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-11-22 16:06:53,588:INFO:Variable:  returned as             id  age  driving_license  region_code  previously_insured  \
318741  318742   69                1          0.0                   0   
115282  115283   60                1         20.0                   0   
41578    41579   37                1         41.0                   0   
278301  278302   27                1          8.0                   0   
77135    77136   46                1         28.0                   0   
...        ...  ...              ...          ...                 ...   
238838  238839   47                1          3.0                   0   
306243  306244   42                1         28.0                   0   
266889  266890   24                1         15.0                   0   
230244  230245   23                1         46.0                   1   
104415  104416   37                1         32.0                   1   

        vehicle_damage  annual_premium  policy_sales_channel  vintage  \
318741               1          2630.0                  30.0       68   
115282               1          2630.0                 124.0       70   
41578                1         42804.0                 124.0       91   
278301               1         43112.0                 152.0      191   
77135                1         38599.0                  26.0       34   
...                ...             ...                   ...      ...   
238838               1         33905.0                 124.0       34   
306243               1         40918.0                 122.0      204   
266889               1          2630.0                 152.0       72   
230244               0         39842.0                 152.0       49   
104415               0          2630.0                 124.0      256   

        vehicle_age_damage  gender_Male  vehicle_age_between_1_2_year  \
318741                   2         True                          True   
115282                   2         True                          True   
41578                    2         True                          True   
278301                   1        False                         False   
77135                    2         True                          True   
...                    ...          ...                           ...   
238838                   2         True                          True   
306243                   2        False                          True   
266889                   1        False                         False   
230244                   0         True                         False   
104415                   0         True                          True   

        vehicle_age_over_2_years  
318741                     False  
115282                     False  
41578                      False  
278301                     False  
77135                      False  
...                          ...  
238838                     False  
306243                     False  
266889                     False  
230244                     False  
104415                     False  

[304887 rows x 13 columns]
2024-11-22 16:06:53,588:INFO:get_config() successfully completed......................................
2024-11-22 16:06:53,588:INFO:Initializing get_config()
2024-11-22 16:06:53,588:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, variable=X_test)
2024-11-22 16:06:53,589:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2024-11-22 16:06:53,589:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-11-22 16:06:53,608:INFO:Variable:  returned as             id  age  driving_license  region_code  previously_insured  \
348694  348695   25                1          2.0                   0   
310379  310380   41                1         28.0                   1   
224989  224990   24                1          9.0                   0   
21124    21125   59                1         30.0                   1   
193187  193188   75                1         28.0                   1   
...        ...  ...              ...          ...                 ...   
43240    43241   39                1          3.0                   0   
228988  228989   24                1         50.0                   0   
44512    44513   30                1         28.0                   0   
88793    88794   63                1         28.0                   1   
241694  241695   25                1         28.0                   1   

        vehicle_damage  annual_premium  policy_sales_channel  vintage  \
348694               0         31837.0                 152.0      261   
310379               0         31612.0                 124.0      283   
224989               1         26829.0                 151.0      124   
21124                0         17826.0                 152.0      266   
193187               1         53488.0                  26.0       81   
...                ...             ...                   ...      ...   
43240                1         23498.0                 124.0      173   
228988               0         36925.0                 152.0       49   
44512                1         48979.0                 122.0      212   
88793                0         44708.0                  26.0      249   
241694               0         37823.0                 152.0      255   

        vehicle_age_damage  gender_Male  vehicle_age_between_1_2_year  \
348694                   0        False                         False   
310379                   0         True                          True   
224989                   1         True                         False   
21124                    0         True                          True   
193187                   2        False                          True   
...                    ...          ...                           ...   
43240                    2         True                          True   
228988                   0        False                         False   
44512                    2         True                          True   
88793                    0        False                          True   
241694                   0         True                         False   

        vehicle_age_over_2_years  
348694                     False  
310379                     False  
224989                     False  
21124                      False  
193187                     False  
...                          ...  
43240                      False  
228988                     False  
44512                      False  
88793                      False  
241694                     False  

[76222 rows x 13 columns]
2024-11-22 16:06:53,608:INFO:get_config() successfully completed......................................
2024-11-22 16:06:53,608:INFO:Initializing get_config()
2024-11-22 16:06:53,608:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, variable=y_train)
2024-11-22 16:06:53,608:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2024-11-22 16:06:53,608:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-11-22 16:06:53,632:INFO:Variable:  returned as 318741    0
115282    0
41578     0
278301    1
77135     1
         ..
238838    0
306243    0
266889    0
230244    0
104415    0
Name: response, Length: 304887, dtype: int8
2024-11-22 16:06:53,632:INFO:get_config() successfully completed......................................
2024-11-22 16:06:53,632:INFO:Initializing get_config()
2024-11-22 16:06:53,632:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, variable=y_test)
2024-11-22 16:06:53,633:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2024-11-22 16:06:53,633:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-11-22 16:06:53,665:INFO:Variable:  returned as 348694    0
310379    0
224989    0
21124     0
193187    0
         ..
43240     0
228988    0
44512     1
88793     0
241694    0
Name: response, Length: 76222, dtype: int8
2024-11-22 16:06:53,665:INFO:get_config() successfully completed......................................
2024-11-22 16:07:17,853:INFO:Initializing create_model()
2024-11-22 16:07:17,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'X_train':             id  age  driving_license  region_code  previously_insured  \
0       318742   69                1     0.000000                   0   
1       115283   60                1    20.000000                   0   
2        41579   37                1    41.000000                   0   
3       278302   27                1     8.000000                   0   
4        77136   46                1    28.000000                   0   
...        ...  ...              ...          ...                 ...   
535033  273131   42                1    22.436813                   0   
535034  234688   45                1    28.000000                   0   
535035  365978   53                1    21.131590                   0   
535036   39142   73                1    25.574690                   0   
535037   49990   42                1    28.000000                   0   

        vehicle_damage  annual_premium  policy_sales_channel  vintage  \
0                    1     2630.000000             30.000000       68   
1                    1     2630.000000            124.000000       70   
2                    1    42804.000000            124.000000       91   
3                    1    43112.000000            152.000000      191   
4                    1    38599.000000             26.000000       34   
...                ...             ...                   ...      ...   
535033               1    38606.957031             96.740379      208   
535034               1    35690.167969             87.443306      146   
535035               1    26785.787109             77.475830      100   
535036               1    47417.285156             26.000000      143   
535037               1    45128.070312             66.731735      259   

        vehicle_age_damage  gender_Male  vehicle_age_between_1_2_year  \
0                        2         True                          True   
1                        2         True                          True   
2                        2         True                          True   
3                        1        False                         False   
4                        2         True                          True   
...                    ...          ...                           ...   
535033                   1         True                          True   
535034                   2         True                          True   
535035                   2         True                          True   
535036                   2         True                          True   
535037                   2         True                          True   

        vehicle_age_over_2_years  
0                          False  
1                          False  
2                          False  
3                          False  
4                          False  
...                          ...  
535033                     False  
535034                      True  
535035                      True  
535036                      True  
535037                     False  

[535038 rows x 13 columns], 'y_train': 0         0
1         0
2         0
3         1
4         1
         ..
535033    1
535034    1
535035    1
535036    1
535037    1
Name: response, Length: 535038, dtype: int8})
2024-11-22 16:07:17,853:INFO:Checking exceptions
2024-11-22 16:07:17,861:INFO:Importing libraries
2024-11-22 16:07:17,862:INFO:Copying training dataset
2024-11-22 16:07:17,970:INFO:Defining folds
2024-11-22 16:07:17,970:INFO:Declaring metric variables
2024-11-22 16:07:17,972:INFO:Importing untrained model
2024-11-22 16:07:17,979:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-22 16:07:17,983:INFO:Starting cross validation
2024-11-22 16:07:17,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:07:42,449:INFO:Initializing create_model()
2024-11-22 16:07:42,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3255add90>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'X_train':             id  age  driving_license  region_code  previously_insured  \
0       318742   69                1     0.000000                   0   
1       115283   60                1    20.000000                   0   
2        41579   37                1    41.000000                   0   
3       278302   27                1     8.000000                   0   
4        77136   46                1    28.000000                   0   
...        ...  ...              ...          ...                 ...   
535033  273131   42                1    22.436813                   0   
535034  234688   45                1    28.000000                   0   
535035  365978   53                1    21.131590                   0   
535036   39142   73                1    25.574690                   0   
535037   49990   42                1    28.000000                   0   

        vehicle_damage  annual_premium  policy_sales_channel  vintage  \
0                    1     2630.000000             30.000000       68   
1                    1     2630.000000            124.000000       70   
2                    1    42804.000000            124.000000       91   
3                    1    43112.000000            152.000000      191   
4                    1    38599.000000             26.000000       34   
...                ...             ...                   ...      ...   
535033               1    38606.957031             96.740379      208   
535034               1    35690.167969             87.443306      146   
535035               1    26785.787109             77.475830      100   
535036               1    47417.285156             26.000000      143   
535037               1    45128.070312             66.731735      259   

        vehicle_age_damage  gender_Male  vehicle_age_between_1_2_year  \
0                        2         True                          True   
1                        2         True                          True   
2                        2         True                          True   
3                        1        False                         False   
4                        2         True                          True   
...                    ...          ...                           ...   
535033                   1         True                          True   
535034                   2         True                          True   
535035                   2         True                          True   
535036                   2         True                          True   
535037                   2         True                          True   

        vehicle_age_over_2_years  
0                          False  
1                          False  
2                          False  
3                          False  
4                          False  
...                          ...  
535033                     False  
535034                      True  
535035                      True  
535036                      True  
535037                     False  

[535038 rows x 13 columns], 'y_train': 0         0
1         0
2         0
3         1
4         1
         ..
535033    1
535034    1
535035    1
535036    1
535037    1
Name: response, Length: 535038, dtype: int8})
2024-11-22 16:07:42,449:INFO:Checking exceptions
2024-11-22 16:07:42,458:INFO:Importing libraries
2024-11-22 16:07:42,458:INFO:Copying training dataset
2024-11-22 16:07:42,561:INFO:Defining folds
2024-11-22 16:07:42,561:INFO:Declaring metric variables
2024-11-22 16:07:42,563:INFO:Importing untrained model
2024-11-22 16:07:42,571:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-22 16:07:42,574:INFO:Starting cross validation
2024-11-22 16:07:42,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:10:31,657:INFO:PyCaret ClassificationExperiment
2024-11-22 16:10:31,658:INFO:Logging name: clf-default-name
2024-11-22 16:10:31,658:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-22 16:10:31,658:INFO:version 3.3.2
2024-11-22 16:10:31,658:INFO:Initializing setup()
2024-11-22 16:10:31,658:INFO:self.USI: 49ab
2024-11-22 16:10:31,658:INFO:self._variable_keys: {'y_train', 'html_param', 'exp_name_log', 'gpu_param', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'X_test', 'is_multiclass', 'target_param', 'memory', 'logging_param', 'pipeline', 'seed', 'fold_generator', 'fold_shuffle_param', 'idx', 'n_jobs_param', '_ml_usecase', 'X', 'fix_imbalance', 'y_test', 'data', 'fold_groups_param', '_available_plots', 'y', 'USI', 'log_plots_param'}
2024-11-22 16:10:31,658:INFO:Checking environment
2024-11-22 16:10:31,658:INFO:python_version: 3.9.6
2024-11-22 16:10:31,658:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-22 16:10:31,658:INFO:machine: arm64
2024-11-22 16:10:31,658:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:10:31,658:INFO:Memory: svmem(total=17179869184, available=5840175104, percent=66.0, used=7415332864, free=263962624, active=5646483456, inactive=5572935680, wired=1768849408)
2024-11-22 16:10:31,658:INFO:Physical Core: 10
2024-11-22 16:10:31,658:INFO:Logical Core: 10
2024-11-22 16:10:31,658:INFO:Checking libraries
2024-11-22 16:10:31,658:INFO:System:
2024-11-22 16:10:31,658:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-22 16:10:31,658:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-22 16:10:31,658:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:10:31,658:INFO:PyCaret required dependencies:
2024-11-22 16:10:31,658:INFO:                 pip: 24.3.1
2024-11-22 16:10:31,658:INFO:          setuptools: 58.0.4
2024-11-22 16:10:31,658:INFO:             pycaret: 3.3.2
2024-11-22 16:10:31,658:INFO:             IPython: 8.18.1
2024-11-22 16:10:31,658:INFO:          ipywidgets: 8.1.5
2024-11-22 16:10:31,658:INFO:                tqdm: 4.67.0
2024-11-22 16:10:31,658:INFO:               numpy: 1.26.4
2024-11-22 16:10:31,658:INFO:              pandas: 2.1.4
2024-11-22 16:10:31,658:INFO:              jinja2: 3.1.4
2024-11-22 16:10:31,658:INFO:               scipy: 1.11.4
2024-11-22 16:10:31,658:INFO:              joblib: 1.3.2
2024-11-22 16:10:31,658:INFO:             sklearn: 1.4.2
2024-11-22 16:10:31,658:INFO:                pyod: 2.0.2
2024-11-22 16:10:31,659:INFO:            imblearn: 0.12.4
2024-11-22 16:10:31,659:INFO:   category_encoders: 2.6.4
2024-11-22 16:10:31,659:INFO:            lightgbm: 4.5.0
2024-11-22 16:10:31,659:INFO:               numba: 0.60.0
2024-11-22 16:10:31,659:INFO:            requests: 2.32.3
2024-11-22 16:10:31,659:INFO:          matplotlib: 3.7.5
2024-11-22 16:10:31,659:INFO:          scikitplot: 0.3.7
2024-11-22 16:10:31,659:INFO:         yellowbrick: 1.5
2024-11-22 16:10:31,659:INFO:              plotly: 5.24.1
2024-11-22 16:10:31,659:INFO:    plotly-resampler: Not installed
2024-11-22 16:10:31,659:INFO:             kaleido: 0.4.2
2024-11-22 16:10:31,659:INFO:           schemdraw: 0.15
2024-11-22 16:10:31,659:INFO:         statsmodels: 0.14.4
2024-11-22 16:10:31,659:INFO:              sktime: 0.26.0
2024-11-22 16:10:31,659:INFO:               tbats: 1.1.3
2024-11-22 16:10:31,659:INFO:            pmdarima: 2.0.4
2024-11-22 16:10:31,659:INFO:              psutil: 6.1.0
2024-11-22 16:10:31,659:INFO:          markupsafe: 3.0.2
2024-11-22 16:10:31,659:INFO:             pickle5: Not installed
2024-11-22 16:10:31,659:INFO:         cloudpickle: 3.1.0
2024-11-22 16:10:31,659:INFO:         deprecation: 2.1.0
2024-11-22 16:10:31,659:INFO:              xxhash: 3.5.0
2024-11-22 16:10:31,659:INFO:           wurlitzer: 3.1.1
2024-11-22 16:10:31,659:INFO:PyCaret optional dependencies:
2024-11-22 16:10:31,659:INFO:                shap: 0.46.0
2024-11-22 16:10:31,659:INFO:           interpret: Not installed
2024-11-22 16:10:31,659:INFO:                umap: Not installed
2024-11-22 16:10:31,659:INFO:     ydata_profiling: Not installed
2024-11-22 16:10:31,659:INFO:  explainerdashboard: Not installed
2024-11-22 16:10:31,659:INFO:             autoviz: Not installed
2024-11-22 16:10:31,659:INFO:           fairlearn: Not installed
2024-11-22 16:10:31,659:INFO:          deepchecks: Not installed
2024-11-22 16:10:31,659:INFO:             xgboost: Not installed
2024-11-22 16:10:31,659:INFO:            catboost: 1.2.7
2024-11-22 16:10:31,659:INFO:              kmodes: Not installed
2024-11-22 16:10:31,659:INFO:             mlxtend: Not installed
2024-11-22 16:10:31,659:INFO:       statsforecast: Not installed
2024-11-22 16:10:31,659:INFO:        tune_sklearn: Not installed
2024-11-22 16:10:31,659:INFO:                 ray: Not installed
2024-11-22 16:10:31,659:INFO:            hyperopt: Not installed
2024-11-22 16:10:31,659:INFO:              optuna: Not installed
2024-11-22 16:10:31,659:INFO:               skopt: Not installed
2024-11-22 16:10:31,659:INFO:              mlflow: Not installed
2024-11-22 16:10:31,659:INFO:              gradio: Not installed
2024-11-22 16:10:31,659:INFO:             fastapi: Not installed
2024-11-22 16:10:31,659:INFO:             uvicorn: Not installed
2024-11-22 16:10:31,659:INFO:              m2cgen: Not installed
2024-11-22 16:10:31,659:INFO:           evidently: Not installed
2024-11-22 16:10:31,659:INFO:               fugue: Not installed
2024-11-22 16:10:31,659:INFO:           streamlit: Not installed
2024-11-22 16:10:31,659:INFO:             prophet: Not installed
2024-11-22 16:10:31,659:INFO:None
2024-11-22 16:10:31,659:INFO:Set up GPU usage.
2024-11-22 16:10:31,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,659:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-11-22 16:10:31,659:INFO:Set up data.
2024-11-22 16:10:31,706:INFO:Set up folding strategy.
2024-11-22 16:10:31,707:INFO:Set up train/test split.
2024-11-22 16:10:31,858:INFO:Set up index.
2024-11-22 16:10:31,865:INFO:Assigning column types.
2024-11-22 16:10:31,939:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-22 16:10:31,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,959:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:10:31,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,960:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:10:31,960:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:31,975:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:31,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:10:31,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:31,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:10:31,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:32,012:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:32,013:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-22 16:10:32,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:10:32,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:32,047:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:32,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,067:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:10:32,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:32,081:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:32,082:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-22 16:10:32,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:32,117:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:32,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:32,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:32,152:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:32,153:INFO:Preparing preprocessing pipeline...
2024-11-22 16:10:32,168:INFO:Set up simple imputation.
2024-11-22 16:10:32,168:INFO:Set up feature normalization.
2024-11-22 16:10:32,416:INFO:Finished creating preprocessing pipeline.
2024-11-22 16:10:32,418:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indic...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-22 16:10:32,418:INFO:Creating final display dataframe.
2024-11-22 16:10:33,248:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (668798, 14)
4        Transformed data shape      (668798, 14)
5   Transformed train set shape      (535038, 14)
6    Transformed test set shape      (133760, 14)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU              True
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              49ab
2024-11-22 16:10:33,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:33,288:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:33,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:10:33,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:10:33,322:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:10:33,323:INFO:setup() successfully completed in 1.67s...............
2024-11-22 16:10:45,018:INFO:Initializing compare_models()
2024-11-22 16:10:45,018:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-22 16:10:45,018:INFO:Checking exceptions
2024-11-22 16:10:45,098:INFO:Preparing display monitor
2024-11-22 16:10:45,109:INFO:Initializing Logistic Regression
2024-11-22 16:10:45,109:INFO:Total runtime is 1.978874206542969e-06 minutes
2024-11-22 16:10:45,110:INFO:SubProcess create_model() called ==================================
2024-11-22 16:10:45,110:INFO:Initializing create_model()
2024-11-22 16:10:45,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:10:45,111:INFO:Checking exceptions
2024-11-22 16:10:45,111:INFO:Importing libraries
2024-11-22 16:10:45,111:INFO:Copying training dataset
2024-11-22 16:10:45,248:INFO:Defining folds
2024-11-22 16:10:45,248:INFO:Declaring metric variables
2024-11-22 16:10:45,250:INFO:Importing untrained model
2024-11-22 16:10:45,251:INFO:Logistic Regression Imported successfully
2024-11-22 16:10:45,254:INFO:Starting cross validation
2024-11-22 16:10:45,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:10:53,513:INFO:Calculating mean and std
2024-11-22 16:10:53,514:INFO:Creating metrics dataframe
2024-11-22 16:10:53,516:INFO:Uploading results into container
2024-11-22 16:10:53,516:INFO:Uploading model into container now
2024-11-22 16:10:53,516:INFO:_master_model_container: 1
2024-11-22 16:10:53,516:INFO:_display_container: 2
2024-11-22 16:10:53,517:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-22 16:10:53,517:INFO:create_model() successfully completed......................................
2024-11-22 16:10:53,646:INFO:SubProcess create_model() end ==================================
2024-11-22 16:10:53,647:INFO:Creating metrics dataframe
2024-11-22 16:10:53,656:INFO:Initializing K Neighbors Classifier
2024-11-22 16:10:53,657:INFO:Total runtime is 0.14246993064880373 minutes
2024-11-22 16:10:53,660:INFO:SubProcess create_model() called ==================================
2024-11-22 16:10:53,660:INFO:Initializing create_model()
2024-11-22 16:10:53,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:10:53,661:INFO:Checking exceptions
2024-11-22 16:10:53,661:INFO:Importing libraries
2024-11-22 16:10:53,662:INFO:Copying training dataset
2024-11-22 16:10:53,811:INFO:Defining folds
2024-11-22 16:10:53,812:INFO:Declaring metric variables
2024-11-22 16:10:53,813:INFO:Importing untrained model
2024-11-22 16:10:53,816:INFO:K Neighbors Classifier Imported successfully
2024-11-22 16:10:53,819:INFO:Starting cross validation
2024-11-22 16:10:53,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:14:41,727:INFO:Calculating mean and std
2024-11-22 16:14:41,729:INFO:Creating metrics dataframe
2024-11-22 16:14:41,729:INFO:Uploading results into container
2024-11-22 16:14:41,730:INFO:Uploading model into container now
2024-11-22 16:14:41,730:INFO:_master_model_container: 2
2024-11-22 16:14:41,730:INFO:_display_container: 2
2024-11-22 16:14:41,730:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-22 16:14:41,730:INFO:create_model() successfully completed......................................
2024-11-22 16:14:41,793:INFO:SubProcess create_model() end ==================================
2024-11-22 16:14:41,793:INFO:Creating metrics dataframe
2024-11-22 16:14:41,796:INFO:Initializing Naive Bayes
2024-11-22 16:14:41,796:INFO:Total runtime is 3.944797646999359 minutes
2024-11-22 16:14:41,798:INFO:SubProcess create_model() called ==================================
2024-11-22 16:14:41,798:INFO:Initializing create_model()
2024-11-22 16:14:41,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:14:41,799:INFO:Checking exceptions
2024-11-22 16:14:41,799:INFO:Importing libraries
2024-11-22 16:14:41,799:INFO:Copying training dataset
2024-11-22 16:14:41,937:INFO:Defining folds
2024-11-22 16:14:41,937:INFO:Declaring metric variables
2024-11-22 16:14:41,938:INFO:Importing untrained model
2024-11-22 16:14:41,940:INFO:Naive Bayes Imported successfully
2024-11-22 16:14:41,943:INFO:Starting cross validation
2024-11-22 16:14:41,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:14:46,302:INFO:Calculating mean and std
2024-11-22 16:14:46,303:INFO:Creating metrics dataframe
2024-11-22 16:14:46,304:INFO:Uploading results into container
2024-11-22 16:14:46,304:INFO:Uploading model into container now
2024-11-22 16:14:46,304:INFO:_master_model_container: 3
2024-11-22 16:14:46,304:INFO:_display_container: 2
2024-11-22 16:14:46,304:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-22 16:14:46,304:INFO:create_model() successfully completed......................................
2024-11-22 16:14:46,367:INFO:SubProcess create_model() end ==================================
2024-11-22 16:14:46,367:INFO:Creating metrics dataframe
2024-11-22 16:14:46,370:INFO:Initializing Decision Tree Classifier
2024-11-22 16:14:46,370:INFO:Total runtime is 4.021031467119853 minutes
2024-11-22 16:14:46,372:INFO:SubProcess create_model() called ==================================
2024-11-22 16:14:46,372:INFO:Initializing create_model()
2024-11-22 16:14:46,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:14:46,372:INFO:Checking exceptions
2024-11-22 16:14:46,372:INFO:Importing libraries
2024-11-22 16:14:46,372:INFO:Copying training dataset
2024-11-22 16:14:46,501:INFO:Defining folds
2024-11-22 16:14:46,502:INFO:Declaring metric variables
2024-11-22 16:14:46,503:INFO:Importing untrained model
2024-11-22 16:14:46,505:INFO:Decision Tree Classifier Imported successfully
2024-11-22 16:14:46,508:INFO:Starting cross validation
2024-11-22 16:14:46,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:15:18,907:INFO:Calculating mean and std
2024-11-22 16:15:18,909:INFO:Creating metrics dataframe
2024-11-22 16:15:18,910:INFO:Uploading results into container
2024-11-22 16:15:18,910:INFO:Uploading model into container now
2024-11-22 16:15:18,910:INFO:_master_model_container: 4
2024-11-22 16:15:18,910:INFO:_display_container: 2
2024-11-22 16:15:18,911:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-22 16:15:18,911:INFO:create_model() successfully completed......................................
2024-11-22 16:15:18,971:INFO:SubProcess create_model() end ==================================
2024-11-22 16:15:18,971:INFO:Creating metrics dataframe
2024-11-22 16:15:18,974:INFO:Initializing SVM - Linear Kernel
2024-11-22 16:15:18,974:INFO:Total runtime is 4.564433066050212 minutes
2024-11-22 16:15:18,976:INFO:SubProcess create_model() called ==================================
2024-11-22 16:15:18,976:INFO:Initializing create_model()
2024-11-22 16:15:18,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:15:18,976:INFO:Checking exceptions
2024-11-22 16:15:18,977:INFO:Importing libraries
2024-11-22 16:15:18,977:INFO:Copying training dataset
2024-11-22 16:15:19,114:INFO:Defining folds
2024-11-22 16:15:19,114:INFO:Declaring metric variables
2024-11-22 16:15:19,116:INFO:Importing untrained model
2024-11-22 16:15:19,118:INFO:SVM - Linear Kernel Imported successfully
2024-11-22 16:15:19,121:INFO:Starting cross validation
2024-11-22 16:15:19,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:15:29,390:INFO:Calculating mean and std
2024-11-22 16:15:29,391:INFO:Creating metrics dataframe
2024-11-22 16:15:29,392:INFO:Uploading results into container
2024-11-22 16:15:29,392:INFO:Uploading model into container now
2024-11-22 16:15:29,392:INFO:_master_model_container: 5
2024-11-22 16:15:29,392:INFO:_display_container: 2
2024-11-22 16:15:29,392:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-22 16:15:29,392:INFO:create_model() successfully completed......................................
2024-11-22 16:15:29,466:INFO:SubProcess create_model() end ==================================
2024-11-22 16:15:29,467:INFO:Creating metrics dataframe
2024-11-22 16:15:29,482:INFO:Initializing Ridge Classifier
2024-11-22 16:15:29,482:INFO:Total runtime is 4.739563000202179 minutes
2024-11-22 16:15:29,492:INFO:SubProcess create_model() called ==================================
2024-11-22 16:15:29,492:INFO:Initializing create_model()
2024-11-22 16:15:29,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:15:29,493:INFO:Checking exceptions
2024-11-22 16:15:29,493:INFO:Importing libraries
2024-11-22 16:15:29,493:INFO:Copying training dataset
2024-11-22 16:15:29,624:INFO:Defining folds
2024-11-22 16:15:29,624:INFO:Declaring metric variables
2024-11-22 16:15:29,626:INFO:Importing untrained model
2024-11-22 16:15:29,628:INFO:Ridge Classifier Imported successfully
2024-11-22 16:15:29,631:INFO:Starting cross validation
2024-11-22 16:15:29,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:15:34,382:INFO:Calculating mean and std
2024-11-22 16:15:34,383:INFO:Creating metrics dataframe
2024-11-22 16:15:34,384:INFO:Uploading results into container
2024-11-22 16:15:34,384:INFO:Uploading model into container now
2024-11-22 16:15:34,384:INFO:_master_model_container: 6
2024-11-22 16:15:34,384:INFO:_display_container: 2
2024-11-22 16:15:34,384:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-22 16:15:34,385:INFO:create_model() successfully completed......................................
2024-11-22 16:15:34,455:INFO:SubProcess create_model() end ==================================
2024-11-22 16:15:34,455:INFO:Creating metrics dataframe
2024-11-22 16:15:34,469:INFO:Initializing Random Forest Classifier
2024-11-22 16:15:34,469:INFO:Total runtime is 4.822679781913758 minutes
2024-11-22 16:15:34,481:INFO:SubProcess create_model() called ==================================
2024-11-22 16:15:34,483:INFO:Initializing create_model()
2024-11-22 16:15:34,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:15:34,484:INFO:Checking exceptions
2024-11-22 16:15:34,484:INFO:Importing libraries
2024-11-22 16:15:34,484:INFO:Copying training dataset
2024-11-22 16:15:34,625:INFO:Defining folds
2024-11-22 16:15:34,625:INFO:Declaring metric variables
2024-11-22 16:15:34,627:INFO:Importing untrained model
2024-11-22 16:15:34,629:INFO:Random Forest Classifier Imported successfully
2024-11-22 16:15:34,632:INFO:Starting cross validation
2024-11-22 16:15:34,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:17:05,469:INFO:Calculating mean and std
2024-11-22 16:17:05,472:INFO:Creating metrics dataframe
2024-11-22 16:17:05,473:INFO:Uploading results into container
2024-11-22 16:17:05,473:INFO:Uploading model into container now
2024-11-22 16:17:05,474:INFO:_master_model_container: 7
2024-11-22 16:17:05,474:INFO:_display_container: 2
2024-11-22 16:17:05,474:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-22 16:17:05,474:INFO:create_model() successfully completed......................................
2024-11-22 16:17:05,551:INFO:SubProcess create_model() end ==================================
2024-11-22 16:17:05,551:INFO:Creating metrics dataframe
2024-11-22 16:17:05,555:INFO:Initializing Quadratic Discriminant Analysis
2024-11-22 16:17:05,556:INFO:Total runtime is 6.340785932540894 minutes
2024-11-22 16:17:05,557:INFO:SubProcess create_model() called ==================================
2024-11-22 16:17:05,558:INFO:Initializing create_model()
2024-11-22 16:17:05,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:17:05,558:INFO:Checking exceptions
2024-11-22 16:17:05,558:INFO:Importing libraries
2024-11-22 16:17:05,558:INFO:Copying training dataset
2024-11-22 16:17:05,714:INFO:Defining folds
2024-11-22 16:17:05,715:INFO:Declaring metric variables
2024-11-22 16:17:05,716:INFO:Importing untrained model
2024-11-22 16:17:05,718:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-22 16:17:05,721:INFO:Starting cross validation
2024-11-22 16:17:05,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:17:11,913:INFO:Calculating mean and std
2024-11-22 16:17:11,915:INFO:Creating metrics dataframe
2024-11-22 16:17:11,919:INFO:Uploading results into container
2024-11-22 16:17:11,919:INFO:Uploading model into container now
2024-11-22 16:17:11,920:INFO:_master_model_container: 8
2024-11-22 16:17:11,920:INFO:_display_container: 2
2024-11-22 16:17:11,920:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-22 16:17:11,920:INFO:create_model() successfully completed......................................
2024-11-22 16:17:12,001:INFO:SubProcess create_model() end ==================================
2024-11-22 16:17:12,001:INFO:Creating metrics dataframe
2024-11-22 16:17:12,014:INFO:Initializing Ada Boost Classifier
2024-11-22 16:17:12,014:INFO:Total runtime is 6.448425932725271 minutes
2024-11-22 16:17:12,019:INFO:SubProcess create_model() called ==================================
2024-11-22 16:17:12,019:INFO:Initializing create_model()
2024-11-22 16:17:12,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:17:12,020:INFO:Checking exceptions
2024-11-22 16:17:12,020:INFO:Importing libraries
2024-11-22 16:17:12,020:INFO:Copying training dataset
2024-11-22 16:17:12,173:INFO:Defining folds
2024-11-22 16:17:12,173:INFO:Declaring metric variables
2024-11-22 16:17:12,175:INFO:Importing untrained model
2024-11-22 16:17:12,177:INFO:Ada Boost Classifier Imported successfully
2024-11-22 16:17:12,180:INFO:Starting cross validation
2024-11-22 16:17:12,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:17:12,495:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:17:25,750:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:17:38,854:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:17:52,092:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:18:05,129:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:18:18,317:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:18:31,652:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:18:44,663:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:18:57,731:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:19:10,969:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:19:23,778:INFO:Calculating mean and std
2024-11-22 16:19:23,778:INFO:Creating metrics dataframe
2024-11-22 16:19:23,779:INFO:Uploading results into container
2024-11-22 16:19:23,779:INFO:Uploading model into container now
2024-11-22 16:19:23,780:INFO:_master_model_container: 9
2024-11-22 16:19:23,780:INFO:_display_container: 2
2024-11-22 16:19:23,780:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-22 16:19:23,780:INFO:create_model() successfully completed......................................
2024-11-22 16:19:23,840:INFO:SubProcess create_model() end ==================================
2024-11-22 16:19:23,840:INFO:Creating metrics dataframe
2024-11-22 16:19:23,844:INFO:Initializing Gradient Boosting Classifier
2024-11-22 16:19:23,844:INFO:Total runtime is 8.64559272925059 minutes
2024-11-22 16:19:23,846:INFO:SubProcess create_model() called ==================================
2024-11-22 16:19:23,846:INFO:Initializing create_model()
2024-11-22 16:19:23,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3433e2700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x343336370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:19:23,846:INFO:Checking exceptions
2024-11-22 16:19:23,846:INFO:Importing libraries
2024-11-22 16:19:23,846:INFO:Copying training dataset
2024-11-22 16:19:23,985:INFO:Defining folds
2024-11-22 16:19:23,985:INFO:Declaring metric variables
2024-11-22 16:19:23,987:INFO:Importing untrained model
2024-11-22 16:19:23,989:INFO:Gradient Boosting Classifier Imported successfully
2024-11-22 16:19:23,991:INFO:Starting cross validation
2024-11-22 16:19:23,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:25:02,147:INFO:PyCaret ClassificationExperiment
2024-11-22 16:25:02,148:INFO:Logging name: clf-default-name
2024-11-22 16:25:02,148:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-22 16:25:02,148:INFO:version 3.3.2
2024-11-22 16:25:02,148:INFO:Initializing setup()
2024-11-22 16:25:02,148:INFO:self.USI: 155a
2024-11-22 16:25:02,148:INFO:self._variable_keys: {'y_train', 'html_param', 'exp_name_log', 'gpu_param', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'X_test', 'is_multiclass', 'target_param', 'memory', 'logging_param', 'pipeline', 'seed', 'fold_generator', 'fold_shuffle_param', 'idx', 'n_jobs_param', '_ml_usecase', 'X', 'fix_imbalance', 'y_test', 'data', 'fold_groups_param', '_available_plots', 'y', 'USI', 'log_plots_param'}
2024-11-22 16:25:02,148:INFO:Checking environment
2024-11-22 16:25:02,148:INFO:python_version: 3.9.6
2024-11-22 16:25:02,148:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-22 16:25:02,148:INFO:machine: arm64
2024-11-22 16:25:02,148:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:25:02,148:INFO:Memory: svmem(total=17179869184, available=5770199040, percent=66.4, used=7561592832, free=65699840, active=5720768512, inactive=5703729152, wired=1840824320)
2024-11-22 16:25:02,148:INFO:Physical Core: 10
2024-11-22 16:25:02,148:INFO:Logical Core: 10
2024-11-22 16:25:02,148:INFO:Checking libraries
2024-11-22 16:25:02,148:INFO:System:
2024-11-22 16:25:02,148:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-22 16:25:02,148:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-22 16:25:02,148:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:25:02,148:INFO:PyCaret required dependencies:
2024-11-22 16:25:02,148:INFO:                 pip: 24.3.1
2024-11-22 16:25:02,148:INFO:          setuptools: 58.0.4
2024-11-22 16:25:02,148:INFO:             pycaret: 3.3.2
2024-11-22 16:25:02,148:INFO:             IPython: 8.18.1
2024-11-22 16:25:02,148:INFO:          ipywidgets: 8.1.5
2024-11-22 16:25:02,148:INFO:                tqdm: 4.67.0
2024-11-22 16:25:02,149:INFO:               numpy: 1.26.4
2024-11-22 16:25:02,149:INFO:              pandas: 2.1.4
2024-11-22 16:25:02,149:INFO:              jinja2: 3.1.4
2024-11-22 16:25:02,149:INFO:               scipy: 1.11.4
2024-11-22 16:25:02,149:INFO:              joblib: 1.3.2
2024-11-22 16:25:02,149:INFO:             sklearn: 1.4.2
2024-11-22 16:25:02,149:INFO:                pyod: 2.0.2
2024-11-22 16:25:02,149:INFO:            imblearn: 0.12.4
2024-11-22 16:25:02,149:INFO:   category_encoders: 2.6.4
2024-11-22 16:25:02,149:INFO:            lightgbm: 4.5.0
2024-11-22 16:25:02,149:INFO:               numba: 0.60.0
2024-11-22 16:25:02,149:INFO:            requests: 2.32.3
2024-11-22 16:25:02,149:INFO:          matplotlib: 3.7.5
2024-11-22 16:25:02,149:INFO:          scikitplot: 0.3.7
2024-11-22 16:25:02,149:INFO:         yellowbrick: 1.5
2024-11-22 16:25:02,149:INFO:              plotly: 5.24.1
2024-11-22 16:25:02,149:INFO:    plotly-resampler: Not installed
2024-11-22 16:25:02,149:INFO:             kaleido: 0.4.2
2024-11-22 16:25:02,149:INFO:           schemdraw: 0.15
2024-11-22 16:25:02,149:INFO:         statsmodels: 0.14.4
2024-11-22 16:25:02,149:INFO:              sktime: 0.26.0
2024-11-22 16:25:02,149:INFO:               tbats: 1.1.3
2024-11-22 16:25:02,149:INFO:            pmdarima: 2.0.4
2024-11-22 16:25:02,149:INFO:              psutil: 6.1.0
2024-11-22 16:25:02,149:INFO:          markupsafe: 3.0.2
2024-11-22 16:25:02,149:INFO:             pickle5: Not installed
2024-11-22 16:25:02,149:INFO:         cloudpickle: 3.1.0
2024-11-22 16:25:02,149:INFO:         deprecation: 2.1.0
2024-11-22 16:25:02,149:INFO:              xxhash: 3.5.0
2024-11-22 16:25:02,149:INFO:           wurlitzer: 3.1.1
2024-11-22 16:25:02,149:INFO:PyCaret optional dependencies:
2024-11-22 16:25:02,149:INFO:                shap: 0.46.0
2024-11-22 16:25:02,149:INFO:           interpret: Not installed
2024-11-22 16:25:02,149:INFO:                umap: Not installed
2024-11-22 16:25:02,149:INFO:     ydata_profiling: Not installed
2024-11-22 16:25:02,149:INFO:  explainerdashboard: Not installed
2024-11-22 16:25:02,149:INFO:             autoviz: Not installed
2024-11-22 16:25:02,149:INFO:           fairlearn: Not installed
2024-11-22 16:25:02,149:INFO:          deepchecks: Not installed
2024-11-22 16:25:02,149:INFO:             xgboost: Not installed
2024-11-22 16:25:02,149:INFO:            catboost: 1.2.7
2024-11-22 16:25:02,149:INFO:              kmodes: Not installed
2024-11-22 16:25:02,149:INFO:             mlxtend: Not installed
2024-11-22 16:25:02,149:INFO:       statsforecast: Not installed
2024-11-22 16:25:02,149:INFO:        tune_sklearn: Not installed
2024-11-22 16:25:02,149:INFO:                 ray: Not installed
2024-11-22 16:25:02,149:INFO:            hyperopt: Not installed
2024-11-22 16:25:02,149:INFO:              optuna: Not installed
2024-11-22 16:25:02,149:INFO:               skopt: Not installed
2024-11-22 16:25:02,149:INFO:              mlflow: Not installed
2024-11-22 16:25:02,149:INFO:              gradio: Not installed
2024-11-22 16:25:02,149:INFO:             fastapi: Not installed
2024-11-22 16:25:02,149:INFO:             uvicorn: Not installed
2024-11-22 16:25:02,149:INFO:              m2cgen: Not installed
2024-11-22 16:25:02,149:INFO:           evidently: Not installed
2024-11-22 16:25:02,149:INFO:               fugue: Not installed
2024-11-22 16:25:02,150:INFO:           streamlit: Not installed
2024-11-22 16:25:02,150:INFO:             prophet: Not installed
2024-11-22 16:25:02,150:INFO:None
2024-11-22 16:25:02,150:INFO:Set up GPU usage.
2024-11-22 16:25:02,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,150:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-11-22 16:25:02,150:INFO:Set up data.
2024-11-22 16:25:02,189:INFO:Set up folding strategy.
2024-11-22 16:25:02,189:INFO:Set up train/test split.
2024-11-22 16:25:02,308:INFO:Set up index.
2024-11-22 16:25:02,312:INFO:Assigning column types.
2024-11-22 16:25:02,366:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-22 16:25:02,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,385:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:25:02,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,386:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:02,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:02,401:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:02,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:25:02,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,421:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:02,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:02,436:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:02,436:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-22 16:25:02,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,456:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:02,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:02,471:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:02,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,491:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:02,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:02,506:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:02,506:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-22 16:25:02,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:02,540:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:02,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:02,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:02,574:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:02,575:INFO:Preparing preprocessing pipeline...
2024-11-22 16:25:02,584:INFO:Set up simple imputation.
2024-11-22 16:25:02,584:INFO:Set up feature normalization.
2024-11-22 16:25:02,774:INFO:Finished creating preprocessing pipeline.
2024-11-22 16:25:02,776:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indic...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-22 16:25:02,776:INFO:Creating final display dataframe.
2024-11-22 16:25:03,453:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (535038, 14)
4        Transformed data shape      (535038, 14)
5   Transformed train set shape      (428030, 14)
6    Transformed test set shape      (107008, 14)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU              True
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              155a
2024-11-22 16:25:03,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,487:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:03,493:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:03,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:03,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:03,548:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:03,548:INFO:setup() successfully completed in 1.4s...............
2024-11-22 16:25:29,511:INFO:PyCaret ClassificationExperiment
2024-11-22 16:25:29,511:INFO:Logging name: clf-default-name
2024-11-22 16:25:29,511:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-22 16:25:29,511:INFO:version 3.3.2
2024-11-22 16:25:29,511:INFO:Initializing setup()
2024-11-22 16:25:29,511:INFO:self.USI: 5713
2024-11-22 16:25:29,511:INFO:self._variable_keys: {'y_train', 'html_param', 'exp_name_log', 'gpu_param', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'X_test', 'is_multiclass', 'target_param', 'memory', 'logging_param', 'pipeline', 'seed', 'fold_generator', 'fold_shuffle_param', 'idx', 'n_jobs_param', '_ml_usecase', 'X', 'fix_imbalance', 'y_test', 'data', 'fold_groups_param', '_available_plots', 'y', 'USI', 'log_plots_param'}
2024-11-22 16:25:29,511:INFO:Checking environment
2024-11-22 16:25:29,511:INFO:python_version: 3.9.6
2024-11-22 16:25:29,511:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-22 16:25:29,511:INFO:machine: arm64
2024-11-22 16:25:29,511:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:25:29,511:INFO:Memory: svmem(total=17179869184, available=5784043520, percent=66.3, used=7490519040, free=128942080, active=5672402944, inactive=5599461376, wired=1818116096)
2024-11-22 16:25:29,511:INFO:Physical Core: 10
2024-11-22 16:25:29,511:INFO:Logical Core: 10
2024-11-22 16:25:29,511:INFO:Checking libraries
2024-11-22 16:25:29,511:INFO:System:
2024-11-22 16:25:29,511:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-22 16:25:29,511:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-22 16:25:29,511:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:25:29,511:INFO:PyCaret required dependencies:
2024-11-22 16:25:29,511:INFO:                 pip: 24.3.1
2024-11-22 16:25:29,511:INFO:          setuptools: 58.0.4
2024-11-22 16:25:29,511:INFO:             pycaret: 3.3.2
2024-11-22 16:25:29,511:INFO:             IPython: 8.18.1
2024-11-22 16:25:29,511:INFO:          ipywidgets: 8.1.5
2024-11-22 16:25:29,511:INFO:                tqdm: 4.67.0
2024-11-22 16:25:29,511:INFO:               numpy: 1.26.4
2024-11-22 16:25:29,512:INFO:              pandas: 2.1.4
2024-11-22 16:25:29,512:INFO:              jinja2: 3.1.4
2024-11-22 16:25:29,512:INFO:               scipy: 1.11.4
2024-11-22 16:25:29,512:INFO:              joblib: 1.3.2
2024-11-22 16:25:29,512:INFO:             sklearn: 1.4.2
2024-11-22 16:25:29,512:INFO:                pyod: 2.0.2
2024-11-22 16:25:29,512:INFO:            imblearn: 0.12.4
2024-11-22 16:25:29,512:INFO:   category_encoders: 2.6.4
2024-11-22 16:25:29,512:INFO:            lightgbm: 4.5.0
2024-11-22 16:25:29,512:INFO:               numba: 0.60.0
2024-11-22 16:25:29,512:INFO:            requests: 2.32.3
2024-11-22 16:25:29,512:INFO:          matplotlib: 3.7.5
2024-11-22 16:25:29,512:INFO:          scikitplot: 0.3.7
2024-11-22 16:25:29,512:INFO:         yellowbrick: 1.5
2024-11-22 16:25:29,512:INFO:              plotly: 5.24.1
2024-11-22 16:25:29,512:INFO:    plotly-resampler: Not installed
2024-11-22 16:25:29,512:INFO:             kaleido: 0.4.2
2024-11-22 16:25:29,512:INFO:           schemdraw: 0.15
2024-11-22 16:25:29,512:INFO:         statsmodels: 0.14.4
2024-11-22 16:25:29,512:INFO:              sktime: 0.26.0
2024-11-22 16:25:29,512:INFO:               tbats: 1.1.3
2024-11-22 16:25:29,512:INFO:            pmdarima: 2.0.4
2024-11-22 16:25:29,512:INFO:              psutil: 6.1.0
2024-11-22 16:25:29,512:INFO:          markupsafe: 3.0.2
2024-11-22 16:25:29,512:INFO:             pickle5: Not installed
2024-11-22 16:25:29,512:INFO:         cloudpickle: 3.1.0
2024-11-22 16:25:29,512:INFO:         deprecation: 2.1.0
2024-11-22 16:25:29,512:INFO:              xxhash: 3.5.0
2024-11-22 16:25:29,512:INFO:           wurlitzer: 3.1.1
2024-11-22 16:25:29,512:INFO:PyCaret optional dependencies:
2024-11-22 16:25:29,512:INFO:                shap: 0.46.0
2024-11-22 16:25:29,512:INFO:           interpret: Not installed
2024-11-22 16:25:29,512:INFO:                umap: Not installed
2024-11-22 16:25:29,512:INFO:     ydata_profiling: Not installed
2024-11-22 16:25:29,512:INFO:  explainerdashboard: Not installed
2024-11-22 16:25:29,512:INFO:             autoviz: Not installed
2024-11-22 16:25:29,512:INFO:           fairlearn: Not installed
2024-11-22 16:25:29,512:INFO:          deepchecks: Not installed
2024-11-22 16:25:29,512:INFO:             xgboost: Not installed
2024-11-22 16:25:29,512:INFO:            catboost: 1.2.7
2024-11-22 16:25:29,512:INFO:              kmodes: Not installed
2024-11-22 16:25:29,512:INFO:             mlxtend: Not installed
2024-11-22 16:25:29,512:INFO:       statsforecast: Not installed
2024-11-22 16:25:29,512:INFO:        tune_sklearn: Not installed
2024-11-22 16:25:29,512:INFO:                 ray: Not installed
2024-11-22 16:25:29,512:INFO:            hyperopt: Not installed
2024-11-22 16:25:29,512:INFO:              optuna: Not installed
2024-11-22 16:25:29,512:INFO:               skopt: Not installed
2024-11-22 16:25:29,512:INFO:              mlflow: Not installed
2024-11-22 16:25:29,512:INFO:              gradio: Not installed
2024-11-22 16:25:29,512:INFO:             fastapi: Not installed
2024-11-22 16:25:29,512:INFO:             uvicorn: Not installed
2024-11-22 16:25:29,512:INFO:              m2cgen: Not installed
2024-11-22 16:25:29,512:INFO:           evidently: Not installed
2024-11-22 16:25:29,512:INFO:               fugue: Not installed
2024-11-22 16:25:29,512:INFO:           streamlit: Not installed
2024-11-22 16:25:29,512:INFO:             prophet: Not installed
2024-11-22 16:25:29,512:INFO:None
2024-11-22 16:25:29,512:INFO:Set up GPU usage.
2024-11-22 16:25:29,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,512:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-11-22 16:25:29,513:INFO:Set up data.
2024-11-22 16:25:29,550:INFO:Set up folding strategy.
2024-11-22 16:25:29,550:INFO:Set up train/test split.
2024-11-22 16:25:29,672:INFO:Set up index.
2024-11-22 16:25:29,677:INFO:Assigning column types.
2024-11-22 16:25:29,731:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-22 16:25:29,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:25:29,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,751:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:29,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:29,766:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:29,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:25:29,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,786:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:29,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,798:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:29,801:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:29,801:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-22 16:25:29,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:29,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:29,835:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:29,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:25:29,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:29,870:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:29,870:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-22 16:25:29,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:29,904:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:29,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:29,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:29,939:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:29,940:INFO:Preparing preprocessing pipeline...
2024-11-22 16:25:29,950:INFO:Set up simple imputation.
2024-11-22 16:25:29,950:INFO:Set up feature normalization.
2024-11-22 16:25:30,141:INFO:Finished creating preprocessing pipeline.
2024-11-22 16:25:30,143:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indic...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-22 16:25:30,143:INFO:Creating final display dataframe.
2024-11-22 16:25:30,530:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (535038, 14)
4        Transformed data shape      (535038, 14)
5   Transformed train set shape      (428030, 14)
6    Transformed test set shape      (107008, 14)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU              True
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5713
2024-11-22 16:25:30,533:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:30,570:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:30,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:25:30,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:25:30,608:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:25:30,609:INFO:setup() successfully completed in 1.1s...............
2024-11-22 16:25:32,660:INFO:Initializing compare_models()
2024-11-22 16:25:32,660:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-22 16:25:32,660:INFO:Checking exceptions
2024-11-22 16:25:32,743:INFO:Preparing display monitor
2024-11-22 16:25:32,756:INFO:Initializing Logistic Regression
2024-11-22 16:25:32,756:INFO:Total runtime is 3.4968058268229165e-06 minutes
2024-11-22 16:25:32,758:INFO:SubProcess create_model() called ==================================
2024-11-22 16:25:32,758:INFO:Initializing create_model()
2024-11-22 16:25:32,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:25:32,758:INFO:Checking exceptions
2024-11-22 16:25:32,758:INFO:Importing libraries
2024-11-22 16:25:32,758:INFO:Copying training dataset
2024-11-22 16:25:32,871:INFO:Defining folds
2024-11-22 16:25:32,871:INFO:Declaring metric variables
2024-11-22 16:25:32,873:INFO:Importing untrained model
2024-11-22 16:25:32,875:INFO:Logistic Regression Imported successfully
2024-11-22 16:25:32,878:INFO:Starting cross validation
2024-11-22 16:25:32,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:25:39,457:INFO:Calculating mean and std
2024-11-22 16:25:39,459:INFO:Creating metrics dataframe
2024-11-22 16:25:39,461:INFO:Uploading results into container
2024-11-22 16:25:39,461:INFO:Uploading model into container now
2024-11-22 16:25:39,462:INFO:_master_model_container: 1
2024-11-22 16:25:39,462:INFO:_display_container: 2
2024-11-22 16:25:39,462:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-22 16:25:39,462:INFO:create_model() successfully completed......................................
2024-11-22 16:25:39,580:INFO:SubProcess create_model() end ==================================
2024-11-22 16:25:39,580:INFO:Creating metrics dataframe
2024-11-22 16:25:39,588:INFO:Initializing K Neighbors Classifier
2024-11-22 16:25:39,588:INFO:Total runtime is 0.11387023131052654 minutes
2024-11-22 16:25:39,594:INFO:SubProcess create_model() called ==================================
2024-11-22 16:25:39,595:INFO:Initializing create_model()
2024-11-22 16:25:39,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:25:39,595:INFO:Checking exceptions
2024-11-22 16:25:39,595:INFO:Importing libraries
2024-11-22 16:25:39,595:INFO:Copying training dataset
2024-11-22 16:25:39,736:INFO:Defining folds
2024-11-22 16:25:39,736:INFO:Declaring metric variables
2024-11-22 16:25:39,738:INFO:Importing untrained model
2024-11-22 16:25:39,740:INFO:K Neighbors Classifier Imported successfully
2024-11-22 16:25:39,743:INFO:Starting cross validation
2024-11-22 16:25:39,744:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:28:23,362:INFO:Calculating mean and std
2024-11-22 16:28:23,364:INFO:Creating metrics dataframe
2024-11-22 16:28:23,365:INFO:Uploading results into container
2024-11-22 16:28:23,365:INFO:Uploading model into container now
2024-11-22 16:28:23,365:INFO:_master_model_container: 2
2024-11-22 16:28:23,365:INFO:_display_container: 2
2024-11-22 16:28:23,365:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-22 16:28:23,365:INFO:create_model() successfully completed......................................
2024-11-22 16:28:23,436:INFO:SubProcess create_model() end ==================================
2024-11-22 16:28:23,436:INFO:Creating metrics dataframe
2024-11-22 16:28:23,439:INFO:Initializing Naive Bayes
2024-11-22 16:28:23,439:INFO:Total runtime is 2.8447291334470113 minutes
2024-11-22 16:28:23,441:INFO:SubProcess create_model() called ==================================
2024-11-22 16:28:23,441:INFO:Initializing create_model()
2024-11-22 16:28:23,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:28:23,441:INFO:Checking exceptions
2024-11-22 16:28:23,441:INFO:Importing libraries
2024-11-22 16:28:23,441:INFO:Copying training dataset
2024-11-22 16:28:23,545:INFO:Defining folds
2024-11-22 16:28:23,545:INFO:Declaring metric variables
2024-11-22 16:28:23,547:INFO:Importing untrained model
2024-11-22 16:28:23,549:INFO:Naive Bayes Imported successfully
2024-11-22 16:28:23,553:INFO:Starting cross validation
2024-11-22 16:28:23,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:28:27,124:INFO:Calculating mean and std
2024-11-22 16:28:27,125:INFO:Creating metrics dataframe
2024-11-22 16:28:27,125:INFO:Uploading results into container
2024-11-22 16:28:27,126:INFO:Uploading model into container now
2024-11-22 16:28:27,126:INFO:_master_model_container: 3
2024-11-22 16:28:27,126:INFO:_display_container: 2
2024-11-22 16:28:27,126:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-22 16:28:27,126:INFO:create_model() successfully completed......................................
2024-11-22 16:28:27,194:INFO:SubProcess create_model() end ==================================
2024-11-22 16:28:27,194:INFO:Creating metrics dataframe
2024-11-22 16:28:27,198:INFO:Initializing Decision Tree Classifier
2024-11-22 16:28:27,199:INFO:Total runtime is 2.9073830326398213 minutes
2024-11-22 16:28:27,200:INFO:SubProcess create_model() called ==================================
2024-11-22 16:28:27,200:INFO:Initializing create_model()
2024-11-22 16:28:27,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:28:27,201:INFO:Checking exceptions
2024-11-22 16:28:27,201:INFO:Importing libraries
2024-11-22 16:28:27,201:INFO:Copying training dataset
2024-11-22 16:28:27,307:INFO:Defining folds
2024-11-22 16:28:27,307:INFO:Declaring metric variables
2024-11-22 16:28:27,308:INFO:Importing untrained model
2024-11-22 16:28:27,310:INFO:Decision Tree Classifier Imported successfully
2024-11-22 16:28:27,314:INFO:Starting cross validation
2024-11-22 16:28:27,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:28:54,234:INFO:Calculating mean and std
2024-11-22 16:28:54,235:INFO:Creating metrics dataframe
2024-11-22 16:28:54,235:INFO:Uploading results into container
2024-11-22 16:28:54,236:INFO:Uploading model into container now
2024-11-22 16:28:54,236:INFO:_master_model_container: 4
2024-11-22 16:28:54,236:INFO:_display_container: 2
2024-11-22 16:28:54,236:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-22 16:28:54,236:INFO:create_model() successfully completed......................................
2024-11-22 16:28:54,304:INFO:SubProcess create_model() end ==================================
2024-11-22 16:28:54,304:INFO:Creating metrics dataframe
2024-11-22 16:28:54,308:INFO:Initializing SVM - Linear Kernel
2024-11-22 16:28:54,308:INFO:Total runtime is 3.3592138489087424 minutes
2024-11-22 16:28:54,310:INFO:SubProcess create_model() called ==================================
2024-11-22 16:28:54,310:INFO:Initializing create_model()
2024-11-22 16:28:54,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:28:54,310:INFO:Checking exceptions
2024-11-22 16:28:54,310:INFO:Importing libraries
2024-11-22 16:28:54,310:INFO:Copying training dataset
2024-11-22 16:28:54,416:INFO:Defining folds
2024-11-22 16:28:54,416:INFO:Declaring metric variables
2024-11-22 16:28:54,417:INFO:Importing untrained model
2024-11-22 16:28:54,420:INFO:SVM - Linear Kernel Imported successfully
2024-11-22 16:28:54,423:INFO:Starting cross validation
2024-11-22 16:28:54,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:29:02,864:INFO:Calculating mean and std
2024-11-22 16:29:02,866:INFO:Creating metrics dataframe
2024-11-22 16:29:02,869:INFO:Uploading results into container
2024-11-22 16:29:02,870:INFO:Uploading model into container now
2024-11-22 16:29:02,871:INFO:_master_model_container: 5
2024-11-22 16:29:02,872:INFO:_display_container: 2
2024-11-22 16:29:02,872:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-22 16:29:02,872:INFO:create_model() successfully completed......................................
2024-11-22 16:29:02,959:INFO:SubProcess create_model() end ==================================
2024-11-22 16:29:02,959:INFO:Creating metrics dataframe
2024-11-22 16:29:02,968:INFO:Initializing Ridge Classifier
2024-11-22 16:29:02,968:INFO:Total runtime is 3.5035355846087137 minutes
2024-11-22 16:29:02,972:INFO:SubProcess create_model() called ==================================
2024-11-22 16:29:02,973:INFO:Initializing create_model()
2024-11-22 16:29:02,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:29:02,974:INFO:Checking exceptions
2024-11-22 16:29:02,974:INFO:Importing libraries
2024-11-22 16:29:02,974:INFO:Copying training dataset
2024-11-22 16:29:03,120:INFO:Defining folds
2024-11-22 16:29:03,120:INFO:Declaring metric variables
2024-11-22 16:29:03,122:INFO:Importing untrained model
2024-11-22 16:29:03,124:INFO:Ridge Classifier Imported successfully
2024-11-22 16:29:03,127:INFO:Starting cross validation
2024-11-22 16:29:03,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:29:07,119:INFO:Calculating mean and std
2024-11-22 16:29:07,121:INFO:Creating metrics dataframe
2024-11-22 16:29:07,124:INFO:Uploading results into container
2024-11-22 16:29:07,124:INFO:Uploading model into container now
2024-11-22 16:29:07,126:INFO:_master_model_container: 6
2024-11-22 16:29:07,126:INFO:_display_container: 2
2024-11-22 16:29:07,126:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-22 16:29:07,126:INFO:create_model() successfully completed......................................
2024-11-22 16:29:07,200:INFO:SubProcess create_model() end ==================================
2024-11-22 16:29:07,200:INFO:Creating metrics dataframe
2024-11-22 16:29:07,214:INFO:Initializing Random Forest Classifier
2024-11-22 16:29:07,215:INFO:Total runtime is 3.574323582649231 minutes
2024-11-22 16:29:07,227:INFO:SubProcess create_model() called ==================================
2024-11-22 16:29:07,227:INFO:Initializing create_model()
2024-11-22 16:29:07,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:29:07,228:INFO:Checking exceptions
2024-11-22 16:29:07,228:INFO:Importing libraries
2024-11-22 16:29:07,228:INFO:Copying training dataset
2024-11-22 16:29:07,336:INFO:Defining folds
2024-11-22 16:29:07,337:INFO:Declaring metric variables
2024-11-22 16:29:07,338:INFO:Importing untrained model
2024-11-22 16:29:07,340:INFO:Random Forest Classifier Imported successfully
2024-11-22 16:29:07,344:INFO:Starting cross validation
2024-11-22 16:29:07,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:30:16,015:INFO:Calculating mean and std
2024-11-22 16:30:16,017:INFO:Creating metrics dataframe
2024-11-22 16:30:16,018:INFO:Uploading results into container
2024-11-22 16:30:16,018:INFO:Uploading model into container now
2024-11-22 16:30:16,018:INFO:_master_model_container: 7
2024-11-22 16:30:16,019:INFO:_display_container: 2
2024-11-22 16:30:16,019:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-22 16:30:16,019:INFO:create_model() successfully completed......................................
2024-11-22 16:30:16,094:INFO:SubProcess create_model() end ==================================
2024-11-22 16:30:16,095:INFO:Creating metrics dataframe
2024-11-22 16:30:16,099:INFO:Initializing Quadratic Discriminant Analysis
2024-11-22 16:30:16,099:INFO:Total runtime is 4.722392765680949 minutes
2024-11-22 16:30:16,101:INFO:SubProcess create_model() called ==================================
2024-11-22 16:30:16,101:INFO:Initializing create_model()
2024-11-22 16:30:16,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:30:16,101:INFO:Checking exceptions
2024-11-22 16:30:16,101:INFO:Importing libraries
2024-11-22 16:30:16,101:INFO:Copying training dataset
2024-11-22 16:30:16,213:INFO:Defining folds
2024-11-22 16:30:16,213:INFO:Declaring metric variables
2024-11-22 16:30:16,215:INFO:Importing untrained model
2024-11-22 16:30:16,217:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-22 16:30:16,220:INFO:Starting cross validation
2024-11-22 16:30:16,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:30:21,306:INFO:Calculating mean and std
2024-11-22 16:30:21,308:INFO:Creating metrics dataframe
2024-11-22 16:30:21,310:INFO:Uploading results into container
2024-11-22 16:30:21,310:INFO:Uploading model into container now
2024-11-22 16:30:21,311:INFO:_master_model_container: 8
2024-11-22 16:30:21,311:INFO:_display_container: 2
2024-11-22 16:30:21,311:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-22 16:30:21,311:INFO:create_model() successfully completed......................................
2024-11-22 16:30:21,383:INFO:SubProcess create_model() end ==================================
2024-11-22 16:30:21,384:INFO:Creating metrics dataframe
2024-11-22 16:30:21,411:INFO:Initializing Ada Boost Classifier
2024-11-22 16:30:21,416:INFO:Total runtime is 4.811011302471161 minutes
2024-11-22 16:30:21,428:INFO:SubProcess create_model() called ==================================
2024-11-22 16:30:21,429:INFO:Initializing create_model()
2024-11-22 16:30:21,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:30:21,429:INFO:Checking exceptions
2024-11-22 16:30:21,429:INFO:Importing libraries
2024-11-22 16:30:21,429:INFO:Copying training dataset
2024-11-22 16:30:21,543:INFO:Defining folds
2024-11-22 16:30:21,543:INFO:Declaring metric variables
2024-11-22 16:30:21,546:INFO:Importing untrained model
2024-11-22 16:30:21,547:INFO:Ada Boost Classifier Imported successfully
2024-11-22 16:30:21,550:INFO:Starting cross validation
2024-11-22 16:30:21,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:30:21,810:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:30:32,507:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:30:43,153:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:30:53,793:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:31:04,368:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:31:14,701:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:31:25,147:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:31:35,572:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:31:45,892:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:31:56,362:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:32:06,600:INFO:Calculating mean and std
2024-11-22 16:32:06,601:INFO:Creating metrics dataframe
2024-11-22 16:32:06,602:INFO:Uploading results into container
2024-11-22 16:32:06,602:INFO:Uploading model into container now
2024-11-22 16:32:06,603:INFO:_master_model_container: 9
2024-11-22 16:32:06,603:INFO:_display_container: 2
2024-11-22 16:32:06,603:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-22 16:32:06,603:INFO:create_model() successfully completed......................................
2024-11-22 16:32:06,669:INFO:SubProcess create_model() end ==================================
2024-11-22 16:32:06,669:INFO:Creating metrics dataframe
2024-11-22 16:32:06,673:INFO:Initializing Gradient Boosting Classifier
2024-11-22 16:32:06,673:INFO:Total runtime is 6.565294818083445 minutes
2024-11-22 16:32:06,675:INFO:SubProcess create_model() called ==================================
2024-11-22 16:32:06,675:INFO:Initializing create_model()
2024-11-22 16:32:06,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x350044bb0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x34176dfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:32:06,675:INFO:Checking exceptions
2024-11-22 16:32:06,675:INFO:Importing libraries
2024-11-22 16:32:06,676:INFO:Copying training dataset
2024-11-22 16:32:06,774:INFO:Defining folds
2024-11-22 16:32:06,774:INFO:Declaring metric variables
2024-11-22 16:32:06,776:INFO:Importing untrained model
2024-11-22 16:32:06,778:INFO:Gradient Boosting Classifier Imported successfully
2024-11-22 16:32:06,781:INFO:Starting cross validation
2024-11-22 16:32:06,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-11-22 16:39:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:39:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:39:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:39:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-22 16:39:15,271:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020
  warnings.warn(

2024-11-22 16:39:16,178:INFO:PyCaret ClassificationExperiment
2024-11-22 16:39:16,178:INFO:Logging name: clf-default-name
2024-11-22 16:39:16,178:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-22 16:39:16,178:INFO:version 3.3.2
2024-11-22 16:39:16,178:INFO:Initializing setup()
2024-11-22 16:39:16,178:INFO:self.USI: 6163
2024-11-22 16:39:16,178:INFO:self._variable_keys: {'fix_imbalance', '_available_plots', 'y', 'USI', 'data', 'X_test', 'pipeline', 'logging_param', 'is_multiclass', 'n_jobs_param', 'X_train', 'target_param', 'log_plots_param', '_ml_usecase', 'exp_name_log', 'fold_groups_param', 'gpu_n_jobs_param', 'fold_generator', 'seed', 'y_train', 'y_test', 'memory', 'idx', 'fold_shuffle_param', 'exp_id', 'gpu_param', 'html_param', 'X'}
2024-11-22 16:39:16,178:INFO:Checking environment
2024-11-22 16:39:16,178:INFO:python_version: 3.9.6
2024-11-22 16:39:16,178:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-22 16:39:16,178:INFO:machine: arm64
2024-11-22 16:39:16,178:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:39:16,178:INFO:Memory: svmem(total=17179869184, available=6246809600, percent=63.6, used=6961086464, free=946176000, active=5096423424, inactive=5202231296, wired=1864663040)
2024-11-22 16:39:16,178:INFO:Physical Core: 10
2024-11-22 16:39:16,178:INFO:Logical Core: 10
2024-11-22 16:39:16,178:INFO:Checking libraries
2024-11-22 16:39:16,178:INFO:System:
2024-11-22 16:39:16,178:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-22 16:39:16,178:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-22 16:39:16,178:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-22 16:39:16,178:INFO:PyCaret required dependencies:
2024-11-22 16:39:16,205:INFO:                 pip: 24.3.1
2024-11-22 16:39:16,205:INFO:          setuptools: 58.0.4
2024-11-22 16:39:16,205:INFO:             pycaret: 3.3.2
2024-11-22 16:39:16,205:INFO:             IPython: 8.18.1
2024-11-22 16:39:16,205:INFO:          ipywidgets: 8.1.5
2024-11-22 16:39:16,205:INFO:                tqdm: 4.67.0
2024-11-22 16:39:16,205:INFO:               numpy: 1.26.4
2024-11-22 16:39:16,205:INFO:              pandas: 2.1.4
2024-11-22 16:39:16,205:INFO:              jinja2: 3.1.4
2024-11-22 16:39:16,205:INFO:               scipy: 1.11.4
2024-11-22 16:39:16,205:INFO:              joblib: 1.3.2
2024-11-22 16:39:16,205:INFO:             sklearn: 1.4.2
2024-11-22 16:39:16,205:INFO:                pyod: 2.0.2
2024-11-22 16:39:16,205:INFO:            imblearn: 0.12.4
2024-11-22 16:39:16,205:INFO:   category_encoders: 2.6.4
2024-11-22 16:39:16,205:INFO:            lightgbm: 4.5.0
2024-11-22 16:39:16,205:INFO:               numba: 0.60.0
2024-11-22 16:39:16,205:INFO:            requests: 2.32.3
2024-11-22 16:39:16,205:INFO:          matplotlib: 3.7.5
2024-11-22 16:39:16,205:INFO:          scikitplot: 0.3.7
2024-11-22 16:39:16,205:INFO:         yellowbrick: 1.5
2024-11-22 16:39:16,205:INFO:              plotly: 5.24.1
2024-11-22 16:39:16,205:INFO:    plotly-resampler: Not installed
2024-11-22 16:39:16,205:INFO:             kaleido: 0.4.2
2024-11-22 16:39:16,205:INFO:           schemdraw: 0.15
2024-11-22 16:39:16,205:INFO:         statsmodels: 0.14.4
2024-11-22 16:39:16,205:INFO:              sktime: 0.26.0
2024-11-22 16:39:16,205:INFO:               tbats: 1.1.3
2024-11-22 16:39:16,205:INFO:            pmdarima: 2.0.4
2024-11-22 16:39:16,205:INFO:              psutil: 6.1.0
2024-11-22 16:39:16,205:INFO:          markupsafe: 3.0.2
2024-11-22 16:39:16,205:INFO:             pickle5: Not installed
2024-11-22 16:39:16,206:INFO:         cloudpickle: 3.1.0
2024-11-22 16:39:16,206:INFO:         deprecation: 2.1.0
2024-11-22 16:39:16,206:INFO:              xxhash: 3.5.0
2024-11-22 16:39:16,206:INFO:           wurlitzer: 3.1.1
2024-11-22 16:39:16,206:INFO:PyCaret optional dependencies:
2024-11-22 16:39:16,211:INFO:                shap: 0.46.0
2024-11-22 16:39:16,211:INFO:           interpret: Not installed
2024-11-22 16:39:16,211:INFO:                umap: Not installed
2024-11-22 16:39:16,211:INFO:     ydata_profiling: Not installed
2024-11-22 16:39:16,211:INFO:  explainerdashboard: Not installed
2024-11-22 16:39:16,211:INFO:             autoviz: Not installed
2024-11-22 16:39:16,211:INFO:           fairlearn: Not installed
2024-11-22 16:39:16,211:INFO:          deepchecks: Not installed
2024-11-22 16:39:16,211:INFO:             xgboost: Not installed
2024-11-22 16:39:16,211:INFO:            catboost: 1.2.7
2024-11-22 16:39:16,211:INFO:              kmodes: Not installed
2024-11-22 16:39:16,212:INFO:             mlxtend: Not installed
2024-11-22 16:39:16,212:INFO:       statsforecast: Not installed
2024-11-22 16:39:16,212:INFO:        tune_sklearn: Not installed
2024-11-22 16:39:16,212:INFO:                 ray: Not installed
2024-11-22 16:39:16,212:INFO:            hyperopt: Not installed
2024-11-22 16:39:16,212:INFO:              optuna: Not installed
2024-11-22 16:39:16,212:INFO:               skopt: Not installed
2024-11-22 16:39:16,212:INFO:              mlflow: Not installed
2024-11-22 16:39:16,212:INFO:              gradio: Not installed
2024-11-22 16:39:16,212:INFO:             fastapi: Not installed
2024-11-22 16:39:16,212:INFO:             uvicorn: Not installed
2024-11-22 16:39:16,212:INFO:              m2cgen: Not installed
2024-11-22 16:39:16,212:INFO:           evidently: Not installed
2024-11-22 16:39:16,212:INFO:               fugue: Not installed
2024-11-22 16:39:16,212:INFO:           streamlit: Not installed
2024-11-22 16:39:16,212:INFO:             prophet: Not installed
2024-11-22 16:39:16,212:INFO:None
2024-11-22 16:39:16,212:INFO:Set up data.
2024-11-22 16:39:16,247:INFO:Set up folding strategy.
2024-11-22 16:39:16,247:INFO:Set up train/test split.
2024-11-22 16:39:16,376:INFO:Set up index.
2024-11-22 16:39:16,381:INFO:Assigning column types.
2024-11-22 16:39:16,435:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-22 16:39:16,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:39:16,457:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:39:16,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:16,473:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:16,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-22 16:39:16,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:39:16,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:16,519:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:16,520:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-22 16:39:16,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:39:16,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:16,552:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:16,571:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-22 16:39:16,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:16,583:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:16,583:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-22 16:39:16,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:16,615:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:16,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:16,647:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:16,649:INFO:Preparing preprocessing pipeline...
2024-11-22 16:39:16,659:INFO:Set up simple imputation.
2024-11-22 16:39:16,659:INFO:Set up feature normalization.
2024-11-22 16:39:16,858:INFO:Finished creating preprocessing pipeline.
2024-11-22 16:39:16,862:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indic...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-22 16:39:16,862:INFO:Creating final display dataframe.
2024-11-22 16:39:17,242:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (535038, 14)
4        Transformed data shape      (535038, 14)
5   Transformed train set shape      (428030, 14)
6    Transformed test set shape      (107008, 14)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6163
2024-11-22 16:39:17,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:17,278:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:17,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-22 16:39:17,312:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-22 16:39:17,313:INFO:setup() successfully completed in 1.14s...............
2024-11-22 16:39:17,318:INFO:Initializing compare_models()
2024-11-22 16:39:17,318:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-22 16:39:17,318:INFO:Checking exceptions
2024-11-22 16:39:17,377:INFO:Preparing display monitor
2024-11-22 16:39:17,410:INFO:Initializing Logistic Regression
2024-11-22 16:39:17,410:INFO:Total runtime is 3.627936045328776e-06 minutes
2024-11-22 16:39:17,411:INFO:SubProcess create_model() called ==================================
2024-11-22 16:39:17,412:INFO:Initializing create_model()
2024-11-22 16:39:17,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:39:17,412:INFO:Checking exceptions
2024-11-22 16:39:17,412:INFO:Importing libraries
2024-11-22 16:39:17,412:INFO:Copying training dataset
2024-11-22 16:39:17,525:INFO:Defining folds
2024-11-22 16:39:17,525:INFO:Declaring metric variables
2024-11-22 16:39:17,527:INFO:Importing untrained model
2024-11-22 16:39:17,537:INFO:Logistic Regression Imported successfully
2024-11-22 16:39:17,551:INFO:Starting cross validation
2024-11-22 16:39:17,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:39:21,955:INFO:Calculating mean and std
2024-11-22 16:39:21,957:INFO:Creating metrics dataframe
2024-11-22 16:39:21,961:INFO:Uploading results into container
2024-11-22 16:39:21,961:INFO:Uploading model into container now
2024-11-22 16:39:21,962:INFO:_master_model_container: 1
2024-11-22 16:39:21,962:INFO:_display_container: 2
2024-11-22 16:39:21,963:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-22 16:39:21,963:INFO:create_model() successfully completed......................................
2024-11-22 16:39:22,040:INFO:SubProcess create_model() end ==================================
2024-11-22 16:39:22,040:INFO:Creating metrics dataframe
2024-11-22 16:39:22,044:INFO:Initializing K Neighbors Classifier
2024-11-22 16:39:22,044:INFO:Total runtime is 0.07723524967829387 minutes
2024-11-22 16:39:22,045:INFO:SubProcess create_model() called ==================================
2024-11-22 16:39:22,046:INFO:Initializing create_model()
2024-11-22 16:39:22,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:39:22,046:INFO:Checking exceptions
2024-11-22 16:39:22,046:INFO:Importing libraries
2024-11-22 16:39:22,046:INFO:Copying training dataset
2024-11-22 16:39:22,176:INFO:Defining folds
2024-11-22 16:39:22,176:INFO:Declaring metric variables
2024-11-22 16:39:22,178:INFO:Importing untrained model
2024-11-22 16:39:22,180:INFO:K Neighbors Classifier Imported successfully
2024-11-22 16:39:22,183:INFO:Starting cross validation
2024-11-22 16:39:22,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:40:43,900:INFO:Calculating mean and std
2024-11-22 16:40:43,903:INFO:Creating metrics dataframe
2024-11-22 16:40:43,904:INFO:Uploading results into container
2024-11-22 16:40:43,905:INFO:Uploading model into container now
2024-11-22 16:40:43,905:INFO:_master_model_container: 2
2024-11-22 16:40:43,905:INFO:_display_container: 2
2024-11-22 16:40:43,906:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-22 16:40:43,906:INFO:create_model() successfully completed......................................
2024-11-22 16:40:43,958:INFO:SubProcess create_model() end ==================================
2024-11-22 16:40:43,958:INFO:Creating metrics dataframe
2024-11-22 16:40:43,961:INFO:Initializing Naive Bayes
2024-11-22 16:40:43,961:INFO:Total runtime is 1.442526165644328 minutes
2024-11-22 16:40:43,963:INFO:SubProcess create_model() called ==================================
2024-11-22 16:40:43,963:INFO:Initializing create_model()
2024-11-22 16:40:43,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:40:43,963:INFO:Checking exceptions
2024-11-22 16:40:43,963:INFO:Importing libraries
2024-11-22 16:40:43,963:INFO:Copying training dataset
2024-11-22 16:40:44,074:INFO:Defining folds
2024-11-22 16:40:44,074:INFO:Declaring metric variables
2024-11-22 16:40:44,076:INFO:Importing untrained model
2024-11-22 16:40:44,078:INFO:Naive Bayes Imported successfully
2024-11-22 16:40:44,081:INFO:Starting cross validation
2024-11-22 16:40:44,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:40:45,168:INFO:Calculating mean and std
2024-11-22 16:40:45,169:INFO:Creating metrics dataframe
2024-11-22 16:40:45,170:INFO:Uploading results into container
2024-11-22 16:40:45,171:INFO:Uploading model into container now
2024-11-22 16:40:45,171:INFO:_master_model_container: 3
2024-11-22 16:40:45,171:INFO:_display_container: 2
2024-11-22 16:40:45,171:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-22 16:40:45,171:INFO:create_model() successfully completed......................................
2024-11-22 16:40:45,221:INFO:SubProcess create_model() end ==================================
2024-11-22 16:40:45,221:INFO:Creating metrics dataframe
2024-11-22 16:40:45,226:INFO:Initializing Decision Tree Classifier
2024-11-22 16:40:45,226:INFO:Total runtime is 1.4636054317156475 minutes
2024-11-22 16:40:45,228:INFO:SubProcess create_model() called ==================================
2024-11-22 16:40:45,228:INFO:Initializing create_model()
2024-11-22 16:40:45,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:40:45,228:INFO:Checking exceptions
2024-11-22 16:40:45,228:INFO:Importing libraries
2024-11-22 16:40:45,228:INFO:Copying training dataset
2024-11-22 16:40:45,336:INFO:Defining folds
2024-11-22 16:40:45,336:INFO:Declaring metric variables
2024-11-22 16:40:45,338:INFO:Importing untrained model
2024-11-22 16:40:45,340:INFO:Decision Tree Classifier Imported successfully
2024-11-22 16:40:45,343:INFO:Starting cross validation
2024-11-22 16:40:45,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:40:49,559:INFO:Calculating mean and std
2024-11-22 16:40:49,560:INFO:Creating metrics dataframe
2024-11-22 16:40:49,561:INFO:Uploading results into container
2024-11-22 16:40:49,561:INFO:Uploading model into container now
2024-11-22 16:40:49,562:INFO:_master_model_container: 4
2024-11-22 16:40:49,562:INFO:_display_container: 2
2024-11-22 16:40:49,562:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-22 16:40:49,562:INFO:create_model() successfully completed......................................
2024-11-22 16:40:49,613:INFO:SubProcess create_model() end ==================================
2024-11-22 16:40:49,613:INFO:Creating metrics dataframe
2024-11-22 16:40:49,618:INFO:Initializing SVM - Linear Kernel
2024-11-22 16:40:49,618:INFO:Total runtime is 1.5368019501368206 minutes
2024-11-22 16:40:49,619:INFO:SubProcess create_model() called ==================================
2024-11-22 16:40:49,619:INFO:Initializing create_model()
2024-11-22 16:40:49,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:40:49,619:INFO:Checking exceptions
2024-11-22 16:40:49,619:INFO:Importing libraries
2024-11-22 16:40:49,619:INFO:Copying training dataset
2024-11-22 16:40:49,728:INFO:Defining folds
2024-11-22 16:40:49,728:INFO:Declaring metric variables
2024-11-22 16:40:49,730:INFO:Importing untrained model
2024-11-22 16:40:49,732:INFO:SVM - Linear Kernel Imported successfully
2024-11-22 16:40:49,735:INFO:Starting cross validation
2024-11-22 16:40:49,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:40:51,393:INFO:Calculating mean and std
2024-11-22 16:40:51,395:INFO:Creating metrics dataframe
2024-11-22 16:40:51,397:INFO:Uploading results into container
2024-11-22 16:40:51,397:INFO:Uploading model into container now
2024-11-22 16:40:51,398:INFO:_master_model_container: 5
2024-11-22 16:40:51,398:INFO:_display_container: 2
2024-11-22 16:40:51,398:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-22 16:40:51,398:INFO:create_model() successfully completed......................................
2024-11-22 16:40:51,450:INFO:SubProcess create_model() end ==================================
2024-11-22 16:40:51,450:INFO:Creating metrics dataframe
2024-11-22 16:40:51,454:INFO:Initializing Ridge Classifier
2024-11-22 16:40:51,454:INFO:Total runtime is 1.567412316799164 minutes
2024-11-22 16:40:51,456:INFO:SubProcess create_model() called ==================================
2024-11-22 16:40:51,456:INFO:Initializing create_model()
2024-11-22 16:40:51,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:40:51,456:INFO:Checking exceptions
2024-11-22 16:40:51,456:INFO:Importing libraries
2024-11-22 16:40:51,456:INFO:Copying training dataset
2024-11-22 16:40:51,566:INFO:Defining folds
2024-11-22 16:40:51,566:INFO:Declaring metric variables
2024-11-22 16:40:51,568:INFO:Importing untrained model
2024-11-22 16:40:51,570:INFO:Ridge Classifier Imported successfully
2024-11-22 16:40:51,573:INFO:Starting cross validation
2024-11-22 16:40:51,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:40:52,659:INFO:Calculating mean and std
2024-11-22 16:40:52,660:INFO:Creating metrics dataframe
2024-11-22 16:40:52,661:INFO:Uploading results into container
2024-11-22 16:40:52,662:INFO:Uploading model into container now
2024-11-22 16:40:52,662:INFO:_master_model_container: 6
2024-11-22 16:40:52,662:INFO:_display_container: 2
2024-11-22 16:40:52,663:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-22 16:40:52,663:INFO:create_model() successfully completed......................................
2024-11-22 16:40:52,733:INFO:SubProcess create_model() end ==================================
2024-11-22 16:40:52,734:INFO:Creating metrics dataframe
2024-11-22 16:40:52,737:INFO:Initializing Random Forest Classifier
2024-11-22 16:40:52,738:INFO:Total runtime is 1.588800080617269 minutes
2024-11-22 16:40:52,739:INFO:SubProcess create_model() called ==================================
2024-11-22 16:40:52,740:INFO:Initializing create_model()
2024-11-22 16:40:52,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:40:52,740:INFO:Checking exceptions
2024-11-22 16:40:52,740:INFO:Importing libraries
2024-11-22 16:40:52,740:INFO:Copying training dataset
2024-11-22 16:40:52,859:INFO:Defining folds
2024-11-22 16:40:52,859:INFO:Declaring metric variables
2024-11-22 16:40:52,861:INFO:Importing untrained model
2024-11-22 16:40:52,863:INFO:Random Forest Classifier Imported successfully
2024-11-22 16:40:52,866:INFO:Starting cross validation
2024-11-22 16:40:52,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:42:01,567:INFO:Calculating mean and std
2024-11-22 16:42:01,573:INFO:Creating metrics dataframe
2024-11-22 16:42:01,576:INFO:Uploading results into container
2024-11-22 16:42:01,576:INFO:Uploading model into container now
2024-11-22 16:42:01,577:INFO:_master_model_container: 7
2024-11-22 16:42:01,577:INFO:_display_container: 2
2024-11-22 16:42:01,577:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-22 16:42:01,577:INFO:create_model() successfully completed......................................
2024-11-22 16:42:01,645:INFO:SubProcess create_model() end ==================================
2024-11-22 16:42:01,645:INFO:Creating metrics dataframe
2024-11-22 16:42:01,650:INFO:Initializing Quadratic Discriminant Analysis
2024-11-22 16:42:01,651:INFO:Total runtime is 2.73734876314799 minutes
2024-11-22 16:42:01,653:INFO:SubProcess create_model() called ==================================
2024-11-22 16:42:01,653:INFO:Initializing create_model()
2024-11-22 16:42:01,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:42:01,653:INFO:Checking exceptions
2024-11-22 16:42:01,653:INFO:Importing libraries
2024-11-22 16:42:01,654:INFO:Copying training dataset
2024-11-22 16:42:01,780:INFO:Defining folds
2024-11-22 16:42:01,780:INFO:Declaring metric variables
2024-11-22 16:42:01,782:INFO:Importing untrained model
2024-11-22 16:42:01,784:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-22 16:42:01,788:INFO:Starting cross validation
2024-11-22 16:42:01,788:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:42:04,983:INFO:Calculating mean and std
2024-11-22 16:42:04,985:INFO:Creating metrics dataframe
2024-11-22 16:42:04,987:INFO:Uploading results into container
2024-11-22 16:42:04,987:INFO:Uploading model into container now
2024-11-22 16:42:04,988:INFO:_master_model_container: 8
2024-11-22 16:42:04,988:INFO:_display_container: 2
2024-11-22 16:42:04,988:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-22 16:42:04,988:INFO:create_model() successfully completed......................................
2024-11-22 16:42:05,044:INFO:SubProcess create_model() end ==================================
2024-11-22 16:42:05,044:INFO:Creating metrics dataframe
2024-11-22 16:42:05,049:INFO:Initializing Ada Boost Classifier
2024-11-22 16:42:05,049:INFO:Total runtime is 2.7939964334170027 minutes
2024-11-22 16:42:05,051:INFO:SubProcess create_model() called ==================================
2024-11-22 16:42:05,051:INFO:Initializing create_model()
2024-11-22 16:42:05,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:42:05,051:INFO:Checking exceptions
2024-11-22 16:42:05,051:INFO:Importing libraries
2024-11-22 16:42:05,051:INFO:Copying training dataset
2024-11-22 16:42:05,165:INFO:Defining folds
2024-11-22 16:42:05,166:INFO:Declaring metric variables
2024-11-22 16:42:05,167:INFO:Importing untrained model
2024-11-22 16:42:05,169:INFO:Ada Boost Classifier Imported successfully
2024-11-22 16:42:05,173:INFO:Starting cross validation
2024-11-22 16:42:05,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:42:05,603:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,610:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,678:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,740:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,756:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,770:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,808:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,813:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:05,867:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:07,549:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-22 16:42:21,885:INFO:Calculating mean and std
2024-11-22 16:42:21,887:INFO:Creating metrics dataframe
2024-11-22 16:42:21,889:INFO:Uploading results into container
2024-11-22 16:42:21,889:INFO:Uploading model into container now
2024-11-22 16:42:21,889:INFO:_master_model_container: 9
2024-11-22 16:42:21,889:INFO:_display_container: 2
2024-11-22 16:42:21,890:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-22 16:42:21,890:INFO:create_model() successfully completed......................................
2024-11-22 16:42:21,947:INFO:SubProcess create_model() end ==================================
2024-11-22 16:42:21,947:INFO:Creating metrics dataframe
2024-11-22 16:42:21,952:INFO:Initializing Gradient Boosting Classifier
2024-11-22 16:42:21,952:INFO:Total runtime is 3.0757104516029363 minutes
2024-11-22 16:42:21,954:INFO:SubProcess create_model() called ==================================
2024-11-22 16:42:21,954:INFO:Initializing create_model()
2024-11-22 16:42:21,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:42:21,954:INFO:Checking exceptions
2024-11-22 16:42:21,954:INFO:Importing libraries
2024-11-22 16:42:21,954:INFO:Copying training dataset
2024-11-22 16:42:22,068:INFO:Defining folds
2024-11-22 16:42:22,068:INFO:Declaring metric variables
2024-11-22 16:42:22,070:INFO:Importing untrained model
2024-11-22 16:42:22,072:INFO:Gradient Boosting Classifier Imported successfully
2024-11-22 16:42:22,076:INFO:Starting cross validation
2024-11-22 16:42:22,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:43:32,616:INFO:Calculating mean and std
2024-11-22 16:43:32,618:INFO:Creating metrics dataframe
2024-11-22 16:43:32,620:INFO:Uploading results into container
2024-11-22 16:43:32,620:INFO:Uploading model into container now
2024-11-22 16:43:32,621:INFO:_master_model_container: 10
2024-11-22 16:43:32,621:INFO:_display_container: 2
2024-11-22 16:43:32,621:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-22 16:43:32,621:INFO:create_model() successfully completed......................................
2024-11-22 16:43:32,670:INFO:SubProcess create_model() end ==================================
2024-11-22 16:43:32,670:INFO:Creating metrics dataframe
2024-11-22 16:43:32,675:INFO:Initializing Linear Discriminant Analysis
2024-11-22 16:43:32,676:INFO:Total runtime is 4.254433647791545 minutes
2024-11-22 16:43:32,677:INFO:SubProcess create_model() called ==================================
2024-11-22 16:43:32,677:INFO:Initializing create_model()
2024-11-22 16:43:32,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:43:32,678:INFO:Checking exceptions
2024-11-22 16:43:32,678:INFO:Importing libraries
2024-11-22 16:43:32,678:INFO:Copying training dataset
2024-11-22 16:43:32,788:INFO:Defining folds
2024-11-22 16:43:32,788:INFO:Declaring metric variables
2024-11-22 16:43:32,789:INFO:Importing untrained model
2024-11-22 16:43:32,791:INFO:Linear Discriminant Analysis Imported successfully
2024-11-22 16:43:32,795:INFO:Starting cross validation
2024-11-22 16:43:32,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:43:34,039:INFO:Calculating mean and std
2024-11-22 16:43:34,040:INFO:Creating metrics dataframe
2024-11-22 16:43:34,041:INFO:Uploading results into container
2024-11-22 16:43:34,041:INFO:Uploading model into container now
2024-11-22 16:43:34,042:INFO:_master_model_container: 11
2024-11-22 16:43:34,042:INFO:_display_container: 2
2024-11-22 16:43:34,042:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-22 16:43:34,043:INFO:create_model() successfully completed......................................
2024-11-22 16:43:34,092:INFO:SubProcess create_model() end ==================================
2024-11-22 16:43:34,092:INFO:Creating metrics dataframe
2024-11-22 16:43:34,097:INFO:Initializing Extra Trees Classifier
2024-11-22 16:43:34,097:INFO:Total runtime is 4.2781243443489085 minutes
2024-11-22 16:43:34,099:INFO:SubProcess create_model() called ==================================
2024-11-22 16:43:34,099:INFO:Initializing create_model()
2024-11-22 16:43:34,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:43:34,099:INFO:Checking exceptions
2024-11-22 16:43:34,099:INFO:Importing libraries
2024-11-22 16:43:34,099:INFO:Copying training dataset
2024-11-22 16:43:34,209:INFO:Defining folds
2024-11-22 16:43:34,209:INFO:Declaring metric variables
2024-11-22 16:43:34,212:INFO:Importing untrained model
2024-11-22 16:43:34,213:INFO:Extra Trees Classifier Imported successfully
2024-11-22 16:43:34,217:INFO:Starting cross validation
2024-11-22 16:43:34,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:44:12,197:INFO:Calculating mean and std
2024-11-22 16:44:12,222:INFO:Creating metrics dataframe
2024-11-22 16:44:12,244:INFO:Uploading results into container
2024-11-22 16:44:12,246:INFO:Uploading model into container now
2024-11-22 16:44:12,248:INFO:_master_model_container: 12
2024-11-22 16:44:12,248:INFO:_display_container: 2
2024-11-22 16:44:12,249:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-22 16:44:12,249:INFO:create_model() successfully completed......................................
2024-11-22 16:44:12,499:INFO:SubProcess create_model() end ==================================
2024-11-22 16:44:12,499:INFO:Creating metrics dataframe
2024-11-22 16:44:12,504:INFO:Initializing Light Gradient Boosting Machine
2024-11-22 16:44:12,504:INFO:Total runtime is 4.918247763315838 minutes
2024-11-22 16:44:12,506:INFO:SubProcess create_model() called ==================================
2024-11-22 16:44:12,506:INFO:Initializing create_model()
2024-11-22 16:44:12,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:44:12,506:INFO:Checking exceptions
2024-11-22 16:44:12,506:INFO:Importing libraries
2024-11-22 16:44:12,506:INFO:Copying training dataset
2024-11-22 16:44:12,675:INFO:Defining folds
2024-11-22 16:44:12,676:INFO:Declaring metric variables
2024-11-22 16:44:12,677:INFO:Importing untrained model
2024-11-22 16:44:12,679:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-22 16:44:12,682:INFO:Starting cross validation
2024-11-22 16:44:12,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:44:21,592:INFO:Calculating mean and std
2024-11-22 16:44:21,592:INFO:Creating metrics dataframe
2024-11-22 16:44:21,594:INFO:Uploading results into container
2024-11-22 16:44:21,594:INFO:Uploading model into container now
2024-11-22 16:44:21,594:INFO:_master_model_container: 13
2024-11-22 16:44:21,594:INFO:_display_container: 2
2024-11-22 16:44:21,595:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-22 16:44:21,595:INFO:create_model() successfully completed......................................
2024-11-22 16:44:21,647:INFO:SubProcess create_model() end ==================================
2024-11-22 16:44:21,647:INFO:Creating metrics dataframe
2024-11-22 16:44:21,653:INFO:Initializing CatBoost Classifier
2024-11-22 16:44:21,653:INFO:Total runtime is 5.070726696650189 minutes
2024-11-22 16:44:21,655:INFO:SubProcess create_model() called ==================================
2024-11-22 16:44:21,655:INFO:Initializing create_model()
2024-11-22 16:44:21,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:44:21,655:INFO:Checking exceptions
2024-11-22 16:44:21,655:INFO:Importing libraries
2024-11-22 16:44:21,655:INFO:Copying training dataset
2024-11-22 16:44:21,765:INFO:Defining folds
2024-11-22 16:44:21,765:INFO:Declaring metric variables
2024-11-22 16:44:21,767:INFO:Importing untrained model
2024-11-22 16:44:21,770:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:44:21,773:INFO:Starting cross validation
2024-11-22 16:44:21,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:45:50,420:INFO:Calculating mean and std
2024-11-22 16:45:50,421:INFO:Creating metrics dataframe
2024-11-22 16:45:50,422:INFO:Uploading results into container
2024-11-22 16:45:50,422:INFO:Uploading model into container now
2024-11-22 16:45:50,422:INFO:_master_model_container: 14
2024-11-22 16:45:50,422:INFO:_display_container: 2
2024-11-22 16:45:50,422:INFO:<catboost.core.CatBoostClassifier object at 0x30f4f6040>
2024-11-22 16:45:50,422:INFO:create_model() successfully completed......................................
2024-11-22 16:45:50,473:INFO:SubProcess create_model() end ==================================
2024-11-22 16:45:50,473:INFO:Creating metrics dataframe
2024-11-22 16:45:50,479:INFO:Initializing Dummy Classifier
2024-11-22 16:45:50,479:INFO:Total runtime is 6.551157565911613 minutes
2024-11-22 16:45:50,480:INFO:SubProcess create_model() called ==================================
2024-11-22 16:45:50,481:INFO:Initializing create_model()
2024-11-22 16:45:50,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x104d69820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:45:50,481:INFO:Checking exceptions
2024-11-22 16:45:50,481:INFO:Importing libraries
2024-11-22 16:45:50,481:INFO:Copying training dataset
2024-11-22 16:45:50,591:INFO:Defining folds
2024-11-22 16:45:50,591:INFO:Declaring metric variables
2024-11-22 16:45:50,593:INFO:Importing untrained model
2024-11-22 16:45:50,595:INFO:Dummy Classifier Imported successfully
2024-11-22 16:45:50,598:INFO:Starting cross validation
2024-11-22 16:45:50,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:45:51,641:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:45:51,670:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:45:51,694:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:45:51,700:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:45:51,760:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-22 16:45:51,893:INFO:Calculating mean and std
2024-11-22 16:45:51,895:INFO:Creating metrics dataframe
2024-11-22 16:45:51,897:INFO:Uploading results into container
2024-11-22 16:45:51,898:INFO:Uploading model into container now
2024-11-22 16:45:51,898:INFO:_master_model_container: 15
2024-11-22 16:45:51,898:INFO:_display_container: 2
2024-11-22 16:45:51,898:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-22 16:45:51,899:INFO:create_model() successfully completed......................................
2024-11-22 16:45:51,957:INFO:SubProcess create_model() end ==================================
2024-11-22 16:45:51,958:INFO:Creating metrics dataframe
2024-11-22 16:45:51,969:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-22 16:45:51,972:INFO:Initializing create_model()
2024-11-22 16:45:51,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x30f4f6040>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:45:51,973:INFO:Checking exceptions
2024-11-22 16:45:51,974:INFO:Importing libraries
2024-11-22 16:45:51,974:INFO:Copying training dataset
2024-11-22 16:45:52,098:INFO:Defining folds
2024-11-22 16:45:52,098:INFO:Declaring metric variables
2024-11-22 16:45:52,098:INFO:Importing untrained model
2024-11-22 16:45:52,098:INFO:Declaring custom model
2024-11-22 16:45:52,098:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:45:52,099:INFO:Cross validation set to False
2024-11-22 16:45:52,099:INFO:Fitting Model
2024-11-22 16:46:11,007:INFO:<catboost.core.CatBoostClassifier object at 0x30f4e5ac0>
2024-11-22 16:46:11,007:INFO:create_model() successfully completed......................................
2024-11-22 16:46:11,068:INFO:_master_model_container: 15
2024-11-22 16:46:11,068:INFO:_display_container: 2
2024-11-22 16:46:11,068:INFO:<catboost.core.CatBoostClassifier object at 0x30f4e5ac0>
2024-11-22 16:46:11,068:INFO:compare_models() successfully completed......................................
2024-11-22 16:47:10,855:INFO:Initializing tune_model()
2024-11-22 16:47:10,855:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x30f4e5ac0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>)
2024-11-22 16:47:10,855:INFO:Checking exceptions
2024-11-22 16:47:10,909:INFO:Copying training dataset
2024-11-22 16:47:11,000:INFO:Checking base model
2024-11-22 16:47:11,000:INFO:Base model : CatBoost Classifier
2024-11-22 16:47:11,002:INFO:Declaring metric variables
2024-11-22 16:47:11,004:INFO:Defining Hyperparameters
2024-11-22 16:47:11,051:INFO:Tuning with n_jobs=-1
2024-11-22 16:47:11,052:INFO:Initializing RandomizedSearchCV
2024-11-22 16:47:13,115:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2024-11-22 16:48:52,526:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2024-11-22 16:48:52,528:INFO:Hyperparameter search completed
2024-11-22 16:48:52,529:INFO:SubProcess create_model() called ==================================
2024-11-22 16:48:52,529:INFO:Initializing create_model()
2024-11-22 16:48:52,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x30eff3a30>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30cd6bfd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2024-11-22 16:48:52,529:INFO:Checking exceptions
2024-11-22 16:48:52,529:INFO:Importing libraries
2024-11-22 16:48:52,529:INFO:Copying training dataset
2024-11-22 16:48:52,648:INFO:Defining folds
2024-11-22 16:48:52,648:INFO:Declaring metric variables
2024-11-22 16:48:52,651:INFO:Importing untrained model
2024-11-22 16:48:52,651:INFO:Declaring custom model
2024-11-22 16:48:52,653:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:48:52,656:INFO:Starting cross validation
2024-11-22 16:48:52,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:49:04,053:INFO:Calculating mean and std
2024-11-22 16:49:04,054:INFO:Creating metrics dataframe
2024-11-22 16:49:04,058:INFO:Finalizing model
2024-11-22 16:49:06,434:INFO:Uploading results into container
2024-11-22 16:49:06,435:INFO:Uploading model into container now
2024-11-22 16:49:06,435:INFO:_master_model_container: 16
2024-11-22 16:49:06,435:INFO:_display_container: 3
2024-11-22 16:49:06,435:INFO:<catboost.core.CatBoostClassifier object at 0x30f4d8c10>
2024-11-22 16:49:06,436:INFO:create_model() successfully completed......................................
2024-11-22 16:49:06,499:INFO:SubProcess create_model() end ==================================
2024-11-22 16:49:06,500:INFO:choose_better activated
2024-11-22 16:49:06,501:INFO:SubProcess create_model() called ==================================
2024-11-22 16:49:06,502:INFO:Initializing create_model()
2024-11-22 16:49:06,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x30f4e5ac0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:49:06,502:INFO:Checking exceptions
2024-11-22 16:49:06,502:INFO:Importing libraries
2024-11-22 16:49:06,502:INFO:Copying training dataset
2024-11-22 16:49:06,612:INFO:Defining folds
2024-11-22 16:49:06,612:INFO:Declaring metric variables
2024-11-22 16:49:06,612:INFO:Importing untrained model
2024-11-22 16:49:06,612:INFO:Declaring custom model
2024-11-22 16:49:06,613:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:49:06,613:INFO:Starting cross validation
2024-11-22 16:49:06,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:49:44,537:INFO:Initializing tune_model()
2024-11-22 16:49:44,537:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x30f4e5ac0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>)
2024-11-22 16:49:44,537:INFO:Checking exceptions
2024-11-22 16:49:44,588:INFO:Copying training dataset
2024-11-22 16:49:44,661:INFO:Checking base model
2024-11-22 16:49:44,662:INFO:Base model : CatBoost Classifier
2024-11-22 16:49:44,676:INFO:Declaring metric variables
2024-11-22 16:49:44,682:INFO:Defining Hyperparameters
2024-11-22 16:49:44,749:INFO:Tuning with n_jobs=-1
2024-11-22 16:49:44,750:INFO:Initializing RandomizedSearchCV
2024-11-22 16:49:59,481:INFO:Initializing create_model()
2024-11-22 16:49:59,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:49:59,482:INFO:Checking exceptions
2024-11-22 16:49:59,493:INFO:Importing libraries
2024-11-22 16:49:59,493:INFO:Copying training dataset
2024-11-22 16:49:59,606:INFO:Defining folds
2024-11-22 16:49:59,606:INFO:Declaring metric variables
2024-11-22 16:49:59,608:INFO:Importing untrained model
2024-11-22 16:49:59,610:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:49:59,613:INFO:Starting cross validation
2024-11-22 16:49:59,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:50:34,548:INFO:Initializing create_model()
2024-11-22 16:50:34,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:50:34,551:INFO:Checking exceptions
2024-11-22 16:50:34,572:INFO:Importing libraries
2024-11-22 16:50:34,573:INFO:Copying training dataset
2024-11-22 16:50:34,688:INFO:Defining folds
2024-11-22 16:50:34,688:INFO:Declaring metric variables
2024-11-22 16:50:34,690:INFO:Importing untrained model
2024-11-22 16:50:34,691:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:50:34,695:INFO:Starting cross validation
2024-11-22 16:50:34,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:52:07,023:INFO:Calculating mean and std
2024-11-22 16:52:07,026:INFO:Creating metrics dataframe
2024-11-22 16:52:07,031:INFO:Finalizing model
2024-11-22 16:52:26,565:INFO:Uploading results into container
2024-11-22 16:52:26,566:INFO:Uploading model into container now
2024-11-22 16:52:26,571:INFO:_master_model_container: 17
2024-11-22 16:52:26,571:INFO:_display_container: 4
2024-11-22 16:52:26,571:INFO:<catboost.core.CatBoostClassifier object at 0x346d7be50>
2024-11-22 16:52:26,571:INFO:create_model() successfully completed......................................
2024-11-22 16:52:26,665:INFO:Initializing tune_model()
2024-11-22 16:52:26,665:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x346d7be50>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>)
2024-11-22 16:52:26,666:INFO:Checking exceptions
2024-11-22 16:52:26,716:INFO:Copying training dataset
2024-11-22 16:52:26,811:INFO:Checking base model
2024-11-22 16:52:26,811:INFO:Base model : CatBoost Classifier
2024-11-22 16:52:26,813:INFO:Declaring metric variables
2024-11-22 16:52:26,815:INFO:Defining Hyperparameters
2024-11-22 16:52:26,882:INFO:Tuning with n_jobs=-1
2024-11-22 16:52:26,882:INFO:Initializing RandomizedSearchCV
2024-11-22 16:54:09,691:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2024-11-22 16:54:09,693:INFO:Hyperparameter search completed
2024-11-22 16:54:09,693:INFO:SubProcess create_model() called ==================================
2024-11-22 16:54:09,694:INFO:Initializing create_model()
2024-11-22 16:54:09,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x30f5beaf0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3469528e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2024-11-22 16:54:09,694:INFO:Checking exceptions
2024-11-22 16:54:09,694:INFO:Importing libraries
2024-11-22 16:54:09,694:INFO:Copying training dataset
2024-11-22 16:54:09,816:INFO:Defining folds
2024-11-22 16:54:09,817:INFO:Declaring metric variables
2024-11-22 16:54:09,820:INFO:Importing untrained model
2024-11-22 16:54:09,820:INFO:Declaring custom model
2024-11-22 16:54:09,822:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:54:09,825:INFO:Starting cross validation
2024-11-22 16:54:09,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:54:21,306:INFO:Calculating mean and std
2024-11-22 16:54:21,307:INFO:Creating metrics dataframe
2024-11-22 16:54:21,311:INFO:Finalizing model
2024-11-22 16:54:23,852:INFO:Uploading results into container
2024-11-22 16:54:23,853:INFO:Uploading model into container now
2024-11-22 16:54:23,854:INFO:_master_model_container: 18
2024-11-22 16:54:23,854:INFO:_display_container: 5
2024-11-22 16:54:23,854:INFO:<catboost.core.CatBoostClassifier object at 0x345f4d490>
2024-11-22 16:54:23,854:INFO:create_model() successfully completed......................................
2024-11-22 16:54:23,966:INFO:SubProcess create_model() end ==================================
2024-11-22 16:54:23,966:INFO:choose_better activated
2024-11-22 16:54:23,968:INFO:SubProcess create_model() called ==================================
2024-11-22 16:54:23,969:INFO:Initializing create_model()
2024-11-22 16:54:23,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x346d7be50>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:54:23,969:INFO:Checking exceptions
2024-11-22 16:54:23,971:INFO:Importing libraries
2024-11-22 16:54:23,971:INFO:Copying training dataset
2024-11-22 16:54:24,081:INFO:Defining folds
2024-11-22 16:54:24,081:INFO:Declaring metric variables
2024-11-22 16:54:24,081:INFO:Importing untrained model
2024-11-22 16:54:24,081:INFO:Declaring custom model
2024-11-22 16:54:24,081:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:54:24,081:INFO:Starting cross validation
2024-11-22 16:54:24,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:55:21,722:INFO:Initializing tune_model()
2024-11-22 16:55:21,724:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x346d7be50>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>)
2024-11-22 16:55:21,724:INFO:Checking exceptions
2024-11-22 16:55:21,776:INFO:Copying training dataset
2024-11-22 16:55:21,846:INFO:Checking base model
2024-11-22 16:55:21,846:INFO:Base model : CatBoost Classifier
2024-11-22 16:55:21,848:INFO:Declaring metric variables
2024-11-22 16:55:21,856:INFO:Defining Hyperparameters
2024-11-22 16:55:21,941:INFO:Tuning with n_jobs=-1
2024-11-22 16:55:21,941:INFO:Initializing RandomizedSearchCV
2024-11-22 16:57:07,678:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2024-11-22 16:57:07,681:INFO:Hyperparameter search completed
2024-11-22 16:57:07,681:INFO:SubProcess create_model() called ==================================
2024-11-22 16:57:07,682:INFO:Initializing create_model()
2024-11-22 16:57:07,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x30f13d190>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308ebc550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2024-11-22 16:57:07,682:INFO:Checking exceptions
2024-11-22 16:57:07,682:INFO:Importing libraries
2024-11-22 16:57:07,682:INFO:Copying training dataset
2024-11-22 16:57:07,803:INFO:Defining folds
2024-11-22 16:57:07,803:INFO:Declaring metric variables
2024-11-22 16:57:07,806:INFO:Importing untrained model
2024-11-22 16:57:07,806:INFO:Declaring custom model
2024-11-22 16:57:07,808:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:57:07,812:INFO:Starting cross validation
2024-11-22 16:57:07,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:57:19,840:INFO:Calculating mean and std
2024-11-22 16:57:19,841:INFO:Creating metrics dataframe
2024-11-22 16:57:19,845:INFO:Finalizing model
2024-11-22 16:57:22,265:INFO:Uploading results into container
2024-11-22 16:57:22,266:INFO:Uploading model into container now
2024-11-22 16:57:22,267:INFO:_master_model_container: 19
2024-11-22 16:57:22,267:INFO:_display_container: 6
2024-11-22 16:57:22,267:INFO:<catboost.core.CatBoostClassifier object at 0x346aa4f40>
2024-11-22 16:57:22,267:INFO:create_model() successfully completed......................................
2024-11-22 16:57:22,370:INFO:SubProcess create_model() end ==================================
2024-11-22 16:57:22,370:INFO:choose_better activated
2024-11-22 16:57:22,372:INFO:SubProcess create_model() called ==================================
2024-11-22 16:57:22,372:INFO:Initializing create_model()
2024-11-22 16:57:22,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x346d7be50>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:57:22,372:INFO:Checking exceptions
2024-11-22 16:57:22,373:INFO:Importing libraries
2024-11-22 16:57:22,373:INFO:Copying training dataset
2024-11-22 16:57:22,481:INFO:Defining folds
2024-11-22 16:57:22,482:INFO:Declaring metric variables
2024-11-22 16:57:22,482:INFO:Importing untrained model
2024-11-22 16:57:22,482:INFO:Declaring custom model
2024-11-22 16:57:22,482:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:57:22,482:INFO:Starting cross validation
2024-11-22 16:57:22,482:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-22 16:58:53,406:INFO:Calculating mean and std
2024-11-22 16:58:53,407:INFO:Creating metrics dataframe
2024-11-22 16:58:53,408:INFO:Finalizing model
2024-11-22 16:59:12,181:INFO:Uploading results into container
2024-11-22 16:59:12,182:INFO:Uploading model into container now
2024-11-22 16:59:12,182:INFO:_master_model_container: 20
2024-11-22 16:59:12,182:INFO:_display_container: 7
2024-11-22 16:59:12,182:INFO:<catboost.core.CatBoostClassifier object at 0x3469d5490>
2024-11-22 16:59:12,182:INFO:create_model() successfully completed......................................
2024-11-22 16:59:12,247:INFO:SubProcess create_model() end ==================================
2024-11-22 16:59:12,247:INFO:<catboost.core.CatBoostClassifier object at 0x3469d5490> result for AUC is 0.9767
2024-11-22 16:59:12,247:INFO:<catboost.core.CatBoostClassifier object at 0x346aa4f40> result for AUC is 0.9748
2024-11-22 16:59:12,248:INFO:<catboost.core.CatBoostClassifier object at 0x3469d5490> is best model
2024-11-22 16:59:12,248:INFO:choose_better completed
2024-11-22 16:59:12,248:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-11-22 16:59:12,253:INFO:_master_model_container: 20
2024-11-22 16:59:12,253:INFO:_display_container: 6
2024-11-22 16:59:12,253:INFO:<catboost.core.CatBoostClassifier object at 0x3469d5490>
2024-11-22 16:59:12,253:INFO:tune_model() successfully completed......................................
2024-11-22 16:59:12,350:INFO:Initializing plot_model()
2024-11-22 16:59:12,350:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x3469d5490>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, system=True)
2024-11-22 16:59:12,350:INFO:Checking exceptions
2024-11-22 16:59:12,390:INFO:Preloading libraries
2024-11-22 16:59:12,391:INFO:Copying training dataset
2024-11-22 16:59:12,391:INFO:Plot type: feature
2024-11-22 16:59:12,392:WARNING:No coef_ found. Trying feature_importances_
2024-11-22 16:59:12,655:INFO:Visual Rendered Successfully
2024-11-22 16:59:12,741:INFO:plot_model() successfully completed......................................
2024-11-22 16:59:12,754:INFO:Initializing plot_model()
2024-11-22 16:59:12,754:INFO:plot_model(plot=gain, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x3469d5490>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, system=True)
2024-11-22 16:59:12,760:INFO:Checking exceptions
2024-11-22 16:59:12,801:INFO:Preloading libraries
2024-11-22 16:59:12,802:INFO:Copying training dataset
2024-11-22 16:59:12,802:INFO:Plot type: gain
2024-11-22 16:59:12,802:INFO:Generating predictions / predict_proba on X_test
2024-11-22 16:59:13,136:INFO:Visual Rendered Successfully
2024-11-22 16:59:13,204:INFO:plot_model() successfully completed......................................
2024-11-22 16:59:13,224:INFO:Initializing predict_model()
2024-11-22 16:59:13,225:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x3469d5490>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x346a50430>)
2024-11-22 16:59:13,227:INFO:Checking exceptions
2024-11-22 16:59:13,227:INFO:Preloading libraries
2024-11-22 16:59:13,789:INFO:Initializing finalize_model()
2024-11-22 16:59:13,789:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x3469d5490>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-22 16:59:13,789:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x3469d5490>
2024-11-22 16:59:13,832:INFO:Initializing create_model()
2024-11-22 16:59:13,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=<catboost.core.CatBoostClassifier object at 0x3469d5490>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-22 16:59:13,832:INFO:Checking exceptions
2024-11-22 16:59:13,833:INFO:Importing libraries
2024-11-22 16:59:13,833:INFO:Copying training dataset
2024-11-22 16:59:13,837:INFO:Defining folds
2024-11-22 16:59:13,837:INFO:Declaring metric variables
2024-11-22 16:59:13,837:INFO:Importing untrained model
2024-11-22 16:59:13,837:INFO:Declaring custom model
2024-11-22 16:59:13,838:INFO:CatBoost Classifier Imported successfully
2024-11-22 16:59:13,838:INFO:Cross validation set to False
2024-11-22 16:59:13,838:INFO:Fitting Model
2024-11-22 16:59:35,453:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False)
2024-11-22 16:59:35,453:INFO:create_model() successfully completed......................................
2024-11-22 16:59:35,518:INFO:_master_model_container: 20
2024-11-22 16:59:35,518:INFO:_display_container: 7
2024-11-22 16:59:35,520:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False)
2024-11-22 16:59:35,520:INFO:finalize_model() successfully completed......................................
2024-11-23 09:55:20,993:INFO:Initializing predict_model()
2024-11-23 09:55:20,993:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30f11a310>)
2024-11-23 09:55:20,993:INFO:Checking exceptions
2024-11-23 09:55:20,994:INFO:Preloading libraries
2024-11-23 09:55:20,995:INFO:Set up data.
2024-11-23 09:55:21,003:INFO:Set up index.
2024-11-23 09:58:36,932:INFO:Initializing predict_model()
2024-11-23 09:58:36,933:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x33a8df040>)
2024-11-23 09:58:36,933:INFO:Checking exceptions
2024-11-23 09:58:36,933:INFO:Preloading libraries
2024-11-23 09:58:36,934:INFO:Set up data.
2024-11-23 09:58:36,942:INFO:Set up index.
2024-11-23 09:59:49,507:INFO:Initializing predict_model()
2024-11-23 09:59:49,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x33a8df0d0>)
2024-11-23 09:59:49,507:INFO:Checking exceptions
2024-11-23 09:59:49,507:INFO:Preloading libraries
2024-11-23 09:59:49,508:INFO:Set up data.
2024-11-23 09:59:49,539:INFO:Set up index.
2024-11-23 10:00:07,062:INFO:Initializing predict_model()
2024-11-23 10:00:07,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32abcf670>)
2024-11-23 10:00:07,063:INFO:Checking exceptions
2024-11-23 10:00:07,063:INFO:Preloading libraries
2024-11-23 10:00:07,064:INFO:Set up data.
2024-11-23 10:00:07,073:INFO:Set up index.
2024-11-23 10:01:09,508:INFO:Initializing predict_model()
2024-11-23 10:01:09,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31f2c5040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30f573730>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x345a483a0>)
2024-11-23 10:01:09,509:INFO:Checking exceptions
2024-11-23 10:01:09,509:INFO:Preloading libraries
2024-11-23 10:01:09,510:INFO:Set up data.
2024-11-23 10:01:09,534:INFO:Set up index.
2024-11-23 10:02:07,946:WARNING:/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/ipykernel_9626/611290745.py:2: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  rank_metrics = ranked_data.groupby('Rank').apply(

2024-11-23 10:17:22,620:INFO:PyCaret ClassificationExperiment
2024-11-23 10:17:22,620:INFO:Logging name: clf-default-name
2024-11-23 10:17:22,621:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-23 10:17:22,621:INFO:version 3.3.2
2024-11-23 10:17:22,621:INFO:Initializing setup()
2024-11-23 10:17:22,621:INFO:self.USI: eddc
2024-11-23 10:17:22,621:INFO:self._variable_keys: {'fix_imbalance', '_available_plots', 'y', 'USI', 'data', 'X_test', 'pipeline', 'logging_param', 'is_multiclass', 'n_jobs_param', 'X_train', 'target_param', 'log_plots_param', '_ml_usecase', 'exp_name_log', 'fold_groups_param', 'gpu_n_jobs_param', 'fold_generator', 'seed', 'y_train', 'y_test', 'memory', 'idx', 'fold_shuffle_param', 'exp_id', 'gpu_param', 'html_param', 'X'}
2024-11-23 10:17:22,621:INFO:Checking environment
2024-11-23 10:17:22,621:INFO:python_version: 3.9.6
2024-11-23 10:17:22,621:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-23 10:17:22,621:INFO:machine: arm64
2024-11-23 10:17:22,621:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-23 10:17:22,621:INFO:Memory: svmem(total=17179869184, available=6861602816, percent=60.1, used=8731246592, free=80379904, active=6880165888, inactive=6773817344, wired=1851080704)
2024-11-23 10:17:22,621:INFO:Physical Core: 10
2024-11-23 10:17:22,621:INFO:Logical Core: 10
2024-11-23 10:17:22,621:INFO:Checking libraries
2024-11-23 10:17:22,621:INFO:System:
2024-11-23 10:17:22,621:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-23 10:17:22,621:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-23 10:17:22,621:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-23 10:17:22,621:INFO:PyCaret required dependencies:
2024-11-23 10:17:22,621:INFO:                 pip: 24.3.1
2024-11-23 10:17:22,621:INFO:          setuptools: 58.0.4
2024-11-23 10:17:22,621:INFO:             pycaret: 3.3.2
2024-11-23 10:17:22,621:INFO:             IPython: 8.18.1
2024-11-23 10:17:22,621:INFO:          ipywidgets: 8.1.5
2024-11-23 10:17:22,621:INFO:                tqdm: 4.67.0
2024-11-23 10:17:22,621:INFO:               numpy: 1.26.4
2024-11-23 10:17:22,621:INFO:              pandas: 2.1.4
2024-11-23 10:17:22,621:INFO:              jinja2: 3.1.4
2024-11-23 10:17:22,621:INFO:               scipy: 1.11.4
2024-11-23 10:17:22,621:INFO:              joblib: 1.3.2
2024-11-23 10:17:22,621:INFO:             sklearn: 1.4.2
2024-11-23 10:17:22,621:INFO:                pyod: 2.0.2
2024-11-23 10:17:22,621:INFO:            imblearn: 0.12.4
2024-11-23 10:17:22,621:INFO:   category_encoders: 2.6.4
2024-11-23 10:17:22,621:INFO:            lightgbm: 4.5.0
2024-11-23 10:17:22,621:INFO:               numba: 0.60.0
2024-11-23 10:17:22,621:INFO:            requests: 2.32.3
2024-11-23 10:17:22,621:INFO:          matplotlib: 3.7.5
2024-11-23 10:17:22,621:INFO:          scikitplot: 0.3.7
2024-11-23 10:17:22,621:INFO:         yellowbrick: 1.5
2024-11-23 10:17:22,621:INFO:              plotly: 5.24.1
2024-11-23 10:17:22,621:INFO:    plotly-resampler: Not installed
2024-11-23 10:17:22,621:INFO:             kaleido: 0.4.2
2024-11-23 10:17:22,621:INFO:           schemdraw: 0.15
2024-11-23 10:17:22,621:INFO:         statsmodels: 0.14.4
2024-11-23 10:17:22,621:INFO:              sktime: 0.26.0
2024-11-23 10:17:22,621:INFO:               tbats: 1.1.3
2024-11-23 10:17:22,621:INFO:            pmdarima: 2.0.4
2024-11-23 10:17:22,621:INFO:              psutil: 6.1.0
2024-11-23 10:17:22,621:INFO:          markupsafe: 3.0.2
2024-11-23 10:17:22,621:INFO:             pickle5: Not installed
2024-11-23 10:17:22,621:INFO:         cloudpickle: 3.1.0
2024-11-23 10:17:22,621:INFO:         deprecation: 2.1.0
2024-11-23 10:17:22,621:INFO:              xxhash: 3.5.0
2024-11-23 10:17:22,621:INFO:           wurlitzer: 3.1.1
2024-11-23 10:17:22,621:INFO:PyCaret optional dependencies:
2024-11-23 10:17:22,621:INFO:                shap: 0.46.0
2024-11-23 10:17:22,621:INFO:           interpret: Not installed
2024-11-23 10:17:22,621:INFO:                umap: Not installed
2024-11-23 10:17:22,621:INFO:     ydata_profiling: Not installed
2024-11-23 10:17:22,621:INFO:  explainerdashboard: Not installed
2024-11-23 10:17:22,621:INFO:             autoviz: Not installed
2024-11-23 10:17:22,621:INFO:           fairlearn: Not installed
2024-11-23 10:17:22,621:INFO:          deepchecks: Not installed
2024-11-23 10:17:22,622:INFO:             xgboost: Not installed
2024-11-23 10:17:22,622:INFO:            catboost: 1.2.7
2024-11-23 10:17:22,622:INFO:              kmodes: Not installed
2024-11-23 10:17:22,622:INFO:             mlxtend: Not installed
2024-11-23 10:17:22,622:INFO:       statsforecast: Not installed
2024-11-23 10:17:22,622:INFO:        tune_sklearn: Not installed
2024-11-23 10:17:22,622:INFO:                 ray: Not installed
2024-11-23 10:17:22,622:INFO:            hyperopt: Not installed
2024-11-23 10:17:22,622:INFO:              optuna: Not installed
2024-11-23 10:17:22,622:INFO:               skopt: Not installed
2024-11-23 10:17:22,622:INFO:              mlflow: Not installed
2024-11-23 10:17:22,622:INFO:              gradio: Not installed
2024-11-23 10:17:22,622:INFO:             fastapi: Not installed
2024-11-23 10:17:22,622:INFO:             uvicorn: Not installed
2024-11-23 10:17:22,622:INFO:              m2cgen: Not installed
2024-11-23 10:17:22,622:INFO:           evidently: Not installed
2024-11-23 10:17:22,622:INFO:               fugue: Not installed
2024-11-23 10:17:22,622:INFO:           streamlit: Not installed
2024-11-23 10:17:22,622:INFO:             prophet: Not installed
2024-11-23 10:17:22,622:INFO:None
2024-11-23 10:17:22,622:INFO:Set up data.
2024-11-23 10:17:22,652:INFO:Set up folding strategy.
2024-11-23 10:17:22,652:INFO:Set up train/test split.
2024-11-23 10:17:22,774:INFO:Set up index.
2024-11-23 10:17:22,777:INFO:Assigning column types.
2024-11-23 10:17:22,828:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-23 10:17:22,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-23 10:17:22,847:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-23 10:17:22,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:22,859:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:22,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-23 10:17:22,879:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-23 10:17:22,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:22,892:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:22,892:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-23 10:17:22,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-23 10:17:22,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:22,924:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:22,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-23 10:17:22,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:22,956:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:22,957:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-23 10:17:22,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:22,990:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:23,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:23,022:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:23,022:INFO:Preparing preprocessing pipeline...
2024-11-23 10:17:23,034:INFO:Set up simple imputation.
2024-11-23 10:17:23,034:INFO:Set up feature normalization.
2024-11-23 10:17:23,265:INFO:Finished creating preprocessing pipeline.
2024-11-23 10:17:23,268:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel', 'vintage',
                                             'vehicle_age_damage'],
                                    transformer=SimpleImputer(add_indic...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-23 10:17:23,268:INFO:Creating final display dataframe.
2024-11-23 10:17:23,943:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (538462, 14)
4        Transformed data shape      (538462, 14)
5   Transformed train set shape      (430769, 14)
6    Transformed test set shape      (107693, 14)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              eddc
2024-11-23 10:17:23,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:23,979:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:24,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-23 10:17:24,012:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-23 10:17:24,013:INFO:setup() successfully completed in 1.4s...............
2024-11-23 10:17:24,015:INFO:Initializing compare_models()
2024-11-23 10:17:24,016:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-23 10:17:24,016:INFO:Checking exceptions
2024-11-23 10:17:24,073:INFO:Preparing display monitor
2024-11-23 10:17:24,085:INFO:Initializing Logistic Regression
2024-11-23 10:17:24,085:INFO:Total runtime is 3.866354624430338e-06 minutes
2024-11-23 10:17:24,087:INFO:SubProcess create_model() called ==================================
2024-11-23 10:17:24,088:INFO:Initializing create_model()
2024-11-23 10:17:24,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:17:24,088:INFO:Checking exceptions
2024-11-23 10:17:24,088:INFO:Importing libraries
2024-11-23 10:17:24,088:INFO:Copying training dataset
2024-11-23 10:17:24,197:INFO:Defining folds
2024-11-23 10:17:24,197:INFO:Declaring metric variables
2024-11-23 10:17:24,199:INFO:Importing untrained model
2024-11-23 10:17:24,201:INFO:Logistic Regression Imported successfully
2024-11-23 10:17:24,205:INFO:Starting cross validation
2024-11-23 10:17:24,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:17:28,467:INFO:Calculating mean and std
2024-11-23 10:17:28,470:INFO:Creating metrics dataframe
2024-11-23 10:17:28,473:INFO:Uploading results into container
2024-11-23 10:17:28,474:INFO:Uploading model into container now
2024-11-23 10:17:28,474:INFO:_master_model_container: 1
2024-11-23 10:17:28,474:INFO:_display_container: 2
2024-11-23 10:17:28,475:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-23 10:17:28,475:INFO:create_model() successfully completed......................................
2024-11-23 10:17:28,593:INFO:SubProcess create_model() end ==================================
2024-11-23 10:17:28,593:INFO:Creating metrics dataframe
2024-11-23 10:17:28,597:INFO:Initializing K Neighbors Classifier
2024-11-23 10:17:28,597:INFO:Total runtime is 0.07519669930140177 minutes
2024-11-23 10:17:28,598:INFO:SubProcess create_model() called ==================================
2024-11-23 10:17:28,599:INFO:Initializing create_model()
2024-11-23 10:17:28,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:17:28,599:INFO:Checking exceptions
2024-11-23 10:17:28,599:INFO:Importing libraries
2024-11-23 10:17:28,599:INFO:Copying training dataset
2024-11-23 10:17:28,719:INFO:Defining folds
2024-11-23 10:17:28,719:INFO:Declaring metric variables
2024-11-23 10:17:28,722:INFO:Importing untrained model
2024-11-23 10:17:28,724:INFO:K Neighbors Classifier Imported successfully
2024-11-23 10:17:28,727:INFO:Starting cross validation
2024-11-23 10:17:28,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:18:50,307:INFO:Calculating mean and std
2024-11-23 10:18:50,309:INFO:Creating metrics dataframe
2024-11-23 10:18:50,311:INFO:Uploading results into container
2024-11-23 10:18:50,311:INFO:Uploading model into container now
2024-11-23 10:18:50,312:INFO:_master_model_container: 2
2024-11-23 10:18:50,312:INFO:_display_container: 2
2024-11-23 10:18:50,312:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-23 10:18:50,312:INFO:create_model() successfully completed......................................
2024-11-23 10:18:50,396:INFO:SubProcess create_model() end ==================================
2024-11-23 10:18:50,396:INFO:Creating metrics dataframe
2024-11-23 10:18:50,400:INFO:Initializing Naive Bayes
2024-11-23 10:18:50,400:INFO:Total runtime is 1.4385879317919412 minutes
2024-11-23 10:18:50,402:INFO:SubProcess create_model() called ==================================
2024-11-23 10:18:50,402:INFO:Initializing create_model()
2024-11-23 10:18:50,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:18:50,402:INFO:Checking exceptions
2024-11-23 10:18:50,402:INFO:Importing libraries
2024-11-23 10:18:50,402:INFO:Copying training dataset
2024-11-23 10:18:50,507:INFO:Defining folds
2024-11-23 10:18:50,507:INFO:Declaring metric variables
2024-11-23 10:18:50,509:INFO:Importing untrained model
2024-11-23 10:18:50,510:INFO:Naive Bayes Imported successfully
2024-11-23 10:18:50,514:INFO:Starting cross validation
2024-11-23 10:18:50,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:18:51,538:INFO:Calculating mean and std
2024-11-23 10:18:51,539:INFO:Creating metrics dataframe
2024-11-23 10:18:51,540:INFO:Uploading results into container
2024-11-23 10:18:51,541:INFO:Uploading model into container now
2024-11-23 10:18:51,541:INFO:_master_model_container: 3
2024-11-23 10:18:51,541:INFO:_display_container: 2
2024-11-23 10:18:51,541:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-23 10:18:51,541:INFO:create_model() successfully completed......................................
2024-11-23 10:18:51,624:INFO:SubProcess create_model() end ==================================
2024-11-23 10:18:51,624:INFO:Creating metrics dataframe
2024-11-23 10:18:51,628:INFO:Initializing Decision Tree Classifier
2024-11-23 10:18:51,628:INFO:Total runtime is 1.4590520977973938 minutes
2024-11-23 10:18:51,630:INFO:SubProcess create_model() called ==================================
2024-11-23 10:18:51,630:INFO:Initializing create_model()
2024-11-23 10:18:51,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:18:51,630:INFO:Checking exceptions
2024-11-23 10:18:51,630:INFO:Importing libraries
2024-11-23 10:18:51,630:INFO:Copying training dataset
2024-11-23 10:18:51,736:INFO:Defining folds
2024-11-23 10:18:51,736:INFO:Declaring metric variables
2024-11-23 10:18:51,738:INFO:Importing untrained model
2024-11-23 10:18:51,740:INFO:Decision Tree Classifier Imported successfully
2024-11-23 10:18:51,743:INFO:Starting cross validation
2024-11-23 10:18:51,744:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:18:55,899:INFO:Calculating mean and std
2024-11-23 10:18:55,899:INFO:Creating metrics dataframe
2024-11-23 10:18:55,901:INFO:Uploading results into container
2024-11-23 10:18:55,901:INFO:Uploading model into container now
2024-11-23 10:18:55,901:INFO:_master_model_container: 4
2024-11-23 10:18:55,901:INFO:_display_container: 2
2024-11-23 10:18:55,902:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-23 10:18:55,902:INFO:create_model() successfully completed......................................
2024-11-23 10:18:55,985:INFO:SubProcess create_model() end ==================================
2024-11-23 10:18:55,986:INFO:Creating metrics dataframe
2024-11-23 10:18:55,989:INFO:Initializing SVM - Linear Kernel
2024-11-23 10:18:55,989:INFO:Total runtime is 1.5317361672719318 minutes
2024-11-23 10:18:55,990:INFO:SubProcess create_model() called ==================================
2024-11-23 10:18:55,991:INFO:Initializing create_model()
2024-11-23 10:18:55,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:18:55,991:INFO:Checking exceptions
2024-11-23 10:18:55,991:INFO:Importing libraries
2024-11-23 10:18:55,991:INFO:Copying training dataset
2024-11-23 10:18:56,097:INFO:Defining folds
2024-11-23 10:18:56,097:INFO:Declaring metric variables
2024-11-23 10:18:56,098:INFO:Importing untrained model
2024-11-23 10:18:56,100:INFO:SVM - Linear Kernel Imported successfully
2024-11-23 10:18:56,103:INFO:Starting cross validation
2024-11-23 10:18:56,104:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:18:57,762:INFO:Calculating mean and std
2024-11-23 10:18:57,763:INFO:Creating metrics dataframe
2024-11-23 10:18:57,765:INFO:Uploading results into container
2024-11-23 10:18:57,765:INFO:Uploading model into container now
2024-11-23 10:18:57,765:INFO:_master_model_container: 5
2024-11-23 10:18:57,765:INFO:_display_container: 2
2024-11-23 10:18:57,766:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-23 10:18:57,766:INFO:create_model() successfully completed......................................
2024-11-23 10:18:57,851:INFO:SubProcess create_model() end ==================================
2024-11-23 10:18:57,851:INFO:Creating metrics dataframe
2024-11-23 10:18:57,855:INFO:Initializing Ridge Classifier
2024-11-23 10:18:57,855:INFO:Total runtime is 1.5628302653630572 minutes
2024-11-23 10:18:57,856:INFO:SubProcess create_model() called ==================================
2024-11-23 10:18:57,856:INFO:Initializing create_model()
2024-11-23 10:18:57,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:18:57,856:INFO:Checking exceptions
2024-11-23 10:18:57,856:INFO:Importing libraries
2024-11-23 10:18:57,856:INFO:Copying training dataset
2024-11-23 10:18:57,965:INFO:Defining folds
2024-11-23 10:18:57,965:INFO:Declaring metric variables
2024-11-23 10:18:57,967:INFO:Importing untrained model
2024-11-23 10:18:57,969:INFO:Ridge Classifier Imported successfully
2024-11-23 10:18:57,972:INFO:Starting cross validation
2024-11-23 10:18:57,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:18:59,029:INFO:Calculating mean and std
2024-11-23 10:18:59,030:INFO:Creating metrics dataframe
2024-11-23 10:18:59,031:INFO:Uploading results into container
2024-11-23 10:18:59,032:INFO:Uploading model into container now
2024-11-23 10:18:59,032:INFO:_master_model_container: 6
2024-11-23 10:18:59,032:INFO:_display_container: 2
2024-11-23 10:18:59,032:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-23 10:18:59,032:INFO:create_model() successfully completed......................................
2024-11-23 10:18:59,116:INFO:SubProcess create_model() end ==================================
2024-11-23 10:18:59,116:INFO:Creating metrics dataframe
2024-11-23 10:18:59,120:INFO:Initializing Random Forest Classifier
2024-11-23 10:18:59,120:INFO:Total runtime is 1.583921666940053 minutes
2024-11-23 10:18:59,122:INFO:SubProcess create_model() called ==================================
2024-11-23 10:18:59,122:INFO:Initializing create_model()
2024-11-23 10:18:59,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:18:59,122:INFO:Checking exceptions
2024-11-23 10:18:59,122:INFO:Importing libraries
2024-11-23 10:18:59,122:INFO:Copying training dataset
2024-11-23 10:18:59,228:INFO:Defining folds
2024-11-23 10:18:59,228:INFO:Declaring metric variables
2024-11-23 10:18:59,230:INFO:Importing untrained model
2024-11-23 10:18:59,232:INFO:Random Forest Classifier Imported successfully
2024-11-23 10:18:59,235:INFO:Starting cross validation
2024-11-23 10:18:59,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:20:10,059:INFO:Calculating mean and std
2024-11-23 10:20:10,062:INFO:Creating metrics dataframe
2024-11-23 10:20:10,071:INFO:Uploading results into container
2024-11-23 10:20:10,071:INFO:Uploading model into container now
2024-11-23 10:20:10,072:INFO:_master_model_container: 7
2024-11-23 10:20:10,072:INFO:_display_container: 2
2024-11-23 10:20:10,072:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-23 10:20:10,072:INFO:create_model() successfully completed......................................
2024-11-23 10:20:10,181:INFO:SubProcess create_model() end ==================================
2024-11-23 10:20:10,182:INFO:Creating metrics dataframe
2024-11-23 10:20:10,187:INFO:Initializing Quadratic Discriminant Analysis
2024-11-23 10:20:10,187:INFO:Total runtime is 2.7683686017990112 minutes
2024-11-23 10:20:10,189:INFO:SubProcess create_model() called ==================================
2024-11-23 10:20:10,189:INFO:Initializing create_model()
2024-11-23 10:20:10,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:20:10,189:INFO:Checking exceptions
2024-11-23 10:20:10,189:INFO:Importing libraries
2024-11-23 10:20:10,189:INFO:Copying training dataset
2024-11-23 10:20:10,330:INFO:Defining folds
2024-11-23 10:20:10,330:INFO:Declaring metric variables
2024-11-23 10:20:10,332:INFO:Importing untrained model
2024-11-23 10:20:10,334:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-23 10:20:10,337:INFO:Starting cross validation
2024-11-23 10:20:10,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:20:13,545:INFO:Calculating mean and std
2024-11-23 10:20:13,547:INFO:Creating metrics dataframe
2024-11-23 10:20:13,549:INFO:Uploading results into container
2024-11-23 10:20:13,549:INFO:Uploading model into container now
2024-11-23 10:20:13,550:INFO:_master_model_container: 8
2024-11-23 10:20:13,550:INFO:_display_container: 2
2024-11-23 10:20:13,550:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-23 10:20:13,550:INFO:create_model() successfully completed......................................
2024-11-23 10:20:13,639:INFO:SubProcess create_model() end ==================================
2024-11-23 10:20:13,639:INFO:Creating metrics dataframe
2024-11-23 10:20:13,644:INFO:Initializing Ada Boost Classifier
2024-11-23 10:20:13,644:INFO:Total runtime is 2.8259843985239663 minutes
2024-11-23 10:20:13,645:INFO:SubProcess create_model() called ==================================
2024-11-23 10:20:13,646:INFO:Initializing create_model()
2024-11-23 10:20:13,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:20:13,646:INFO:Checking exceptions
2024-11-23 10:20:13,646:INFO:Importing libraries
2024-11-23 10:20:13,646:INFO:Copying training dataset
2024-11-23 10:20:13,754:INFO:Defining folds
2024-11-23 10:20:13,754:INFO:Declaring metric variables
2024-11-23 10:20:13,756:INFO:Importing untrained model
2024-11-23 10:20:13,758:INFO:Ada Boost Classifier Imported successfully
2024-11-23 10:20:13,761:INFO:Starting cross validation
2024-11-23 10:20:13,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:20:14,197:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,245:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,271:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,367:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,402:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,439:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,442:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,446:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:14,467:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:15,250:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-23 10:20:29,923:INFO:Calculating mean and std
2024-11-23 10:20:29,924:INFO:Creating metrics dataframe
2024-11-23 10:20:29,925:INFO:Uploading results into container
2024-11-23 10:20:29,926:INFO:Uploading model into container now
2024-11-23 10:20:29,926:INFO:_master_model_container: 9
2024-11-23 10:20:29,926:INFO:_display_container: 2
2024-11-23 10:20:29,926:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-23 10:20:29,926:INFO:create_model() successfully completed......................................
2024-11-23 10:20:30,009:INFO:SubProcess create_model() end ==================================
2024-11-23 10:20:30,009:INFO:Creating metrics dataframe
2024-11-23 10:20:30,013:INFO:Initializing Gradient Boosting Classifier
2024-11-23 10:20:30,013:INFO:Total runtime is 3.0988093813260393 minutes
2024-11-23 10:20:30,015:INFO:SubProcess create_model() called ==================================
2024-11-23 10:20:30,015:INFO:Initializing create_model()
2024-11-23 10:20:30,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:20:30,015:INFO:Checking exceptions
2024-11-23 10:20:30,015:INFO:Importing libraries
2024-11-23 10:20:30,015:INFO:Copying training dataset
2024-11-23 10:20:30,120:INFO:Defining folds
2024-11-23 10:20:30,120:INFO:Declaring metric variables
2024-11-23 10:20:30,122:INFO:Importing untrained model
2024-11-23 10:20:30,124:INFO:Gradient Boosting Classifier Imported successfully
2024-11-23 10:20:30,127:INFO:Starting cross validation
2024-11-23 10:20:30,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:21:42,013:INFO:Calculating mean and std
2024-11-23 10:21:42,015:INFO:Creating metrics dataframe
2024-11-23 10:21:42,017:INFO:Uploading results into container
2024-11-23 10:21:42,017:INFO:Uploading model into container now
2024-11-23 10:21:42,017:INFO:_master_model_container: 10
2024-11-23 10:21:42,017:INFO:_display_container: 2
2024-11-23 10:21:42,018:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-23 10:21:42,018:INFO:create_model() successfully completed......................................
2024-11-23 10:21:42,101:INFO:SubProcess create_model() end ==================================
2024-11-23 10:21:42,101:INFO:Creating metrics dataframe
2024-11-23 10:21:42,106:INFO:Initializing Linear Discriminant Analysis
2024-11-23 10:21:42,106:INFO:Total runtime is 4.3003474513689675 minutes
2024-11-23 10:21:42,107:INFO:SubProcess create_model() called ==================================
2024-11-23 10:21:42,107:INFO:Initializing create_model()
2024-11-23 10:21:42,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:21:42,107:INFO:Checking exceptions
2024-11-23 10:21:42,107:INFO:Importing libraries
2024-11-23 10:21:42,108:INFO:Copying training dataset
2024-11-23 10:21:42,217:INFO:Defining folds
2024-11-23 10:21:42,217:INFO:Declaring metric variables
2024-11-23 10:21:42,219:INFO:Importing untrained model
2024-11-23 10:21:42,221:INFO:Linear Discriminant Analysis Imported successfully
2024-11-23 10:21:42,224:INFO:Starting cross validation
2024-11-23 10:21:42,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:21:43,527:INFO:Calculating mean and std
2024-11-23 10:21:43,528:INFO:Creating metrics dataframe
2024-11-23 10:21:43,530:INFO:Uploading results into container
2024-11-23 10:21:43,530:INFO:Uploading model into container now
2024-11-23 10:21:43,531:INFO:_master_model_container: 11
2024-11-23 10:21:43,531:INFO:_display_container: 2
2024-11-23 10:21:43,531:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-23 10:21:43,532:INFO:create_model() successfully completed......................................
2024-11-23 10:21:43,617:INFO:SubProcess create_model() end ==================================
2024-11-23 10:21:43,618:INFO:Creating metrics dataframe
2024-11-23 10:21:43,622:INFO:Initializing Extra Trees Classifier
2024-11-23 10:21:43,622:INFO:Total runtime is 4.325621215502421 minutes
2024-11-23 10:21:43,624:INFO:SubProcess create_model() called ==================================
2024-11-23 10:21:43,624:INFO:Initializing create_model()
2024-11-23 10:21:43,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:21:43,624:INFO:Checking exceptions
2024-11-23 10:21:43,624:INFO:Importing libraries
2024-11-23 10:21:43,624:INFO:Copying training dataset
2024-11-23 10:21:43,735:INFO:Defining folds
2024-11-23 10:21:43,735:INFO:Declaring metric variables
2024-11-23 10:21:43,737:INFO:Importing untrained model
2024-11-23 10:21:43,739:INFO:Extra Trees Classifier Imported successfully
2024-11-23 10:21:43,742:INFO:Starting cross validation
2024-11-23 10:21:43,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:22:22,174:INFO:Calculating mean and std
2024-11-23 10:22:22,185:INFO:Creating metrics dataframe
2024-11-23 10:22:22,201:INFO:Uploading results into container
2024-11-23 10:22:22,203:INFO:Uploading model into container now
2024-11-23 10:22:22,205:INFO:_master_model_container: 12
2024-11-23 10:22:22,205:INFO:_display_container: 2
2024-11-23 10:22:22,207:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-23 10:22:22,207:INFO:create_model() successfully completed......................................
2024-11-23 10:22:22,588:INFO:SubProcess create_model() end ==================================
2024-11-23 10:22:22,588:INFO:Creating metrics dataframe
2024-11-23 10:22:22,594:INFO:Initializing Light Gradient Boosting Machine
2024-11-23 10:22:22,594:INFO:Total runtime is 4.97515256802241 minutes
2024-11-23 10:22:22,595:INFO:SubProcess create_model() called ==================================
2024-11-23 10:22:22,596:INFO:Initializing create_model()
2024-11-23 10:22:22,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:22:22,596:INFO:Checking exceptions
2024-11-23 10:22:22,596:INFO:Importing libraries
2024-11-23 10:22:22,596:INFO:Copying training dataset
2024-11-23 10:22:22,789:INFO:Defining folds
2024-11-23 10:22:22,789:INFO:Declaring metric variables
2024-11-23 10:22:22,791:INFO:Importing untrained model
2024-11-23 10:22:22,793:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-23 10:22:22,796:INFO:Starting cross validation
2024-11-23 10:22:22,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:22:31,386:INFO:Calculating mean and std
2024-11-23 10:22:31,387:INFO:Creating metrics dataframe
2024-11-23 10:22:31,388:INFO:Uploading results into container
2024-11-23 10:22:31,388:INFO:Uploading model into container now
2024-11-23 10:22:31,389:INFO:_master_model_container: 13
2024-11-23 10:22:31,389:INFO:_display_container: 2
2024-11-23 10:22:31,389:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-23 10:22:31,389:INFO:create_model() successfully completed......................................
2024-11-23 10:22:31,479:INFO:SubProcess create_model() end ==================================
2024-11-23 10:22:31,479:INFO:Creating metrics dataframe
2024-11-23 10:22:31,484:INFO:Initializing CatBoost Classifier
2024-11-23 10:22:31,485:INFO:Total runtime is 5.123328383763631 minutes
2024-11-23 10:22:31,487:INFO:SubProcess create_model() called ==================================
2024-11-23 10:22:31,487:INFO:Initializing create_model()
2024-11-23 10:22:31,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:22:31,487:INFO:Checking exceptions
2024-11-23 10:22:31,487:INFO:Importing libraries
2024-11-23 10:22:31,487:INFO:Copying training dataset
2024-11-23 10:22:31,590:INFO:Defining folds
2024-11-23 10:22:31,591:INFO:Declaring metric variables
2024-11-23 10:22:31,592:INFO:Importing untrained model
2024-11-23 10:22:31,595:INFO:CatBoost Classifier Imported successfully
2024-11-23 10:22:31,598:INFO:Starting cross validation
2024-11-23 10:22:31,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:24:00,885:INFO:Calculating mean and std
2024-11-23 10:24:00,887:INFO:Creating metrics dataframe
2024-11-23 10:24:00,889:INFO:Uploading results into container
2024-11-23 10:24:00,890:INFO:Uploading model into container now
2024-11-23 10:24:00,890:INFO:_master_model_container: 14
2024-11-23 10:24:00,890:INFO:_display_container: 2
2024-11-23 10:24:00,890:INFO:<catboost.core.CatBoostClassifier object at 0x32d096f40>
2024-11-23 10:24:00,891:INFO:create_model() successfully completed......................................
2024-11-23 10:24:00,984:INFO:SubProcess create_model() end ==================================
2024-11-23 10:24:00,984:INFO:Creating metrics dataframe
2024-11-23 10:24:00,991:INFO:Initializing Dummy Classifier
2024-11-23 10:24:00,991:INFO:Total runtime is 6.615098667144776 minutes
2024-11-23 10:24:00,992:INFO:SubProcess create_model() called ==================================
2024-11-23 10:24:00,993:INFO:Initializing create_model()
2024-11-23 10:24:00,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x345ebd460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:24:00,993:INFO:Checking exceptions
2024-11-23 10:24:00,993:INFO:Importing libraries
2024-11-23 10:24:00,993:INFO:Copying training dataset
2024-11-23 10:24:01,105:INFO:Defining folds
2024-11-23 10:24:01,105:INFO:Declaring metric variables
2024-11-23 10:24:01,107:INFO:Importing untrained model
2024-11-23 10:24:01,109:INFO:Dummy Classifier Imported successfully
2024-11-23 10:24:01,112:INFO:Starting cross validation
2024-11-23 10:24:01,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:24:02,312:INFO:Calculating mean and std
2024-11-23 10:24:02,315:INFO:Creating metrics dataframe
2024-11-23 10:24:02,317:INFO:Uploading results into container
2024-11-23 10:24:02,318:INFO:Uploading model into container now
2024-11-23 10:24:02,318:INFO:_master_model_container: 15
2024-11-23 10:24:02,318:INFO:_display_container: 2
2024-11-23 10:24:02,319:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-23 10:24:02,319:INFO:create_model() successfully completed......................................
2024-11-23 10:24:02,414:INFO:SubProcess create_model() end ==================================
2024-11-23 10:24:02,414:INFO:Creating metrics dataframe
2024-11-23 10:24:02,422:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-23 10:24:02,426:INFO:Initializing create_model()
2024-11-23 10:24:02,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=<catboost.core.CatBoostClassifier object at 0x32d096f40>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:24:02,427:INFO:Checking exceptions
2024-11-23 10:24:02,427:INFO:Importing libraries
2024-11-23 10:24:02,427:INFO:Copying training dataset
2024-11-23 10:24:02,542:INFO:Defining folds
2024-11-23 10:24:02,542:INFO:Declaring metric variables
2024-11-23 10:24:02,542:INFO:Importing untrained model
2024-11-23 10:24:02,542:INFO:Declaring custom model
2024-11-23 10:24:02,542:INFO:CatBoost Classifier Imported successfully
2024-11-23 10:24:02,543:INFO:Cross validation set to False
2024-11-23 10:24:02,543:INFO:Fitting Model
2024-11-23 10:24:21,604:INFO:<catboost.core.CatBoostClassifier object at 0x32d0b2a30>
2024-11-23 10:24:21,604:INFO:create_model() successfully completed......................................
2024-11-23 10:24:21,697:INFO:_master_model_container: 15
2024-11-23 10:24:21,698:INFO:_display_container: 2
2024-11-23 10:24:21,698:INFO:<catboost.core.CatBoostClassifier object at 0x32d0b2a30>
2024-11-23 10:24:21,698:INFO:compare_models() successfully completed......................................
2024-11-23 10:24:21,700:INFO:Initializing tune_model()
2024-11-23 10:24:21,700:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x32d0b2a30>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>)
2024-11-23 10:24:21,700:INFO:Checking exceptions
2024-11-23 10:24:21,749:INFO:Copying training dataset
2024-11-23 10:24:21,822:INFO:Checking base model
2024-11-23 10:24:21,822:INFO:Base model : CatBoost Classifier
2024-11-23 10:24:21,824:INFO:Declaring metric variables
2024-11-23 10:24:21,826:INFO:Defining Hyperparameters
2024-11-23 10:24:21,908:INFO:Tuning with n_jobs=-1
2024-11-23 10:24:21,908:INFO:Initializing RandomizedSearchCV
2024-11-23 10:24:24,045:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2024-11-23 10:26:01,829:INFO:best_params: {'actual_estimator__random_strength': 0.4, 'actual_estimator__n_estimators': 170, 'actual_estimator__l2_leaf_reg': 200, 'actual_estimator__eta': 0.0005, 'actual_estimator__depth': 4}
2024-11-23 10:26:01,831:INFO:Hyperparameter search completed
2024-11-23 10:26:01,831:INFO:SubProcess create_model() called ==================================
2024-11-23 10:26:01,831:INFO:Initializing create_model()
2024-11-23 10:26:01,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=<catboost.core.CatBoostClassifier object at 0x32d0e2f40>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x346d6a4f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.4, 'n_estimators': 170, 'l2_leaf_reg': 200, 'eta': 0.0005, 'depth': 4})
2024-11-23 10:26:01,831:INFO:Checking exceptions
2024-11-23 10:26:01,831:INFO:Importing libraries
2024-11-23 10:26:01,831:INFO:Copying training dataset
2024-11-23 10:26:01,945:INFO:Defining folds
2024-11-23 10:26:01,945:INFO:Declaring metric variables
2024-11-23 10:26:01,947:INFO:Importing untrained model
2024-11-23 10:26:01,947:INFO:Declaring custom model
2024-11-23 10:26:01,949:INFO:CatBoost Classifier Imported successfully
2024-11-23 10:26:01,953:INFO:Starting cross validation
2024-11-23 10:26:01,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:26:10,192:INFO:Calculating mean and std
2024-11-23 10:26:10,194:INFO:Creating metrics dataframe
2024-11-23 10:26:10,199:INFO:Finalizing model
2024-11-23 10:26:11,899:INFO:Uploading results into container
2024-11-23 10:26:11,900:INFO:Uploading model into container now
2024-11-23 10:26:11,900:INFO:_master_model_container: 16
2024-11-23 10:26:11,900:INFO:_display_container: 3
2024-11-23 10:26:11,900:INFO:<catboost.core.CatBoostClassifier object at 0x32d0b24c0>
2024-11-23 10:26:11,900:INFO:create_model() successfully completed......................................
2024-11-23 10:26:11,992:INFO:SubProcess create_model() end ==================================
2024-11-23 10:26:11,992:INFO:choose_better activated
2024-11-23 10:26:11,994:INFO:SubProcess create_model() called ==================================
2024-11-23 10:26:11,994:INFO:Initializing create_model()
2024-11-23 10:26:11,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=<catboost.core.CatBoostClassifier object at 0x32d0b2a30>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-23 10:26:11,994:INFO:Checking exceptions
2024-11-23 10:26:11,995:INFO:Importing libraries
2024-11-23 10:26:11,995:INFO:Copying training dataset
2024-11-23 10:26:12,103:INFO:Defining folds
2024-11-23 10:26:12,103:INFO:Declaring metric variables
2024-11-23 10:26:12,103:INFO:Importing untrained model
2024-11-23 10:26:12,103:INFO:Declaring custom model
2024-11-23 10:26:12,103:INFO:CatBoost Classifier Imported successfully
2024-11-23 10:26:12,103:INFO:Starting cross validation
2024-11-23 10:26:12,104:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-23 10:27:42,742:INFO:Calculating mean and std
2024-11-23 10:27:42,744:INFO:Creating metrics dataframe
2024-11-23 10:27:42,746:INFO:Finalizing model
2024-11-23 10:28:01,827:INFO:Uploading results into container
2024-11-23 10:28:01,828:INFO:Uploading model into container now
2024-11-23 10:28:01,828:INFO:_master_model_container: 17
2024-11-23 10:28:01,828:INFO:_display_container: 4
2024-11-23 10:28:01,828:INFO:<catboost.core.CatBoostClassifier object at 0x30f20cc70>
2024-11-23 10:28:01,828:INFO:create_model() successfully completed......................................
2024-11-23 10:28:01,910:INFO:SubProcess create_model() end ==================================
2024-11-23 10:28:01,911:INFO:<catboost.core.CatBoostClassifier object at 0x30f20cc70> result for Recall is 0.8702
2024-11-23 10:28:01,911:INFO:<catboost.core.CatBoostClassifier object at 0x32d0b24c0> result for Recall is 0.9487
2024-11-23 10:28:01,911:INFO:<catboost.core.CatBoostClassifier object at 0x32d0b24c0> is best model
2024-11-23 10:28:01,911:INFO:choose_better completed
2024-11-23 10:28:01,916:INFO:_master_model_container: 17
2024-11-23 10:28:01,916:INFO:_display_container: 3
2024-11-23 10:28:01,916:INFO:<catboost.core.CatBoostClassifier object at 0x32d0b24c0>
2024-11-23 10:28:01,916:INFO:tune_model() successfully completed......................................
2024-11-23 10:28:02,031:INFO:Initializing predict_model()
2024-11-23 10:28:02,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=<catboost.core.CatBoostClassifier object at 0x32d0b24c0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32d0dac10>)
2024-11-23 10:28:02,031:INFO:Checking exceptions
2024-11-23 10:28:02,031:INFO:Preloading libraries
2024-11-23 10:28:02,032:INFO:Set up data.
2024-11-23 10:28:02,039:INFO:Set up index.
2024-11-23 17:28:10,527:INFO:Initializing predict_model()
2024-11-23 17:28:10,528:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x32d0f1100>, estimator=<catboost.core.CatBoostClassifier object at 0x32d0b24c0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x342416040>)
2024-11-23 17:28:10,528:INFO:Checking exceptions
2024-11-23 17:28:10,528:INFO:Preloading libraries
2024-11-23 17:28:10,529:INFO:Set up data.
2024-11-23 17:28:10,537:INFO:Set up index.
2024-11-23 17:28:10,860:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-23 17:28:10,883:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-23 17:28:10,895:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:38:42,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 13:38:42,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 13:38:42,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 13:38:42,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 13:43:23,240:INFO:PyCaret ClassificationExperiment
2024-11-27 13:43:23,240:INFO:Logging name: clf-default-name
2024-11-27 13:43:23,240:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-27 13:43:23,240:INFO:version 3.3.2
2024-11-27 13:43:23,240:INFO:Initializing setup()
2024-11-27 13:43:23,240:INFO:self.USI: c2eb
2024-11-27 13:43:23,240:INFO:self._variable_keys: {'X_test', 'fix_imbalance', 'seed', 'USI', 'n_jobs_param', '_ml_usecase', 'log_plots_param', 'X', 'gpu_n_jobs_param', '_available_plots', 'fold_generator', 'exp_name_log', 'data', 'idx', 'exp_id', 'memory', 'y', 'y_train', 'is_multiclass', 'fold_shuffle_param', 'gpu_param', 'pipeline', 'logging_param', 'fold_groups_param', 'target_param', 'html_param', 'X_train', 'y_test'}
2024-11-27 13:43:23,240:INFO:Checking environment
2024-11-27 13:43:23,240:INFO:python_version: 3.9.6
2024-11-27 13:43:23,240:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-27 13:43:23,240:INFO:machine: arm64
2024-11-27 13:43:23,240:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-27 13:43:23,240:INFO:Memory: svmem(total=17179869184, available=5855985664, percent=65.9, used=7550894080, free=216219648, active=5660884992, inactive=5636538368, wired=1890009088)
2024-11-27 13:43:23,240:INFO:Physical Core: 10
2024-11-27 13:43:23,240:INFO:Logical Core: 10
2024-11-27 13:43:23,241:INFO:Checking libraries
2024-11-27 13:43:23,241:INFO:System:
2024-11-27 13:43:23,241:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-27 13:43:23,241:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-27 13:43:23,241:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-27 13:43:23,241:INFO:PyCaret required dependencies:
2024-11-27 13:43:23,276:INFO:                 pip: 24.3.1
2024-11-27 13:43:23,276:INFO:          setuptools: 58.0.4
2024-11-27 13:43:23,276:INFO:             pycaret: 3.3.2
2024-11-27 13:43:23,276:INFO:             IPython: 8.18.1
2024-11-27 13:43:23,276:INFO:          ipywidgets: 8.1.5
2024-11-27 13:43:23,276:INFO:                tqdm: 4.67.0
2024-11-27 13:43:23,276:INFO:               numpy: 1.26.4
2024-11-27 13:43:23,276:INFO:              pandas: 2.1.4
2024-11-27 13:43:23,276:INFO:              jinja2: 3.1.4
2024-11-27 13:43:23,276:INFO:               scipy: 1.11.4
2024-11-27 13:43:23,276:INFO:              joblib: 1.3.2
2024-11-27 13:43:23,276:INFO:             sklearn: 1.4.2
2024-11-27 13:43:23,276:INFO:                pyod: 2.0.2
2024-11-27 13:43:23,276:INFO:            imblearn: 0.12.4
2024-11-27 13:43:23,276:INFO:   category_encoders: 2.6.4
2024-11-27 13:43:23,276:INFO:            lightgbm: 4.5.0
2024-11-27 13:43:23,276:INFO:               numba: 0.60.0
2024-11-27 13:43:23,276:INFO:            requests: 2.32.3
2024-11-27 13:43:23,276:INFO:          matplotlib: 3.7.5
2024-11-27 13:43:23,276:INFO:          scikitplot: 0.3.7
2024-11-27 13:43:23,276:INFO:         yellowbrick: 1.5
2024-11-27 13:43:23,276:INFO:              plotly: 5.24.1
2024-11-27 13:43:23,276:INFO:    plotly-resampler: Not installed
2024-11-27 13:43:23,276:INFO:             kaleido: 0.4.2
2024-11-27 13:43:23,276:INFO:           schemdraw: 0.15
2024-11-27 13:43:23,277:INFO:         statsmodels: 0.14.4
2024-11-27 13:43:23,277:INFO:              sktime: 0.26.0
2024-11-27 13:43:23,277:INFO:               tbats: 1.1.3
2024-11-27 13:43:23,277:INFO:            pmdarima: 2.0.4
2024-11-27 13:43:23,277:INFO:              psutil: 6.1.0
2024-11-27 13:43:23,277:INFO:          markupsafe: 3.0.2
2024-11-27 13:43:23,277:INFO:             pickle5: Not installed
2024-11-27 13:43:23,277:INFO:         cloudpickle: 3.1.0
2024-11-27 13:43:23,277:INFO:         deprecation: 2.1.0
2024-11-27 13:43:23,277:INFO:              xxhash: 3.5.0
2024-11-27 13:43:23,277:INFO:           wurlitzer: 3.1.1
2024-11-27 13:43:23,277:INFO:PyCaret optional dependencies:
2024-11-27 13:43:23,282:INFO:                shap: 0.46.0
2024-11-27 13:43:23,282:INFO:           interpret: Not installed
2024-11-27 13:43:23,282:INFO:                umap: Not installed
2024-11-27 13:43:23,282:INFO:     ydata_profiling: Not installed
2024-11-27 13:43:23,282:INFO:  explainerdashboard: Not installed
2024-11-27 13:43:23,282:INFO:             autoviz: Not installed
2024-11-27 13:43:23,282:INFO:           fairlearn: Not installed
2024-11-27 13:43:23,282:INFO:          deepchecks: Not installed
2024-11-27 13:43:23,282:INFO:             xgboost: Not installed
2024-11-27 13:43:23,282:INFO:            catboost: 1.2.7
2024-11-27 13:43:23,282:INFO:              kmodes: Not installed
2024-11-27 13:43:23,282:INFO:             mlxtend: Not installed
2024-11-27 13:43:23,282:INFO:       statsforecast: Not installed
2024-11-27 13:43:23,282:INFO:        tune_sklearn: Not installed
2024-11-27 13:43:23,282:INFO:                 ray: Not installed
2024-11-27 13:43:23,282:INFO:            hyperopt: Not installed
2024-11-27 13:43:23,282:INFO:              optuna: Not installed
2024-11-27 13:43:23,282:INFO:               skopt: Not installed
2024-11-27 13:43:23,282:INFO:              mlflow: Not installed
2024-11-27 13:43:23,282:INFO:              gradio: Not installed
2024-11-27 13:43:23,282:INFO:             fastapi: Not installed
2024-11-27 13:43:23,283:INFO:             uvicorn: Not installed
2024-11-27 13:43:23,283:INFO:              m2cgen: Not installed
2024-11-27 13:43:23,283:INFO:           evidently: Not installed
2024-11-27 13:43:23,283:INFO:               fugue: Not installed
2024-11-27 13:43:23,283:INFO:           streamlit: Not installed
2024-11-27 13:43:23,283:INFO:             prophet: Not installed
2024-11-27 13:43:23,283:INFO:None
2024-11-27 13:43:23,283:INFO:Set up data.
2024-11-27 13:43:23,340:INFO:Set up folding strategy.
2024-11-27 13:43:23,340:INFO:Set up train/test split.
2024-11-27 13:43:23,442:INFO:Set up index.
2024-11-27 13:43:23,445:INFO:Assigning column types.
2024-11-27 13:43:23,469:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-27 13:43:23,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 13:43:23,490:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:23,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:23,506:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:23,619:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 13:43:23,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:23,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:23,631:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:23,631:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-27 13:43:23,650:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:23,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:23,663:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:23,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:23,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:23,694:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:23,695:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-27 13:43:23,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:23,726:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:23,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:23,758:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:23,758:INFO:Preparing preprocessing pipeline...
2024-11-27 13:43:23,764:INFO:Set up simple imputation.
2024-11-27 13:43:23,782:INFO:Set up encoding of ordinal features.
2024-11-27 13:43:23,790:INFO:Set up encoding of categorical features.
2024-11-27 13:43:24,122:INFO:Finished creating preprocessing pipeline.
2024-11-27 13:43:24,130:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                               mapping=[{'col': 'gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-27 13:43:24,130:INFO:Creating final display dataframe.
2024-11-27 13:43:24,697:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (304887, 12)
4        Transformed data shape      (304887, 14)
5   Transformed train set shape      (213420, 14)
6    Transformed test set shape       (91467, 14)
7              Numeric features                 9
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              c2eb
2024-11-27 13:43:24,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:24,734:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:24,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:24,767:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:24,767:INFO:setup() successfully completed in 1.53s...............
2024-11-27 13:43:51,443:INFO:PyCaret ClassificationExperiment
2024-11-27 13:43:51,443:INFO:Logging name: clf-default-name
2024-11-27 13:43:51,443:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-27 13:43:51,443:INFO:version 3.3.2
2024-11-27 13:43:51,443:INFO:Initializing setup()
2024-11-27 13:43:51,443:INFO:self.USI: d1c4
2024-11-27 13:43:51,443:INFO:self._variable_keys: {'X_test', 'fix_imbalance', 'seed', 'USI', 'n_jobs_param', '_ml_usecase', 'log_plots_param', 'X', 'gpu_n_jobs_param', '_available_plots', 'fold_generator', 'exp_name_log', 'data', 'idx', 'exp_id', 'memory', 'y', 'y_train', 'is_multiclass', 'fold_shuffle_param', 'gpu_param', 'pipeline', 'logging_param', 'fold_groups_param', 'target_param', 'html_param', 'X_train', 'y_test'}
2024-11-27 13:43:51,443:INFO:Checking environment
2024-11-27 13:43:51,443:INFO:python_version: 3.9.6
2024-11-27 13:43:51,443:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-27 13:43:51,444:INFO:machine: arm64
2024-11-27 13:43:51,444:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-27 13:43:51,444:INFO:Memory: svmem(total=17179869184, available=5759516672, percent=66.5, used=7588904960, free=65650688, active=5715279872, inactive=5686738944, wired=1873625088)
2024-11-27 13:43:51,444:INFO:Physical Core: 10
2024-11-27 13:43:51,444:INFO:Logical Core: 10
2024-11-27 13:43:51,444:INFO:Checking libraries
2024-11-27 13:43:51,444:INFO:System:
2024-11-27 13:43:51,444:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-27 13:43:51,444:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-27 13:43:51,444:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-27 13:43:51,444:INFO:PyCaret required dependencies:
2024-11-27 13:43:51,444:INFO:                 pip: 24.3.1
2024-11-27 13:43:51,444:INFO:          setuptools: 58.0.4
2024-11-27 13:43:51,444:INFO:             pycaret: 3.3.2
2024-11-27 13:43:51,444:INFO:             IPython: 8.18.1
2024-11-27 13:43:51,444:INFO:          ipywidgets: 8.1.5
2024-11-27 13:43:51,444:INFO:                tqdm: 4.67.0
2024-11-27 13:43:51,444:INFO:               numpy: 1.26.4
2024-11-27 13:43:51,444:INFO:              pandas: 2.1.4
2024-11-27 13:43:51,444:INFO:              jinja2: 3.1.4
2024-11-27 13:43:51,444:INFO:               scipy: 1.11.4
2024-11-27 13:43:51,444:INFO:              joblib: 1.3.2
2024-11-27 13:43:51,444:INFO:             sklearn: 1.4.2
2024-11-27 13:43:51,444:INFO:                pyod: 2.0.2
2024-11-27 13:43:51,444:INFO:            imblearn: 0.12.4
2024-11-27 13:43:51,444:INFO:   category_encoders: 2.6.4
2024-11-27 13:43:51,444:INFO:            lightgbm: 4.5.0
2024-11-27 13:43:51,444:INFO:               numba: 0.60.0
2024-11-27 13:43:51,444:INFO:            requests: 2.32.3
2024-11-27 13:43:51,445:INFO:          matplotlib: 3.7.5
2024-11-27 13:43:51,445:INFO:          scikitplot: 0.3.7
2024-11-27 13:43:51,445:INFO:         yellowbrick: 1.5
2024-11-27 13:43:51,445:INFO:              plotly: 5.24.1
2024-11-27 13:43:51,445:INFO:    plotly-resampler: Not installed
2024-11-27 13:43:51,445:INFO:             kaleido: 0.4.2
2024-11-27 13:43:51,445:INFO:           schemdraw: 0.15
2024-11-27 13:43:51,445:INFO:         statsmodels: 0.14.4
2024-11-27 13:43:51,445:INFO:              sktime: 0.26.0
2024-11-27 13:43:51,445:INFO:               tbats: 1.1.3
2024-11-27 13:43:51,445:INFO:            pmdarima: 2.0.4
2024-11-27 13:43:51,445:INFO:              psutil: 6.1.0
2024-11-27 13:43:51,445:INFO:          markupsafe: 3.0.2
2024-11-27 13:43:51,445:INFO:             pickle5: Not installed
2024-11-27 13:43:51,445:INFO:         cloudpickle: 3.1.0
2024-11-27 13:43:51,445:INFO:         deprecation: 2.1.0
2024-11-27 13:43:51,445:INFO:              xxhash: 3.5.0
2024-11-27 13:43:51,445:INFO:           wurlitzer: 3.1.1
2024-11-27 13:43:51,445:INFO:PyCaret optional dependencies:
2024-11-27 13:43:51,445:INFO:                shap: 0.46.0
2024-11-27 13:43:51,445:INFO:           interpret: Not installed
2024-11-27 13:43:51,445:INFO:                umap: Not installed
2024-11-27 13:43:51,445:INFO:     ydata_profiling: Not installed
2024-11-27 13:43:51,445:INFO:  explainerdashboard: Not installed
2024-11-27 13:43:51,445:INFO:             autoviz: Not installed
2024-11-27 13:43:51,445:INFO:           fairlearn: Not installed
2024-11-27 13:43:51,445:INFO:          deepchecks: Not installed
2024-11-27 13:43:51,445:INFO:             xgboost: Not installed
2024-11-27 13:43:51,445:INFO:            catboost: 1.2.7
2024-11-27 13:43:51,445:INFO:              kmodes: Not installed
2024-11-27 13:43:51,445:INFO:             mlxtend: Not installed
2024-11-27 13:43:51,445:INFO:       statsforecast: Not installed
2024-11-27 13:43:51,445:INFO:        tune_sklearn: Not installed
2024-11-27 13:43:51,446:INFO:                 ray: Not installed
2024-11-27 13:43:51,446:INFO:            hyperopt: Not installed
2024-11-27 13:43:51,446:INFO:              optuna: Not installed
2024-11-27 13:43:51,446:INFO:               skopt: Not installed
2024-11-27 13:43:51,446:INFO:              mlflow: Not installed
2024-11-27 13:43:51,446:INFO:              gradio: Not installed
2024-11-27 13:43:51,446:INFO:             fastapi: Not installed
2024-11-27 13:43:51,446:INFO:             uvicorn: Not installed
2024-11-27 13:43:51,446:INFO:              m2cgen: Not installed
2024-11-27 13:43:51,446:INFO:           evidently: Not installed
2024-11-27 13:43:51,446:INFO:               fugue: Not installed
2024-11-27 13:43:51,446:INFO:           streamlit: Not installed
2024-11-27 13:43:51,446:INFO:             prophet: Not installed
2024-11-27 13:43:51,446:INFO:None
2024-11-27 13:43:51,446:INFO:Set up data.
2024-11-27 13:43:51,514:INFO:Set up folding strategy.
2024-11-27 13:43:51,514:INFO:Set up train/test split.
2024-11-27 13:43:51,583:INFO:Set up index.
2024-11-27 13:43:51,585:INFO:Assigning column types.
2024-11-27 13:43:51,610:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-27 13:43:51,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 13:43:51,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:51,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:51,642:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:51,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 13:43:51,662:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:51,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:51,676:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:51,676:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-27 13:43:51,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:51,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:51,708:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:51,728:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:43:51,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:51,740:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:51,740:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-27 13:43:51,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:51,772:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:51,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:51,803:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:51,804:INFO:Preparing preprocessing pipeline...
2024-11-27 13:43:51,809:INFO:Set up simple imputation.
2024-11-27 13:43:51,827:INFO:Set up encoding of ordinal features.
2024-11-27 13:43:51,836:INFO:Set up encoding of categorical features.
2024-11-27 13:43:51,836:INFO:Set up feature normalization.
2024-11-27 13:43:52,233:INFO:Finished creating preprocessing pipeline.
2024-11-27 13:43:52,240:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                 TransformerWrapper(exclude=None, include=['vehicle_age'],
                                    transformer=OneHotEncoder(cols=['vehicle_age'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-27 13:43:52,240:INFO:Creating final display dataframe.
2024-11-27 13:43:52,744:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (304887, 12)
4        Transformed data shape      (304887, 14)
5   Transformed train set shape      (213420, 14)
6    Transformed test set shape       (91467, 14)
7              Numeric features                 9
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              d1c4
2024-11-27 13:43:52,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:52,779:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:52,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:43:52,812:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:43:52,812:INFO:setup() successfully completed in 1.37s...............
2024-11-27 13:46:26,046:INFO:PyCaret ClassificationExperiment
2024-11-27 13:46:26,047:INFO:Logging name: clf-default-name
2024-11-27 13:46:26,047:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-27 13:46:26,047:INFO:version 3.3.2
2024-11-27 13:46:26,047:INFO:Initializing setup()
2024-11-27 13:46:26,047:INFO:self.USI: dbe6
2024-11-27 13:46:26,047:INFO:self._variable_keys: {'X_test', 'fix_imbalance', 'seed', 'USI', 'n_jobs_param', '_ml_usecase', 'log_plots_param', 'X', 'gpu_n_jobs_param', '_available_plots', 'fold_generator', 'exp_name_log', 'data', 'idx', 'exp_id', 'memory', 'y', 'y_train', 'is_multiclass', 'fold_shuffle_param', 'gpu_param', 'pipeline', 'logging_param', 'fold_groups_param', 'target_param', 'html_param', 'X_train', 'y_test'}
2024-11-27 13:46:26,047:INFO:Checking environment
2024-11-27 13:46:26,047:INFO:python_version: 3.9.6
2024-11-27 13:46:26,047:INFO:python_build: ('default', 'Oct  4 2024 08:01:31')
2024-11-27 13:46:26,047:INFO:machine: arm64
2024-11-27 13:46:26,047:INFO:platform: macOS-15.1.1-arm64-arm-64bit
2024-11-27 13:46:26,047:INFO:Memory: svmem(total=17179869184, available=5758812160, percent=66.5, used=7459667968, free=192184320, active=5586157568, inactive=5551947776, wired=1873510400)
2024-11-27 13:46:26,047:INFO:Physical Core: 10
2024-11-27 13:46:26,047:INFO:Logical Core: 10
2024-11-27 13:46:26,047:INFO:Checking libraries
2024-11-27 13:46:26,047:INFO:System:
2024-11-27 13:46:26,047:INFO:    python: 3.9.6 (default, Oct  4 2024, 08:01:31)  [Clang 16.0.0 (clang-1600.0.26.4)]
2024-11-27 13:46:26,047:INFO:executable: /Users/henriquekubo/Documents/repos/health/health_insurance/.venv/bin/python
2024-11-27 13:46:26,047:INFO:   machine: macOS-15.1.1-arm64-arm-64bit
2024-11-27 13:46:26,047:INFO:PyCaret required dependencies:
2024-11-27 13:46:26,047:INFO:                 pip: 24.3.1
2024-11-27 13:46:26,047:INFO:          setuptools: 58.0.4
2024-11-27 13:46:26,047:INFO:             pycaret: 3.3.2
2024-11-27 13:46:26,047:INFO:             IPython: 8.18.1
2024-11-27 13:46:26,047:INFO:          ipywidgets: 8.1.5
2024-11-27 13:46:26,047:INFO:                tqdm: 4.67.0
2024-11-27 13:46:26,047:INFO:               numpy: 1.26.4
2024-11-27 13:46:26,047:INFO:              pandas: 2.1.4
2024-11-27 13:46:26,047:INFO:              jinja2: 3.1.4
2024-11-27 13:46:26,047:INFO:               scipy: 1.11.4
2024-11-27 13:46:26,047:INFO:              joblib: 1.3.2
2024-11-27 13:46:26,048:INFO:             sklearn: 1.4.2
2024-11-27 13:46:26,048:INFO:                pyod: 2.0.2
2024-11-27 13:46:26,048:INFO:            imblearn: 0.12.4
2024-11-27 13:46:26,048:INFO:   category_encoders: 2.6.4
2024-11-27 13:46:26,048:INFO:            lightgbm: 4.5.0
2024-11-27 13:46:26,048:INFO:               numba: 0.60.0
2024-11-27 13:46:26,048:INFO:            requests: 2.32.3
2024-11-27 13:46:26,048:INFO:          matplotlib: 3.7.5
2024-11-27 13:46:26,048:INFO:          scikitplot: 0.3.7
2024-11-27 13:46:26,048:INFO:         yellowbrick: 1.5
2024-11-27 13:46:26,048:INFO:              plotly: 5.24.1
2024-11-27 13:46:26,048:INFO:    plotly-resampler: Not installed
2024-11-27 13:46:26,048:INFO:             kaleido: 0.4.2
2024-11-27 13:46:26,048:INFO:           schemdraw: 0.15
2024-11-27 13:46:26,048:INFO:         statsmodels: 0.14.4
2024-11-27 13:46:26,048:INFO:              sktime: 0.26.0
2024-11-27 13:46:26,048:INFO:               tbats: 1.1.3
2024-11-27 13:46:26,048:INFO:            pmdarima: 2.0.4
2024-11-27 13:46:26,048:INFO:              psutil: 6.1.0
2024-11-27 13:46:26,048:INFO:          markupsafe: 3.0.2
2024-11-27 13:46:26,048:INFO:             pickle5: Not installed
2024-11-27 13:46:26,048:INFO:         cloudpickle: 3.1.0
2024-11-27 13:46:26,048:INFO:         deprecation: 2.1.0
2024-11-27 13:46:26,048:INFO:              xxhash: 3.5.0
2024-11-27 13:46:26,048:INFO:           wurlitzer: 3.1.1
2024-11-27 13:46:26,048:INFO:PyCaret optional dependencies:
2024-11-27 13:46:26,048:INFO:                shap: 0.46.0
2024-11-27 13:46:26,048:INFO:           interpret: Not installed
2024-11-27 13:46:26,048:INFO:                umap: Not installed
2024-11-27 13:46:26,048:INFO:     ydata_profiling: Not installed
2024-11-27 13:46:26,048:INFO:  explainerdashboard: Not installed
2024-11-27 13:46:26,048:INFO:             autoviz: Not installed
2024-11-27 13:46:26,048:INFO:           fairlearn: Not installed
2024-11-27 13:46:26,048:INFO:          deepchecks: Not installed
2024-11-27 13:46:26,048:INFO:             xgboost: Not installed
2024-11-27 13:46:26,048:INFO:            catboost: 1.2.7
2024-11-27 13:46:26,048:INFO:              kmodes: Not installed
2024-11-27 13:46:26,048:INFO:             mlxtend: Not installed
2024-11-27 13:46:26,048:INFO:       statsforecast: Not installed
2024-11-27 13:46:26,048:INFO:        tune_sklearn: Not installed
2024-11-27 13:46:26,048:INFO:                 ray: Not installed
2024-11-27 13:46:26,048:INFO:            hyperopt: Not installed
2024-11-27 13:46:26,048:INFO:              optuna: Not installed
2024-11-27 13:46:26,048:INFO:               skopt: Not installed
2024-11-27 13:46:26,048:INFO:              mlflow: Not installed
2024-11-27 13:46:26,048:INFO:              gradio: Not installed
2024-11-27 13:46:26,048:INFO:             fastapi: Not installed
2024-11-27 13:46:26,048:INFO:             uvicorn: Not installed
2024-11-27 13:46:26,048:INFO:              m2cgen: Not installed
2024-11-27 13:46:26,048:INFO:           evidently: Not installed
2024-11-27 13:46:26,048:INFO:               fugue: Not installed
2024-11-27 13:46:26,048:INFO:           streamlit: Not installed
2024-11-27 13:46:26,048:INFO:             prophet: Not installed
2024-11-27 13:46:26,048:INFO:None
2024-11-27 13:46:26,048:INFO:Set up data.
2024-11-27 13:46:26,106:INFO:Set up folding strategy.
2024-11-27 13:46:26,106:INFO:Set up train/test split.
2024-11-27 13:46:26,172:INFO:Set up index.
2024-11-27 13:46:26,175:INFO:Assigning column types.
2024-11-27 13:46:26,198:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-27 13:46:26,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 13:46:26,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:46:26,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:26,230:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:26,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 13:46:26,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:46:26,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:26,263:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:26,263:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-27 13:46:26,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:46:26,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:26,296:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:26,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 13:46:26,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:26,328:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:26,328:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-27 13:46:26,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:26,360:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:26,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:26,391:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:26,392:INFO:Preparing preprocessing pipeline...
2024-11-27 13:46:26,397:INFO:Set up simple imputation.
2024-11-27 13:46:26,415:INFO:Set up encoding of ordinal features.
2024-11-27 13:46:26,424:INFO:Set up encoding of categorical features.
2024-11-27 13:46:26,425:INFO:Set up imbalanced handling.
2024-11-27 13:46:26,425:INFO:Set up feature normalization.
2024-11-27 13:46:27,200:INFO:Finished creating preprocessing pipeline.
2024-11-27 13:46:27,209:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-27 13:46:27,209:INFO:Creating final display dataframe.
2024-11-27 13:46:28,180:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          response
2                   Target type            Binary
3           Original data shape      (304887, 12)
4        Transformed data shape      (465993, 14)
5   Transformed train set shape      (374526, 14)
6    Transformed test set shape       (91467, 14)
7              Numeric features                 9
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              dbe6
2024-11-27 13:46:28,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:28,217:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:28,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 13:46:28,250:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-27 13:46:28,251:INFO:setup() successfully completed in 2.21s...............
2024-11-27 13:46:38,366:INFO:Initializing compare_models()
2024-11-27 13:46:38,366:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-27 13:46:38,367:INFO:Checking exceptions
2024-11-27 13:46:38,405:INFO:Preparing display monitor
2024-11-27 13:46:38,462:INFO:Initializing Logistic Regression
2024-11-27 13:46:38,463:INFO:Total runtime is 4.629294077555339e-06 minutes
2024-11-27 13:46:38,464:INFO:SubProcess create_model() called ==================================
2024-11-27 13:46:38,465:INFO:Initializing create_model()
2024-11-27 13:46:38,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:46:38,465:INFO:Checking exceptions
2024-11-27 13:46:38,465:INFO:Importing libraries
2024-11-27 13:46:38,465:INFO:Copying training dataset
2024-11-27 13:46:38,517:INFO:Defining folds
2024-11-27 13:46:38,517:INFO:Declaring metric variables
2024-11-27 13:46:38,519:INFO:Importing untrained model
2024-11-27 13:46:38,521:INFO:Logistic Regression Imported successfully
2024-11-27 13:46:38,524:INFO:Starting cross validation
2024-11-27 13:46:38,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:46:43,021:INFO:Calculating mean and std
2024-11-27 13:46:43,025:INFO:Creating metrics dataframe
2024-11-27 13:46:43,029:INFO:Uploading results into container
2024-11-27 13:46:43,029:INFO:Uploading model into container now
2024-11-27 13:46:43,030:INFO:_master_model_container: 1
2024-11-27 13:46:43,030:INFO:_display_container: 2
2024-11-27 13:46:43,030:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-27 13:46:43,030:INFO:create_model() successfully completed......................................
2024-11-27 13:46:43,125:INFO:SubProcess create_model() end ==================================
2024-11-27 13:46:43,125:INFO:Creating metrics dataframe
2024-11-27 13:46:43,128:INFO:Initializing K Neighbors Classifier
2024-11-27 13:46:43,128:INFO:Total runtime is 0.07776572704315186 minutes
2024-11-27 13:46:43,130:INFO:SubProcess create_model() called ==================================
2024-11-27 13:46:43,130:INFO:Initializing create_model()
2024-11-27 13:46:43,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:46:43,130:INFO:Checking exceptions
2024-11-27 13:46:43,130:INFO:Importing libraries
2024-11-27 13:46:43,130:INFO:Copying training dataset
2024-11-27 13:46:43,195:INFO:Defining folds
2024-11-27 13:46:43,195:INFO:Declaring metric variables
2024-11-27 13:46:43,197:INFO:Importing untrained model
2024-11-27 13:46:43,199:INFO:K Neighbors Classifier Imported successfully
2024-11-27 13:46:43,202:INFO:Starting cross validation
2024-11-27 13:46:43,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:47:22,053:INFO:Calculating mean and std
2024-11-27 13:47:22,055:INFO:Creating metrics dataframe
2024-11-27 13:47:22,059:INFO:Uploading results into container
2024-11-27 13:47:22,060:INFO:Uploading model into container now
2024-11-27 13:47:22,060:INFO:_master_model_container: 2
2024-11-27 13:47:22,060:INFO:_display_container: 2
2024-11-27 13:47:22,061:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-27 13:47:22,061:INFO:create_model() successfully completed......................................
2024-11-27 13:47:22,112:INFO:SubProcess create_model() end ==================================
2024-11-27 13:47:22,112:INFO:Creating metrics dataframe
2024-11-27 13:47:22,115:INFO:Initializing Naive Bayes
2024-11-27 13:47:22,115:INFO:Total runtime is 0.7275461634000142 minutes
2024-11-27 13:47:22,117:INFO:SubProcess create_model() called ==================================
2024-11-27 13:47:22,117:INFO:Initializing create_model()
2024-11-27 13:47:22,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:47:22,117:INFO:Checking exceptions
2024-11-27 13:47:22,117:INFO:Importing libraries
2024-11-27 13:47:22,117:INFO:Copying training dataset
2024-11-27 13:47:22,162:INFO:Defining folds
2024-11-27 13:47:22,162:INFO:Declaring metric variables
2024-11-27 13:47:22,165:INFO:Importing untrained model
2024-11-27 13:47:22,166:INFO:Naive Bayes Imported successfully
2024-11-27 13:47:22,169:INFO:Starting cross validation
2024-11-27 13:47:22,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:47:23,723:INFO:Calculating mean and std
2024-11-27 13:47:23,726:INFO:Creating metrics dataframe
2024-11-27 13:47:23,729:INFO:Uploading results into container
2024-11-27 13:47:23,730:INFO:Uploading model into container now
2024-11-27 13:47:23,730:INFO:_master_model_container: 3
2024-11-27 13:47:23,730:INFO:_display_container: 2
2024-11-27 13:47:23,731:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-27 13:47:23,731:INFO:create_model() successfully completed......................................
2024-11-27 13:47:23,811:INFO:SubProcess create_model() end ==================================
2024-11-27 13:47:23,811:INFO:Creating metrics dataframe
2024-11-27 13:47:23,816:INFO:Initializing Decision Tree Classifier
2024-11-27 13:47:23,816:INFO:Total runtime is 0.7558971285820008 minutes
2024-11-27 13:47:23,818:INFO:SubProcess create_model() called ==================================
2024-11-27 13:47:23,818:INFO:Initializing create_model()
2024-11-27 13:47:23,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:47:23,818:INFO:Checking exceptions
2024-11-27 13:47:23,818:INFO:Importing libraries
2024-11-27 13:47:23,819:INFO:Copying training dataset
2024-11-27 13:47:23,875:INFO:Defining folds
2024-11-27 13:47:23,875:INFO:Declaring metric variables
2024-11-27 13:47:23,877:INFO:Importing untrained model
2024-11-27 13:47:23,879:INFO:Decision Tree Classifier Imported successfully
2024-11-27 13:47:23,882:INFO:Starting cross validation
2024-11-27 13:47:23,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:47:27,967:INFO:Calculating mean and std
2024-11-27 13:47:27,969:INFO:Creating metrics dataframe
2024-11-27 13:47:27,971:INFO:Uploading results into container
2024-11-27 13:47:27,971:INFO:Uploading model into container now
2024-11-27 13:47:27,972:INFO:_master_model_container: 4
2024-11-27 13:47:27,972:INFO:_display_container: 2
2024-11-27 13:47:27,972:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-27 13:47:27,972:INFO:create_model() successfully completed......................................
2024-11-27 13:47:28,022:INFO:SubProcess create_model() end ==================================
2024-11-27 13:47:28,022:INFO:Creating metrics dataframe
2024-11-27 13:47:28,026:INFO:Initializing SVM - Linear Kernel
2024-11-27 13:47:28,026:INFO:Total runtime is 0.826061483224233 minutes
2024-11-27 13:47:28,028:INFO:SubProcess create_model() called ==================================
2024-11-27 13:47:28,028:INFO:Initializing create_model()
2024-11-27 13:47:28,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:47:28,028:INFO:Checking exceptions
2024-11-27 13:47:28,028:INFO:Importing libraries
2024-11-27 13:47:28,028:INFO:Copying training dataset
2024-11-27 13:47:28,076:INFO:Defining folds
2024-11-27 13:47:28,076:INFO:Declaring metric variables
2024-11-27 13:47:28,078:INFO:Importing untrained model
2024-11-27 13:47:28,080:INFO:SVM - Linear Kernel Imported successfully
2024-11-27 13:47:28,083:INFO:Starting cross validation
2024-11-27 13:47:28,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:47:30,247:INFO:Calculating mean and std
2024-11-27 13:47:30,248:INFO:Creating metrics dataframe
2024-11-27 13:47:30,251:INFO:Uploading results into container
2024-11-27 13:47:30,252:INFO:Uploading model into container now
2024-11-27 13:47:30,252:INFO:_master_model_container: 5
2024-11-27 13:47:30,252:INFO:_display_container: 2
2024-11-27 13:47:30,252:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-27 13:47:30,253:INFO:create_model() successfully completed......................................
2024-11-27 13:47:30,303:INFO:SubProcess create_model() end ==================================
2024-11-27 13:47:30,304:INFO:Creating metrics dataframe
2024-11-27 13:47:30,308:INFO:Initializing Ridge Classifier
2024-11-27 13:47:30,309:INFO:Total runtime is 0.8641045133272807 minutes
2024-11-27 13:47:30,310:INFO:SubProcess create_model() called ==================================
2024-11-27 13:47:30,310:INFO:Initializing create_model()
2024-11-27 13:47:30,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:47:30,310:INFO:Checking exceptions
2024-11-27 13:47:30,310:INFO:Importing libraries
2024-11-27 13:47:30,311:INFO:Copying training dataset
2024-11-27 13:47:30,359:INFO:Defining folds
2024-11-27 13:47:30,359:INFO:Declaring metric variables
2024-11-27 13:47:30,361:INFO:Importing untrained model
2024-11-27 13:47:30,363:INFO:Ridge Classifier Imported successfully
2024-11-27 13:47:30,366:INFO:Starting cross validation
2024-11-27 13:47:30,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:47:31,878:INFO:Calculating mean and std
2024-11-27 13:47:31,880:INFO:Creating metrics dataframe
2024-11-27 13:47:31,885:INFO:Uploading results into container
2024-11-27 13:47:31,885:INFO:Uploading model into container now
2024-11-27 13:47:31,886:INFO:_master_model_container: 6
2024-11-27 13:47:31,886:INFO:_display_container: 2
2024-11-27 13:47:31,886:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-27 13:47:31,886:INFO:create_model() successfully completed......................................
2024-11-27 13:47:31,971:INFO:SubProcess create_model() end ==================================
2024-11-27 13:47:31,971:INFO:Creating metrics dataframe
2024-11-27 13:47:31,975:INFO:Initializing Random Forest Classifier
2024-11-27 13:47:31,975:INFO:Total runtime is 0.8918830275535583 minutes
2024-11-27 13:47:31,977:INFO:SubProcess create_model() called ==================================
2024-11-27 13:47:31,977:INFO:Initializing create_model()
2024-11-27 13:47:31,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:47:31,977:INFO:Checking exceptions
2024-11-27 13:47:31,977:INFO:Importing libraries
2024-11-27 13:47:31,977:INFO:Copying training dataset
2024-11-27 13:47:32,029:INFO:Defining folds
2024-11-27 13:47:32,029:INFO:Declaring metric variables
2024-11-27 13:47:32,031:INFO:Importing untrained model
2024-11-27 13:47:32,033:INFO:Random Forest Classifier Imported successfully
2024-11-27 13:47:32,036:INFO:Starting cross validation
2024-11-27 13:47:32,039:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:48:29,992:INFO:Calculating mean and std
2024-11-27 13:48:29,995:INFO:Creating metrics dataframe
2024-11-27 13:48:30,000:INFO:Uploading results into container
2024-11-27 13:48:30,000:INFO:Uploading model into container now
2024-11-27 13:48:30,001:INFO:_master_model_container: 7
2024-11-27 13:48:30,001:INFO:_display_container: 2
2024-11-27 13:48:30,001:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-27 13:48:30,001:INFO:create_model() successfully completed......................................
2024-11-27 13:48:30,079:INFO:SubProcess create_model() end ==================================
2024-11-27 13:48:30,079:INFO:Creating metrics dataframe
2024-11-27 13:48:30,083:INFO:Initializing Quadratic Discriminant Analysis
2024-11-27 13:48:30,083:INFO:Total runtime is 1.8603477438290912 minutes
2024-11-27 13:48:30,085:INFO:SubProcess create_model() called ==================================
2024-11-27 13:48:30,085:INFO:Initializing create_model()
2024-11-27 13:48:30,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:48:30,085:INFO:Checking exceptions
2024-11-27 13:48:30,085:INFO:Importing libraries
2024-11-27 13:48:30,085:INFO:Copying training dataset
2024-11-27 13:48:30,140:INFO:Defining folds
2024-11-27 13:48:30,140:INFO:Declaring metric variables
2024-11-27 13:48:30,142:INFO:Importing untrained model
2024-11-27 13:48:30,144:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-27 13:48:30,147:INFO:Starting cross validation
2024-11-27 13:48:30,149:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:48:31,328:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,344:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,375:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,450:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,536:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,608:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,677:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,718:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,817:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:31,922:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-27 13:48:32,351:INFO:Calculating mean and std
2024-11-27 13:48:32,352:INFO:Creating metrics dataframe
2024-11-27 13:48:32,354:INFO:Uploading results into container
2024-11-27 13:48:32,354:INFO:Uploading model into container now
2024-11-27 13:48:32,355:INFO:_master_model_container: 8
2024-11-27 13:48:32,355:INFO:_display_container: 2
2024-11-27 13:48:32,355:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-27 13:48:32,355:INFO:create_model() successfully completed......................................
2024-11-27 13:48:32,409:INFO:SubProcess create_model() end ==================================
2024-11-27 13:48:32,409:INFO:Creating metrics dataframe
2024-11-27 13:48:32,413:INFO:Initializing Ada Boost Classifier
2024-11-27 13:48:32,414:INFO:Total runtime is 1.899186031023661 minutes
2024-11-27 13:48:32,415:INFO:SubProcess create_model() called ==================================
2024-11-27 13:48:32,415:INFO:Initializing create_model()
2024-11-27 13:48:32,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:48:32,415:INFO:Checking exceptions
2024-11-27 13:48:32,416:INFO:Importing libraries
2024-11-27 13:48:32,416:INFO:Copying training dataset
2024-11-27 13:48:32,461:INFO:Defining folds
2024-11-27 13:48:32,461:INFO:Declaring metric variables
2024-11-27 13:48:32,463:INFO:Importing untrained model
2024-11-27 13:48:32,465:INFO:Ada Boost Classifier Imported successfully
2024-11-27 13:48:32,468:INFO:Starting cross validation
2024-11-27 13:48:32,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:48:33,281:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:33,412:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:33,414:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:33,427:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:33,542:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:33,583:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:33,727:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:35,711:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:35,767:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:35,799:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 13:48:51,218:INFO:Calculating mean and std
2024-11-27 13:48:51,219:INFO:Creating metrics dataframe
2024-11-27 13:48:51,221:INFO:Uploading results into container
2024-11-27 13:48:51,221:INFO:Uploading model into container now
2024-11-27 13:48:51,222:INFO:_master_model_container: 9
2024-11-27 13:48:51,222:INFO:_display_container: 2
2024-11-27 13:48:51,222:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-27 13:48:51,222:INFO:create_model() successfully completed......................................
2024-11-27 13:48:51,278:INFO:SubProcess create_model() end ==================================
2024-11-27 13:48:51,278:INFO:Creating metrics dataframe
2024-11-27 13:48:51,283:INFO:Initializing Gradient Boosting Classifier
2024-11-27 13:48:51,283:INFO:Total runtime is 2.2136819481849668 minutes
2024-11-27 13:48:51,285:INFO:SubProcess create_model() called ==================================
2024-11-27 13:48:51,285:INFO:Initializing create_model()
2024-11-27 13:48:51,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:48:51,285:INFO:Checking exceptions
2024-11-27 13:48:51,285:INFO:Importing libraries
2024-11-27 13:48:51,285:INFO:Copying training dataset
2024-11-27 13:48:51,334:INFO:Defining folds
2024-11-27 13:48:51,335:INFO:Declaring metric variables
2024-11-27 13:48:51,336:INFO:Importing untrained model
2024-11-27 13:48:51,338:INFO:Gradient Boosting Classifier Imported successfully
2024-11-27 13:48:51,342:INFO:Starting cross validation
2024-11-27 13:48:51,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:50:11,671:INFO:Calculating mean and std
2024-11-27 13:50:11,674:INFO:Creating metrics dataframe
2024-11-27 13:50:11,679:INFO:Uploading results into container
2024-11-27 13:50:11,680:INFO:Uploading model into container now
2024-11-27 13:50:11,681:INFO:_master_model_container: 10
2024-11-27 13:50:11,681:INFO:_display_container: 2
2024-11-27 13:50:11,681:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-27 13:50:11,682:INFO:create_model() successfully completed......................................
2024-11-27 13:50:11,747:INFO:SubProcess create_model() end ==================================
2024-11-27 13:50:11,747:INFO:Creating metrics dataframe
2024-11-27 13:50:11,751:INFO:Initializing Linear Discriminant Analysis
2024-11-27 13:50:11,751:INFO:Total runtime is 3.554815395673116 minutes
2024-11-27 13:50:11,753:INFO:SubProcess create_model() called ==================================
2024-11-27 13:50:11,753:INFO:Initializing create_model()
2024-11-27 13:50:11,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:50:11,753:INFO:Checking exceptions
2024-11-27 13:50:11,753:INFO:Importing libraries
2024-11-27 13:50:11,753:INFO:Copying training dataset
2024-11-27 13:50:11,804:INFO:Defining folds
2024-11-27 13:50:11,804:INFO:Declaring metric variables
2024-11-27 13:50:11,806:INFO:Importing untrained model
2024-11-27 13:50:11,808:INFO:Linear Discriminant Analysis Imported successfully
2024-11-27 13:50:11,812:INFO:Starting cross validation
2024-11-27 13:50:11,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:50:13,618:INFO:Calculating mean and std
2024-11-27 13:50:13,620:INFO:Creating metrics dataframe
2024-11-27 13:50:13,621:INFO:Uploading results into container
2024-11-27 13:50:13,622:INFO:Uploading model into container now
2024-11-27 13:50:13,622:INFO:_master_model_container: 11
2024-11-27 13:50:13,622:INFO:_display_container: 2
2024-11-27 13:50:13,623:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-27 13:50:13,623:INFO:create_model() successfully completed......................................
2024-11-27 13:50:13,673:INFO:SubProcess create_model() end ==================================
2024-11-27 13:50:13,673:INFO:Creating metrics dataframe
2024-11-27 13:50:13,678:INFO:Initializing Extra Trees Classifier
2024-11-27 13:50:13,678:INFO:Total runtime is 3.586927111943563 minutes
2024-11-27 13:50:13,679:INFO:SubProcess create_model() called ==================================
2024-11-27 13:50:13,680:INFO:Initializing create_model()
2024-11-27 13:50:13,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:50:13,680:INFO:Checking exceptions
2024-11-27 13:50:13,680:INFO:Importing libraries
2024-11-27 13:50:13,680:INFO:Copying training dataset
2024-11-27 13:50:13,727:INFO:Defining folds
2024-11-27 13:50:13,727:INFO:Declaring metric variables
2024-11-27 13:50:13,729:INFO:Importing untrained model
2024-11-27 13:50:13,731:INFO:Extra Trees Classifier Imported successfully
2024-11-27 13:50:13,734:INFO:Starting cross validation
2024-11-27 13:50:13,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:50:48,823:INFO:Calculating mean and std
2024-11-27 13:50:48,826:INFO:Creating metrics dataframe
2024-11-27 13:50:48,829:INFO:Uploading results into container
2024-11-27 13:50:48,830:INFO:Uploading model into container now
2024-11-27 13:50:48,830:INFO:_master_model_container: 12
2024-11-27 13:50:48,830:INFO:_display_container: 2
2024-11-27 13:50:48,831:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-27 13:50:48,831:INFO:create_model() successfully completed......................................
2024-11-27 13:50:48,905:INFO:SubProcess create_model() end ==================================
2024-11-27 13:50:48,905:INFO:Creating metrics dataframe
2024-11-27 13:50:48,910:INFO:Initializing Light Gradient Boosting Machine
2024-11-27 13:50:48,910:INFO:Total runtime is 4.174129645029704 minutes
2024-11-27 13:50:48,912:INFO:SubProcess create_model() called ==================================
2024-11-27 13:50:48,912:INFO:Initializing create_model()
2024-11-27 13:50:48,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:50:48,912:INFO:Checking exceptions
2024-11-27 13:50:48,912:INFO:Importing libraries
2024-11-27 13:50:48,912:INFO:Copying training dataset
2024-11-27 13:50:48,965:INFO:Defining folds
2024-11-27 13:50:48,966:INFO:Declaring metric variables
2024-11-27 13:50:48,967:INFO:Importing untrained model
2024-11-27 13:50:48,970:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-27 13:50:48,973:INFO:Starting cross validation
2024-11-27 13:50:48,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:50:57,195:INFO:Calculating mean and std
2024-11-27 13:50:57,196:INFO:Creating metrics dataframe
2024-11-27 13:50:57,198:INFO:Uploading results into container
2024-11-27 13:50:57,198:INFO:Uploading model into container now
2024-11-27 13:50:57,199:INFO:_master_model_container: 13
2024-11-27 13:50:57,199:INFO:_display_container: 2
2024-11-27 13:50:57,199:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-27 13:50:57,199:INFO:create_model() successfully completed......................................
2024-11-27 13:50:57,249:INFO:SubProcess create_model() end ==================================
2024-11-27 13:50:57,250:INFO:Creating metrics dataframe
2024-11-27 13:50:57,255:INFO:Initializing CatBoost Classifier
2024-11-27 13:50:57,255:INFO:Total runtime is 4.3132110953330995 minutes
2024-11-27 13:50:57,257:INFO:SubProcess create_model() called ==================================
2024-11-27 13:50:57,257:INFO:Initializing create_model()
2024-11-27 13:50:57,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:50:57,257:INFO:Checking exceptions
2024-11-27 13:50:57,257:INFO:Importing libraries
2024-11-27 13:50:57,257:INFO:Copying training dataset
2024-11-27 13:50:57,303:INFO:Defining folds
2024-11-27 13:50:57,303:INFO:Declaring metric variables
2024-11-27 13:50:57,305:INFO:Importing untrained model
2024-11-27 13:50:57,308:INFO:CatBoost Classifier Imported successfully
2024-11-27 13:50:57,311:INFO:Starting cross validation
2024-11-27 13:50:57,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:52:31,131:INFO:Calculating mean and std
2024-11-27 13:52:31,134:INFO:Creating metrics dataframe
2024-11-27 13:52:31,136:INFO:Uploading results into container
2024-11-27 13:52:31,137:INFO:Uploading model into container now
2024-11-27 13:52:31,138:INFO:_master_model_container: 14
2024-11-27 13:52:31,138:INFO:_display_container: 2
2024-11-27 13:52:31,138:INFO:<catboost.core.CatBoostClassifier object at 0x32e51d1c0>
2024-11-27 13:52:31,138:INFO:create_model() successfully completed......................................
2024-11-27 13:52:31,194:INFO:SubProcess create_model() end ==================================
2024-11-27 13:52:31,194:INFO:Creating metrics dataframe
2024-11-27 13:52:31,199:INFO:Initializing Dummy Classifier
2024-11-27 13:52:31,199:INFO:Total runtime is 5.878951028982798 minutes
2024-11-27 13:52:31,201:INFO:SubProcess create_model() called ==================================
2024-11-27 13:52:31,201:INFO:Initializing create_model()
2024-11-27 13:52:31,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x32d2d9490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:52:31,201:INFO:Checking exceptions
2024-11-27 13:52:31,201:INFO:Importing libraries
2024-11-27 13:52:31,201:INFO:Copying training dataset
2024-11-27 13:52:31,250:INFO:Defining folds
2024-11-27 13:52:31,250:INFO:Declaring metric variables
2024-11-27 13:52:31,252:INFO:Importing untrained model
2024-11-27 13:52:31,254:INFO:Dummy Classifier Imported successfully
2024-11-27 13:52:31,257:INFO:Starting cross validation
2024-11-27 13:52:31,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:52:32,170:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,246:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,334:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,374:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,374:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,451:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,495:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,526:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,547:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:32,607:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 13:52:33,035:INFO:Calculating mean and std
2024-11-27 13:52:33,036:INFO:Creating metrics dataframe
2024-11-27 13:52:33,037:INFO:Uploading results into container
2024-11-27 13:52:33,038:INFO:Uploading model into container now
2024-11-27 13:52:33,038:INFO:_master_model_container: 15
2024-11-27 13:52:33,039:INFO:_display_container: 2
2024-11-27 13:52:33,039:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-27 13:52:33,039:INFO:create_model() successfully completed......................................
2024-11-27 13:52:33,090:INFO:SubProcess create_model() end ==================================
2024-11-27 13:52:33,090:INFO:Creating metrics dataframe
2024-11-27 13:52:33,102:WARNING:/Users/henriquekubo/Documents/repos/health/health_insurance/.venv/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-27 13:52:33,106:INFO:Initializing create_model()
2024-11-27 13:52:33,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:52:33,106:INFO:Checking exceptions
2024-11-27 13:52:33,107:INFO:Importing libraries
2024-11-27 13:52:33,107:INFO:Copying training dataset
2024-11-27 13:52:33,153:INFO:Defining folds
2024-11-27 13:52:33,153:INFO:Declaring metric variables
2024-11-27 13:52:33,153:INFO:Importing untrained model
2024-11-27 13:52:33,153:INFO:Declaring custom model
2024-11-27 13:52:33,154:INFO:Dummy Classifier Imported successfully
2024-11-27 13:52:33,154:INFO:Cross validation set to False
2024-11-27 13:52:33,154:INFO:Fitting Model
2024-11-27 13:52:33,812:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-27 13:52:33,813:INFO:create_model() successfully completed......................................
2024-11-27 13:52:33,874:INFO:_master_model_container: 15
2024-11-27 13:52:33,874:INFO:_display_container: 2
2024-11-27 13:52:33,874:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-27 13:52:33,874:INFO:compare_models() successfully completed......................................
2024-11-27 13:53:23,126:INFO:Initializing create_model()
2024-11-27 13:53:23,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:53:23,126:INFO:Checking exceptions
2024-11-27 13:53:23,137:INFO:Importing libraries
2024-11-27 13:53:23,137:INFO:Copying training dataset
2024-11-27 13:53:23,212:INFO:Defining folds
2024-11-27 13:53:23,212:INFO:Declaring metric variables
2024-11-27 13:53:23,214:INFO:Importing untrained model
2024-11-27 13:53:23,216:INFO:CatBoost Classifier Imported successfully
2024-11-27 13:53:23,220:INFO:Starting cross validation
2024-11-27 13:53:23,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:54:57,209:INFO:Calculating mean and std
2024-11-27 13:54:57,212:INFO:Creating metrics dataframe
2024-11-27 13:54:57,216:INFO:Finalizing model
2024-11-27 13:55:15,656:INFO:Uploading results into container
2024-11-27 13:55:15,657:INFO:Uploading model into container now
2024-11-27 13:55:15,663:INFO:_master_model_container: 16
2024-11-27 13:55:15,663:INFO:_display_container: 3
2024-11-27 13:55:15,663:INFO:<catboost.core.CatBoostClassifier object at 0x317b25130>
2024-11-27 13:55:15,663:INFO:create_model() successfully completed......................................
2024-11-27 13:55:47,889:INFO:Initializing tune_model()
2024-11-27 13:55:47,890:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x317b25130>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>)
2024-11-27 13:55:47,890:INFO:Checking exceptions
2024-11-27 13:55:47,923:INFO:Copying training dataset
2024-11-27 13:55:47,956:INFO:Checking base model
2024-11-27 13:55:47,956:INFO:Base model : CatBoost Classifier
2024-11-27 13:55:47,958:INFO:Declaring metric variables
2024-11-27 13:55:47,960:INFO:Defining Hyperparameters
2024-11-27 13:55:48,037:INFO:Tuning with n_jobs=-1
2024-11-27 13:55:48,037:INFO:Initializing RandomizedSearchCV
2024-11-27 13:57:36,036:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2024-11-27 13:57:36,039:INFO:Hyperparameter search completed
2024-11-27 13:57:36,039:INFO:SubProcess create_model() called ==================================
2024-11-27 13:57:36,039:INFO:Initializing create_model()
2024-11-27 13:57:36,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=<catboost.core.CatBoostClassifier object at 0x3179953d0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x317d28580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2024-11-27 13:57:36,039:INFO:Checking exceptions
2024-11-27 13:57:36,040:INFO:Importing libraries
2024-11-27 13:57:36,040:INFO:Copying training dataset
2024-11-27 13:57:36,093:INFO:Defining folds
2024-11-27 13:57:36,093:INFO:Declaring metric variables
2024-11-27 13:57:36,095:INFO:Importing untrained model
2024-11-27 13:57:36,095:INFO:Declaring custom model
2024-11-27 13:57:36,097:INFO:CatBoost Classifier Imported successfully
2024-11-27 13:57:36,100:INFO:Starting cross validation
2024-11-27 13:57:36,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:57:49,403:INFO:Calculating mean and std
2024-11-27 13:57:49,404:INFO:Creating metrics dataframe
2024-11-27 13:57:49,408:INFO:Finalizing model
2024-11-27 13:57:52,275:INFO:Uploading results into container
2024-11-27 13:57:52,276:INFO:Uploading model into container now
2024-11-27 13:57:52,276:INFO:_master_model_container: 17
2024-11-27 13:57:52,277:INFO:_display_container: 4
2024-11-27 13:57:52,277:INFO:<catboost.core.CatBoostClassifier object at 0x32e384c40>
2024-11-27 13:57:52,277:INFO:create_model() successfully completed......................................
2024-11-27 13:57:52,379:INFO:SubProcess create_model() end ==================================
2024-11-27 13:57:52,379:INFO:choose_better activated
2024-11-27 13:57:52,381:INFO:SubProcess create_model() called ==================================
2024-11-27 13:57:52,381:INFO:Initializing create_model()
2024-11-27 13:57:52,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=<catboost.core.CatBoostClassifier object at 0x317b25130>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 13:57:52,381:INFO:Checking exceptions
2024-11-27 13:57:52,382:INFO:Importing libraries
2024-11-27 13:57:52,382:INFO:Copying training dataset
2024-11-27 13:57:52,430:INFO:Defining folds
2024-11-27 13:57:52,430:INFO:Declaring metric variables
2024-11-27 13:57:52,430:INFO:Importing untrained model
2024-11-27 13:57:52,430:INFO:Declaring custom model
2024-11-27 13:57:52,430:INFO:CatBoost Classifier Imported successfully
2024-11-27 13:57:52,430:INFO:Starting cross validation
2024-11-27 13:57:52,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-27 13:59:19,167:INFO:Calculating mean and std
2024-11-27 13:59:19,169:INFO:Creating metrics dataframe
2024-11-27 13:59:19,170:INFO:Finalizing model
2024-11-27 13:59:37,000:INFO:Uploading results into container
2024-11-27 13:59:37,001:INFO:Uploading model into container now
2024-11-27 13:59:37,001:INFO:_master_model_container: 18
2024-11-27 13:59:37,001:INFO:_display_container: 5
2024-11-27 13:59:37,001:INFO:<catboost.core.CatBoostClassifier object at 0x32e3844c0>
2024-11-27 13:59:37,001:INFO:create_model() successfully completed......................................
2024-11-27 13:59:37,047:INFO:SubProcess create_model() end ==================================
2024-11-27 13:59:37,048:INFO:<catboost.core.CatBoostClassifier object at 0x32e3844c0> result for Accuracy is 0.8739
2024-11-27 13:59:37,048:INFO:<catboost.core.CatBoostClassifier object at 0x32e384c40> result for Accuracy is 0.8693
2024-11-27 13:59:37,048:INFO:<catboost.core.CatBoostClassifier object at 0x32e3844c0> is best model
2024-11-27 13:59:37,048:INFO:choose_better completed
2024-11-27 13:59:37,048:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-11-27 13:59:37,053:INFO:_master_model_container: 18
2024-11-27 13:59:37,053:INFO:_display_container: 4
2024-11-27 13:59:37,053:INFO:<catboost.core.CatBoostClassifier object at 0x32e3844c0>
2024-11-27 13:59:37,053:INFO:tune_model() successfully completed......................................
2024-11-27 13:59:54,113:INFO:Initializing plot_model()
2024-11-27 13:59:54,113:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, system=True)
2024-11-27 13:59:54,114:INFO:Checking exceptions
2024-11-27 13:59:54,159:INFO:Preloading libraries
2024-11-27 13:59:54,160:INFO:Copying training dataset
2024-11-27 13:59:54,160:INFO:Plot type: feature
2024-11-27 13:59:54,161:WARNING:No coef_ found. Trying feature_importances_
2024-11-27 13:59:54,364:INFO:Visual Rendered Successfully
2024-11-27 13:59:54,420:INFO:plot_model() successfully completed......................................
2024-11-27 13:59:58,626:INFO:Initializing plot_model()
2024-11-27 13:59:58,626:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, system=True)
2024-11-27 13:59:58,626:INFO:Checking exceptions
2024-11-27 13:59:58,648:INFO:Preloading libraries
2024-11-27 13:59:58,649:INFO:Copying training dataset
2024-11-27 13:59:58,649:INFO:Plot type: auc
2024-11-27 13:59:58,951:INFO:Fitting Model
2024-11-27 13:59:58,962:INFO:Scoring test/hold-out set
2024-11-27 13:59:59,200:INFO:Visual Rendered Successfully
2024-11-27 13:59:59,248:INFO:plot_model() successfully completed......................................
2024-11-27 14:00:05,046:INFO:Initializing plot_model()
2024-11-27 14:00:05,047:INFO:plot_model(plot=gain, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, system=True)
2024-11-27 14:00:05,047:INFO:Checking exceptions
2024-11-27 14:00:05,092:INFO:Preloading libraries
2024-11-27 14:00:05,093:INFO:Copying training dataset
2024-11-27 14:00:05,093:INFO:Plot type: gain
2024-11-27 14:00:05,093:INFO:Generating predictions / predict_proba on X_test
2024-11-27 14:00:05,313:INFO:Visual Rendered Successfully
2024-11-27 14:00:05,363:INFO:plot_model() successfully completed......................................
2024-11-27 14:00:10,158:INFO:Initializing plot_model()
2024-11-27 14:00:10,158:INFO:plot_model(plot=lift, fold=None, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, system=True)
2024-11-27 14:00:10,158:INFO:Checking exceptions
2024-11-27 14:00:10,184:INFO:Preloading libraries
2024-11-27 14:00:10,185:INFO:Copying training dataset
2024-11-27 14:00:10,185:INFO:Plot type: lift
2024-11-27 14:00:10,186:INFO:Generating predictions / predict_proba on X_test
2024-11-27 14:00:10,421:INFO:Visual Rendered Successfully
2024-11-27 14:00:10,472:INFO:plot_model() successfully completed......................................
2024-11-27 14:00:15,571:INFO:Initializing predict_model()
2024-11-27 14:00:15,572:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32e48c8b0>)
2024-11-27 14:00:15,572:INFO:Checking exceptions
2024-11-27 14:00:15,572:INFO:Preloading libraries
2024-11-27 14:00:27,273:INFO:Initializing finalize_model()
2024-11-27 14:00:27,274:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-27 14:00:27,274:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x32e3844c0>
2024-11-27 14:00:27,298:INFO:Initializing create_model()
2024-11-27 14:00:27,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=<catboost.core.CatBoostClassifier object at 0x32e3844c0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 14:00:27,298:INFO:Checking exceptions
2024-11-27 14:00:27,299:INFO:Importing libraries
2024-11-27 14:00:27,299:INFO:Copying training dataset
2024-11-27 14:00:27,301:INFO:Defining folds
2024-11-27 14:00:27,301:INFO:Declaring metric variables
2024-11-27 14:00:27,301:INFO:Importing untrained model
2024-11-27 14:00:27,301:INFO:Declaring custom model
2024-11-27 14:00:27,302:INFO:CatBoost Classifier Imported successfully
2024-11-27 14:00:27,303:INFO:Cross validation set to False
2024-11-27 14:00:27,303:INFO:Fitting Model
2024-11-27 14:00:51,760:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x32d7fdf40>)],
         verbose=False)
2024-11-27 14:00:51,760:INFO:create_model() successfully completed......................................
2024-11-27 14:00:51,806:INFO:_master_model_container: 18
2024-11-27 14:00:51,806:INFO:_display_container: 5
2024-11-27 14:00:51,814:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x32d7fdf40>)],
         verbose=False)
2024-11-27 14:00:51,814:INFO:finalize_model() successfully completed......................................
2024-11-27 14:01:06,875:INFO:Initializing predict_model()
2024-11-27 14:01:06,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x32d7fdf40>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32e48c8b0>)
2024-11-27 14:01:06,876:INFO:Checking exceptions
2024-11-27 14:01:06,876:INFO:Preloading libraries
2024-11-27 14:01:21,672:INFO:Initializing predict_model()
2024-11-27 14:01:21,672:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31799ad00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x32d7fdf40>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x32e48c1f0>)
2024-11-27 14:01:21,672:INFO:Checking exceptions
2024-11-27 14:01:21,672:INFO:Preloading libraries
2024-11-27 14:01:21,673:INFO:Set up data.
2024-11-27 14:01:21,692:INFO:Set up index.
2024-11-27 14:05:59,627:INFO:Initializing save_model()
2024-11-27 14:05:59,627:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x32d7fdf40>)],
         verbose=False), model_name=Modelo_Final_27_11_2024, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/c4/75scc7l95tb5q89bl9q_4kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-27 14:05:59,627:INFO:Adding model into prep_pipe
2024-11-27 14:05:59,627:WARNING:Only Model saved as it was a pipeline.
2024-11-27 14:05:59,634:INFO:Modelo_Final_27_11_2024.pkl saved in current working directory
2024-11-27 14:05:59,643:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'age', 'driving_license',
                                             'region_code',
                                             'previously_insured',
                                             'vehicle_damage', 'annual_premium',
                                             'policy_sales_channel',
                                             'vintage'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_value...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x32d7fdf40>)],
         verbose=False)
2024-11-27 14:05:59,643:INFO:save_model() successfully completed......................................
